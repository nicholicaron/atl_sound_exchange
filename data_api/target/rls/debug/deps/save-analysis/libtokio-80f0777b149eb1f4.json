{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2","program":"/home/c/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"sync\"","-C","metadata=80f0777b149eb1f4","-C","extra-filename=-80f0777b149eb1f4","--out-dir","/home/c/dev/rust/atl_sound_exchange/data_api/target/rls/debug/deps","-L","dependency=/home/c/dev/rust/atl_sound_exchange/data_api/target/rls/debug/deps","--extern","pin_project_lite=/home/c/dev/rust/atl_sound_exchange/data_api/target/rls/debug/deps/libpin_project_lite-a6a8db3c50a68696.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/c/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/c/dev/rust/atl_sound_exchange/data_api/target/rls/debug/deps/libtokio-80f0777b149eb1f4.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[2738103032129118941,0]},"crate_root":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src","external_crates":[{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3488764316664526318,0]}},{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/wake_list.rs","num":2,"id":{"name":"core","disambiguator":[8055937789589085173,0]}},{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9266852701449989672,0]}},{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3150474620658042907,0]}},{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7885665867006586706,0]}},{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12703856752884015026,0]}},{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2969720598907790989,0]}},{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2619625876091296344,0]}},{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[12464395834502290914,0]}},{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6756473508419496664,0]}},{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[15198303206847108385,0]}},{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[2772378233732002785,0]}},{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[12984264205291464654,0]}},{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17906896803061581552,0]}},{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[6255416831383744366,0]}},{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[17027395046702333165,0]}},{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[17940528507109169175,0]}},{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[16282955217049922585,0]}},{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[15640776750749541284,0]}}],"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":0,"byte_end":22774,"line_start":1,"line_end":646,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":13761},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/macros/support.rs","byte_start":40935,"byte_end":40941,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":63}},{"kind":"Use","ref_id":{"krate":2,"index":47602},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/macros/support.rs","byte_start":40961,"byte_end":40964,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":63}},{"kind":"Use","ref_id":{"krate":2,"index":50350},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/macros/support.rs","byte_start":40985,"byte_end":40989,"line_start":9,"line_end":9,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":63}},{"kind":"Use","ref_id":{"krate":0,"index":131},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49883,"byte_end":49895,"line_start":186,"line_end":186,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":110}},{"kind":"Use","ref_id":{"krate":0,"index":173},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49940,"byte_end":49949,"line_start":189,"line_end":189,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":110}},{"kind":"Use","ref_id":{"krate":0,"index":212},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49994,"byte_end":50003,"line_start":192,"line_end":192,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":110}},{"kind":"Use","ref_id":{"krate":0,"index":252},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":50050,"byte_end":50060,"line_start":195,"line_end":195,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":110}},{"kind":"Use","ref_id":{"krate":0,"index":312},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":50101,"byte_end":50108,"line_start":198,"line_end":198,"column_start":25,"column_end":32},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":110}},{"kind":"Use","ref_id":{"krate":1,"index":4084},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":50278,"byte_end":50283,"line_start":203,"line_end":203,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":110}},{"kind":"Use","ref_id":{"krate":1,"index":10958},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":50285,"byte_end":50294,"line_start":203,"line_end":203,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":110}},{"kind":"Use","ref_id":{"krate":1,"index":4082},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":50296,"byte_end":50302,"line_start":203,"line_end":203,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":110}},{"kind":"Use","ref_id":{"krate":1,"index":11094},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":50304,"byte_end":50312,"line_start":203,"line_end":203,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":110}},{"kind":"Use","ref_id":{"krate":0,"index":385},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":89782,"byte_end":89795,"line_start":30,"line_end":30,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":358}},{"kind":"Use","ref_id":{"krate":0,"index":3512},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488708,"byte_end":14488716,"line_start":433,"line_end":433,"column_start":32,"column_end":40},"alias_span":null,"name":"Notified","value":"","parent":{"krate":0,"index":1108}},{"kind":"Use","ref_id":{"krate":0,"index":3371},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488764,"byte_end":14488771,"line_start":437,"line_end":437,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":3383},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488773,"byte_end":14488790,"line_start":437,"line_end":437,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":1485},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538823,"byte_end":14538830,"line_start":93,"line_end":93,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":1337}},{"kind":"Use","ref_id":{"krate":0,"index":1479},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538832,"byte_end":14538843,"line_start":93,"line_end":93,"column_start":34,"column_end":45},"alias_span":null,"name":"OwnedPermit","value":"","parent":{"krate":0,"index":1337}},{"kind":"Use","ref_id":{"krate":0,"index":1475},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538845,"byte_end":14538851,"line_start":93,"line_end":93,"column_start":47,"column_end":53},"alias_span":null,"name":"Permit","value":"","parent":{"krate":0,"index":1337}},{"kind":"Use","ref_id":{"krate":0,"index":1482},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538853,"byte_end":14538861,"line_start":93,"line_end":93,"column_start":55,"column_end":63},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":1337}},{"kind":"Use","ref_id":{"krate":0,"index":1469},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538863,"byte_end":14538869,"line_start":93,"line_end":93,"column_start":65,"column_end":71},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":1337}},{"kind":"Use","ref_id":{"krate":0,"index":1472},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538871,"byte_end":14538881,"line_start":93,"line_end":93,"column_start":73,"column_end":83},"alias_span":null,"name":"WeakSender","value":"","parent":{"krate":0,"index":1337}},{"kind":"Use","ref_id":{"krate":0,"index":1904},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538959,"byte_end":14538976,"line_start":100,"line_end":100,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":1337}},{"kind":"Use","ref_id":{"krate":0,"index":1898},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538978,"byte_end":14538995,"line_start":100,"line_end":100,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":1337}},{"kind":"Use","ref_id":{"krate":0,"index":1889},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538997,"byte_end":14539012,"line_start":100,"line_end":100,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":1337}},{"kind":"Use","ref_id":{"krate":0,"index":2008},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488872,"byte_end":14488877,"line_start":444,"line_end":444,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":2012},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488879,"byte_end":14488889,"line_start":444,"line_end":444,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":3483},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488891,"byte_end":14488903,"line_start":444,"line_end":444,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":3484},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488891,"byte_end":14488903,"line_start":444,"line_end":444,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":2016},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488905,"byte_end":14488920,"line_start":444,"line_end":444,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":2019},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488922,"byte_end":14488938,"line_start":444,"line_end":444,"column_start":71,"column_end":87},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":3488},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488989,"byte_end":14488995,"line_start":447,"line_end":447,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":3587},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14489086,"byte_end":14489098,"line_start":452,"line_end":452,"column_start":31,"column_end":43},"alias_span":null,"name":"AcquireError","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":3577},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14489100,"byte_end":14489115,"line_start":452,"line_end":452,"column_start":45,"column_end":60},"alias_span":null,"name":"TryAcquireError","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":3594},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14489162,"byte_end":14489171,"line_start":455,"line_end":455,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":3598},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14489173,"byte_end":14489188,"line_start":455,"line_end":455,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":3605},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14489190,"byte_end":14489210,"line_start":455,"line_end":455,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":3610},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14489250,"byte_end":14489256,"line_start":458,"line_end":458,"column_start":21,"column_end":27},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":2637},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14489296,"byte_end":14489316,"line_start":459,"line_end":459,"column_start":39,"column_end":59},"alias_span":null,"name":"OwnedRwLockReadGuard","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":2698},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14489357,"byte_end":14489378,"line_start":460,"line_end":460,"column_start":40,"column_end":61},"alias_span":null,"name":"OwnedRwLockWriteGuard","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":2754},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14489426,"byte_end":14489453,"line_start":461,"line_end":461,"column_start":47,"column_end":74},"alias_span":null,"name":"OwnedRwLockMappedWriteGuard","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":2807},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14489487,"byte_end":14489502,"line_start":462,"line_end":462,"column_start":33,"column_end":48},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":2860},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14489537,"byte_end":14489553,"line_start":463,"line_end":463,"column_start":34,"column_end":50},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":2914},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14489595,"byte_end":14489617,"line_start":464,"line_end":464,"column_start":41,"column_end":63},"alias_span":null,"name":"RwLockMappedWriteGuard","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":3181},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14489722,"byte_end":14489730,"line_start":470,"line_end":470,"column_start":31,"column_end":39},"alias_span":null,"name":"OnceCell","value":"","parent":{"krate":0,"index":1107}},{"kind":"Use","ref_id":{"krate":0,"index":3618},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14489732,"byte_end":14489740,"line_start":470,"line_end":470,"column_start":41,"column_end":49},"alias_span":null,"name":"SetError","value":"","parent":{"krate":0,"index":1107}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":0,"byte_end":22774,"line_start":1,"line_end":646,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":73},{"krate":0,"index":110},{"krate":0,"index":358},{"krate":0,"index":450},{"krate":0,"index":729},{"krate":0,"index":861},{"krate":0,"index":1107},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":998},{"krate":0,"index":999}],"decl_id":null,"docs":" A runtime for writing reliable network applications without compromising speed.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n:: needless_doctest_main)","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":0,"byte_end":112,"line_start":1,"line_end":5,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":113,"byte_end":219,"line_start":6,"line_end":11,"column_start":1,"column_end":3}},{"value":"deny(unused_must_use)","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":220,"byte_end":245,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/ A runtime for writing reliable network applications without compromising speed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":504,"byte_end":587,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":588,"byte_end":591,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":592,"byte_end":672,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":673,"byte_end":745,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":746,"byte_end":782,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":783,"byte_end":786,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":787,"byte_end":854,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, sleeps, and","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":855,"byte_end":935,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":936,"byte_end":959,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":960,"byte_end":1047,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1048,"byte_end":1121,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1122,"byte_end":1200,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1201,"byte_end":1281,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1282,"byte_end":1332,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1333,"byte_end":1336,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1337,"byte_end":1393,"line_start":36,"line_end":36,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1394,"byte_end":1397,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1398,"byte_end":1430,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1431,"byte_end":1454,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1455,"byte_end":1478,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1479,"byte_end":1505,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1506,"byte_end":1527,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1528,"byte_end":1547,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1548,"byte_end":1577,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1578,"byte_end":1605,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1606,"byte_end":1625,"line_start":46,"line_end":46,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1626,"byte_end":1655,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1656,"byte_end":1702,"line_start":48,"line_end":48,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1703,"byte_end":1706,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1707,"byte_end":1728,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1729,"byte_end":1732,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1733,"byte_end":1812,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1813,"byte_end":1886,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1887,"byte_end":1966,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1967,"byte_end":1982,"line_start":55,"line_end":55,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1983,"byte_end":1986,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":1987,"byte_end":2059,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2060,"byte_end":2097,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2098,"byte_end":2101,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2102,"byte_end":2113,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2114,"byte_end":2164,"line_start":61,"line_end":61,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2165,"byte_end":2172,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2173,"byte_end":2176,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2177,"byte_end":2207,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2208,"byte_end":2211,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2212,"byte_end":2293,"line_start":66,"line_end":66,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2294,"byte_end":2379,"line_start":67,"line_end":67,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2380,"byte_end":2464,"line_start":68,"line_end":68,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2465,"byte_end":2495,"line_start":69,"line_end":69,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2496,"byte_end":2499,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2500,"byte_end":2516,"line_start":71,"line_end":71,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2517,"byte_end":2520,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2521,"byte_end":2587,"line_start":73,"line_end":73,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2588,"byte_end":2591,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2592,"byte_end":2603,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2604,"byte_end":2654,"line_start":76,"line_end":76,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2655,"byte_end":2662,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2663,"byte_end":2666,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2667,"byte_end":2694,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2695,"byte_end":2698,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lightest weight crate","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2699,"byte_end":2779,"line_start":81,"line_end":81,"column_start":1,"column_end":81}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2780,"byte_end":2862,"line_start":82,"line_end":82,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2863,"byte_end":2944,"line_start":83,"line_end":83,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2945,"byte_end":2980,"line_start":84,"line_end":84,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2981,"byte_end":2984,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":2985,"byte_end":3001,"line_start":86,"line_end":86,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3002,"byte_end":3005,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3006,"byte_end":3088,"line_start":88,"line_end":88,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3089,"byte_end":3139,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3140,"byte_end":3143,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3144,"byte_end":3155,"line_start":91,"line_end":91,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"rt\", \"net\"] }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3156,"byte_end":3211,"line_start":92,"line_end":92,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3212,"byte_end":3219,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3220,"byte_end":3223,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3224,"byte_end":3249,"line_start":95,"line_end":95,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3250,"byte_end":3253,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3254,"byte_end":3330,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3331,"byte_end":3414,"line_start":98,"line_end":98,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3415,"byte_end":3458,"line_start":99,"line_end":99,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3459,"byte_end":3462,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3463,"byte_end":3542,"line_start":101,"line_end":101,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3543,"byte_end":3626,"line_start":102,"line_end":102,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3627,"byte_end":3705,"line_start":103,"line_end":103,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3706,"byte_end":3725,"line_start":104,"line_end":104,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3726,"byte_end":3729,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt\" feature flag","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3730,"byte_end":3803,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ is enabled.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3804,"byte_end":3819,"line_start":107,"line_end":107,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3820,"byte_end":3823,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3824,"byte_end":3867,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3868,"byte_end":3900,"line_start":110,"line_end":110,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3901,"byte_end":3936,"line_start":111,"line_end":111,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3937,"byte_end":3980,"line_start":112,"line_end":112,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":3981,"byte_end":4034,"line_start":113,"line_end":113,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4035,"byte_end":4038,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4039,"byte_end":4117,"line_start":115,"line_end":115,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4118,"byte_end":4174,"line_start":116,"line_end":116,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4175,"byte_end":4178,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], [`watch`], and [`broadcast`]), for sending values","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4179,"byte_end":4267,"line_start":118,"line_end":118,"column_start":1,"column_end":89}},{"value":"/   between tasks,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4268,"byte_end":4288,"line_start":119,"line_end":119,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4289,"byte_end":4364,"line_start":120,"line_end":120,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4365,"byte_end":4377,"line_start":121,"line_end":121,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4378,"byte_end":4458,"line_start":122,"line_end":122,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4459,"byte_end":4489,"line_start":123,"line_end":123,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4490,"byte_end":4493,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4494,"byte_end":4570,"line_start":125,"line_end":125,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4571,"byte_end":4583,"line_start":126,"line_end":126,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4584,"byte_end":4587,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4588,"byte_end":4620,"line_start":128,"line_end":128,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4621,"byte_end":4654,"line_start":129,"line_end":129,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4655,"byte_end":4692,"line_start":130,"line_end":130,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4693,"byte_end":4730,"line_start":131,"line_end":131,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4731,"byte_end":4762,"line_start":132,"line_end":132,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4763,"byte_end":4796,"line_start":133,"line_end":133,"column_start":1,"column_end":34}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4797,"byte_end":4838,"line_start":134,"line_end":134,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4839,"byte_end":4842,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4843,"byte_end":4914,"line_start":136,"line_end":136,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4915,"byte_end":4995,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ tasks, [sleeping][sleep] work to run in the future, or [repeating an operation at an","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":4996,"byte_end":5084,"line_start":138,"line_end":138,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5085,"byte_end":5109,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5110,"byte_end":5113,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5114,"byte_end":5189,"line_start":141,"line_end":141,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5190,"byte_end":5193,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5194,"byte_end":5226,"line_start":143,"line_end":143,"column_start":1,"column_end":33}},{"value":"/ [sleep]: crate::time::sleep()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5227,"byte_end":5260,"line_start":144,"line_end":144,"column_start":1,"column_end":34}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5261,"byte_end":5300,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5301,"byte_end":5338,"line_start":146,"line_end":146,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5339,"byte_end":5342,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5343,"byte_end":5421,"line_start":148,"line_end":148,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5422,"byte_end":5506,"line_start":149,"line_end":149,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. However, this macro provides only basic configuration options. As","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5507,"byte_end":5591,"line_start":150,"line_end":150,"column_start":1,"column_end":85}},{"value":"/ an alternative, the [`tokio::runtime`] module provides more powerful APIs for configuring","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5592,"byte_end":5685,"line_start":151,"line_end":151,"column_start":1,"column_end":94}},{"value":"/ and managing runtimes. You should use that module if the `#[tokio::main]` macro doesn't","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5686,"byte_end":5777,"line_start":152,"line_end":152,"column_start":1,"column_end":92}},{"value":"/ provide the functionality you need.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5778,"byte_end":5817,"line_start":153,"line_end":153,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5818,"byte_end":5821,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt\" or \"rt-multi-thread\" feature flags, to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5822,"byte_end":5900,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ enable the current-thread [single-threaded scheduler][rt] and the [multi-thread","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5901,"byte_end":5984,"line_start":156,"line_end":156,"column_start":1,"column_end":84}},{"value":"/ scheduler][rt-multi-thread], respectively. See the [`runtime` module","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":5985,"byte_end":6057,"line_start":157,"line_end":157,"column_start":1,"column_end":73}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6058,"byte_end":6136,"line_start":158,"line_end":158,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6137,"byte_end":6207,"line_start":159,"line_end":159,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6208,"byte_end":6211,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6212,"byte_end":6238,"line_start":161,"line_end":161,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6239,"byte_end":6277,"line_start":162,"line_end":162,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6278,"byte_end":6318,"line_start":163,"line_end":163,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6319,"byte_end":6359,"line_start":164,"line_end":164,"column_start":1,"column_end":41}},{"value":"/ [rt]: runtime/index.html#current-thread-scheduler","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6360,"byte_end":6413,"line_start":165,"line_end":165,"column_start":1,"column_end":54}},{"value":"/ [rt-multi-thread]: runtime/index.html#multi-thread-scheduler","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6414,"byte_end":6478,"line_start":166,"line_end":166,"column_start":1,"column_end":65}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6479,"byte_end":6534,"line_start":167,"line_end":167,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6535,"byte_end":6538,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6539,"byte_end":6579,"line_start":169,"line_end":169,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6580,"byte_end":6583,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6584,"byte_end":6663,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6664,"byte_end":6741,"line_start":172,"line_end":172,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6742,"byte_end":6822,"line_start":173,"line_end":173,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6823,"byte_end":6897,"line_start":174,"line_end":174,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6898,"byte_end":6977,"line_start":175,"line_end":175,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":6978,"byte_end":7055,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7056,"byte_end":7129,"line_start":177,"line_end":177,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, can be used to run blocking code that would otherwise","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7130,"byte_end":7206,"line_start":178,"line_end":178,"column_start":1,"column_end":77}},{"value":"/ block other tasks from running and are kept alive when not used for a certain","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7207,"byte_end":7288,"line_start":179,"line_end":179,"column_start":1,"column_end":82}},{"value":"/ amount of time which can be configured with [`thread_keep_alive`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7289,"byte_end":7359,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ Since it is not possible for Tokio to swap out blocking tasks, like it","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7360,"byte_end":7434,"line_start":181,"line_end":181,"column_start":1,"column_end":75}},{"value":"/ can do with asynchronous code, the upper limit on the number of blocking","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7435,"byte_end":7511,"line_start":182,"line_end":182,"column_start":1,"column_end":77}},{"value":"/ threads is very large. These limits can be configured on the [`Builder`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7512,"byte_end":7589,"line_start":183,"line_end":183,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7590,"byte_end":7593,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7594,"byte_end":7671,"line_start":185,"line_end":185,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7672,"byte_end":7675,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7676,"byte_end":7716,"line_start":187,"line_end":187,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7717,"byte_end":7770,"line_start":188,"line_end":188,"column_start":1,"column_end":54}},{"value":"/ [`thread_keep_alive`]: crate::runtime::Builder::thread_keep_alive()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7771,"byte_end":7842,"line_start":189,"line_end":189,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7843,"byte_end":7846,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7847,"byte_end":7854,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7855,"byte_end":7873,"line_start":192,"line_end":192,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7874,"byte_end":7895,"line_start":193,"line_end":193,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7896,"byte_end":7940,"line_start":194,"line_end":194,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7941,"byte_end":7944,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":7945,"byte_end":8005,"line_start":196,"line_end":196,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8006,"byte_end":8058,"line_start":197,"line_end":197,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8059,"byte_end":8094,"line_start":198,"line_end":198,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8095,"byte_end":8106,"line_start":199,"line_end":199,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8107,"byte_end":8110,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8111,"byte_end":8166,"line_start":201,"line_end":201,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8167,"byte_end":8242,"line_start":202,"line_end":202,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8243,"byte_end":8260,"line_start":203,"line_end":203,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8261,"byte_end":8298,"line_start":204,"line_end":204,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8299,"byte_end":8304,"line_start":205,"line_end":205,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8305,"byte_end":8312,"line_start":206,"line_end":206,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8313,"byte_end":8316,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8317,"byte_end":8395,"line_start":208,"line_end":208,"column_start":1,"column_end":79}},{"value":"/ to run it, you should use a separate thread pool dedicated to CPU bound tasks.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8396,"byte_end":8478,"line_start":209,"line_end":209,"column_start":1,"column_end":83}},{"value":"/ For example, you could consider using the [rayon] library for CPU-bound","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8479,"byte_end":8554,"line_start":210,"line_end":210,"column_start":1,"column_end":76}},{"value":"/ tasks. It is also possible to create an extra Tokio runtime dedicated to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8555,"byte_end":8631,"line_start":211,"line_end":211,"column_start":1,"column_end":77}},{"value":"/ CPU-bound tasks, but if you do this, you should be careful that the extra","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8632,"byte_end":8709,"line_start":212,"line_end":212,"column_start":1,"column_end":78}},{"value":"/ runtime runs _only_ CPU-bound tasks, as IO-bound tasks on that runtime","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8710,"byte_end":8784,"line_start":213,"line_end":213,"column_start":1,"column_end":75}},{"value":"/ will behave poorly.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8785,"byte_end":8808,"line_start":214,"line_end":214,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8809,"byte_end":8812,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Hint: If using rayon, you can use a [`oneshot`] channel to send the result back","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8813,"byte_end":8896,"line_start":216,"line_end":216,"column_start":1,"column_end":84}},{"value":"/ to Tokio when the rayon task finishes.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8897,"byte_end":8939,"line_start":217,"line_end":217,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8940,"byte_end":8943,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8944,"byte_end":8978,"line_start":219,"line_end":219,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":8979,"byte_end":9016,"line_start":220,"line_end":220,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9017,"byte_end":9020,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9021,"byte_end":9043,"line_start":222,"line_end":222,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9044,"byte_end":9047,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9048,"byte_end":9127,"line_start":224,"line_end":224,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9128,"byte_end":9175,"line_start":225,"line_end":225,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9176,"byte_end":9179,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9180,"byte_end":9259,"line_start":227,"line_end":227,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9260,"byte_end":9340,"line_start":228,"line_end":228,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9341,"byte_end":9421,"line_start":229,"line_end":229,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9422,"byte_end":9493,"line_start":230,"line_end":230,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9494,"byte_end":9525,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9526,"byte_end":9529,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9530,"byte_end":9610,"line_start":233,"line_end":233,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9611,"byte_end":9671,"line_start":234,"line_end":234,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9672,"byte_end":9675,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9676,"byte_end":9755,"line_start":236,"line_end":236,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9756,"byte_end":9825,"line_start":237,"line_end":237,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9826,"byte_end":9903,"line_start":238,"line_end":238,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9904,"byte_end":9960,"line_start":239,"line_end":239,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":9961,"byte_end":10041,"line_start":240,"line_end":240,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10042,"byte_end":10087,"line_start":241,"line_end":241,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10088,"byte_end":10167,"line_start":242,"line_end":242,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10168,"byte_end":10202,"line_start":243,"line_end":243,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10203,"byte_end":10206,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10207,"byte_end":10235,"line_start":245,"line_end":245,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10236,"byte_end":10275,"line_start":246,"line_end":246,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10276,"byte_end":10317,"line_start":247,"line_end":247,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10318,"byte_end":10363,"line_start":248,"line_end":248,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10364,"byte_end":10388,"line_start":249,"line_end":249,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10389,"byte_end":10419,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10420,"byte_end":10446,"line_start":251,"line_end":251,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::UdpSocket","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10447,"byte_end":10479,"line_start":252,"line_end":252,"column_start":1,"column_end":33}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10480,"byte_end":10507,"line_start":253,"line_end":253,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10508,"byte_end":10536,"line_start":254,"line_end":254,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10537,"byte_end":10561,"line_start":255,"line_end":255,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10562,"byte_end":10598,"line_start":256,"line_end":256,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10599,"byte_end":10637,"line_start":257,"line_end":257,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10638,"byte_end":10641,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10642,"byte_end":10656,"line_start":259,"line_end":259,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10657,"byte_end":10660,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10661,"byte_end":10690,"line_start":261,"line_end":261,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10691,"byte_end":10694,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10695,"byte_end":10708,"line_start":263,"line_end":263,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10709,"byte_end":10741,"line_start":264,"line_end":264,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10742,"byte_end":10791,"line_start":265,"line_end":265,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10792,"byte_end":10795,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10796,"byte_end":10814,"line_start":267,"line_end":267,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10815,"byte_end":10878,"line_start":268,"line_end":268,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10879,"byte_end":10945,"line_start":269,"line_end":269,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10946,"byte_end":10949,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10950,"byte_end":10964,"line_start":271,"line_end":271,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":10965,"byte_end":11024,"line_start":272,"line_end":272,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11025,"byte_end":11028,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11029,"byte_end":11066,"line_start":274,"line_end":274,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11067,"byte_end":11107,"line_start":275,"line_end":275,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11108,"byte_end":11111,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11112,"byte_end":11192,"line_start":277,"line_end":277,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11193,"byte_end":11215,"line_start":278,"line_end":278,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11216,"byte_end":11279,"line_start":279,"line_end":279,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11280,"byte_end":11320,"line_start":280,"line_end":280,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11321,"byte_end":11371,"line_start":281,"line_end":281,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11372,"byte_end":11407,"line_start":282,"line_end":282,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11408,"byte_end":11443,"line_start":283,"line_end":283,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11444,"byte_end":11527,"line_start":284,"line_end":284,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11528,"byte_end":11563,"line_start":285,"line_end":285,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11564,"byte_end":11589,"line_start":286,"line_end":286,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11590,"byte_end":11612,"line_start":287,"line_end":287,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11613,"byte_end":11616,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11617,"byte_end":11659,"line_start":289,"line_end":289,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11660,"byte_end":11732,"line_start":290,"line_end":290,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11733,"byte_end":11811,"line_start":291,"line_end":291,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11812,"byte_end":11843,"line_start":292,"line_end":292,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11844,"byte_end":11865,"line_start":293,"line_end":293,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11866,"byte_end":11883,"line_start":294,"line_end":294,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11884,"byte_end":11899,"line_start":295,"line_end":295,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11900,"byte_end":11909,"line_start":296,"line_end":296,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11910,"byte_end":11915,"line_start":297,"line_end":297,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11916,"byte_end":11923,"line_start":298,"line_end":298,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11924,"byte_end":11927,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11928,"byte_end":11948,"line_start":300,"line_end":300,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11949,"byte_end":11952,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":11953,"byte_end":12034,"line_start":302,"line_end":302,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":12035,"byte_end":12113,"line_start":303,"line_end":303,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":12114,"byte_end":12194,"line_start":304,"line_end":304,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":12195,"byte_end":12272,"line_start":305,"line_end":305,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":12273,"byte_end":12356,"line_start":306,"line_end":306,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":12357,"byte_end":12434,"line_start":307,"line_end":307,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":12435,"byte_end":12522,"line_start":308,"line_end":308,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":12523,"byte_end":12604,"line_start":309,"line_end":309,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":12605,"byte_end":12614,"line_start":310,"line_end":310,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":12615,"byte_end":12618,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all features listed below except `test-util` and `tracing`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":12619,"byte_end":12700,"line_start":312,"line_end":312,"column_start":1,"column_end":82}},{"value":"/ - `rt`: Enables `tokio::spawn`, the current-thread scheduler,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":12701,"byte_end":12766,"line_start":313,"line_end":313,"column_start":1,"column_end":66}},{"value":"/         and non-scheduler utilities.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":12767,"byte_end":12807,"line_start":314,"line_end":314,"column_start":1,"column_end":41}},{"value":"/ - `rt-multi-thread`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":12808,"byte_end":12894,"line_start":315,"line_end":315,"column_start":1,"column_end":87}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":12895,"byte_end":12946,"line_start":316,"line_end":316,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":12947,"byte_end":13007,"line_start":317,"line_end":317,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13008,"byte_end":13085,"line_start":318,"line_end":318,"column_start":1,"column_end":78}},{"value":"/          `UdpSocket`, as well as (on Unix-like systems) `AsyncFd` and (on","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13086,"byte_end":13163,"line_start":319,"line_end":319,"column_start":1,"column_end":78}},{"value":"/          FreeBSD) `PollAio`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13164,"byte_end":13196,"line_start":320,"line_end":320,"column_start":1,"column_end":33}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13197,"byte_end":13274,"line_start":321,"line_end":321,"column_start":1,"column_end":78}},{"value":"/           the built in timer.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13275,"byte_end":13308,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13309,"byte_end":13357,"line_start":323,"line_end":323,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13358,"byte_end":13427,"line_start":324,"line_end":324,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13428,"byte_end":13474,"line_start":325,"line_end":325,"column_start":1,"column_end":47}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13475,"byte_end":13525,"line_start":326,"line_end":326,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13526,"byte_end":13564,"line_start":327,"line_end":327,"column_start":1,"column_end":39}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13565,"byte_end":13643,"line_start":328,"line_end":328,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13644,"byte_end":13647,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13648,"byte_end":13730,"line_start":330,"line_end":330,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13731,"byte_end":13753,"line_start":331,"line_end":331,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13754,"byte_end":13757,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13758,"byte_end":13783,"line_start":333,"line_end":333,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13784,"byte_end":13787,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13788,"byte_end":13856,"line_start":335,"line_end":335,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13857,"byte_end":13920,"line_start":336,"line_end":336,"column_start":1,"column_end":64}},{"value":"/ dependencies.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13921,"byte_end":13938,"line_start":337,"line_end":337,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13939,"byte_end":13942,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":13943,"byte_end":14022,"line_start":339,"line_end":339,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14023,"byte_end":14100,"line_start":340,"line_end":340,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14101,"byte_end":14134,"line_start":341,"line_end":341,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14135,"byte_end":14138,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ ### Unstable features","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14139,"byte_end":14164,"line_start":343,"line_end":343,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14165,"byte_end":14168,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ Some feature flags are only available when specifying the `tokio_unstable` flag:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14169,"byte_end":14253,"line_start":345,"line_end":345,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14254,"byte_end":14257,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ - `tracing`: Enables tracing events.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14258,"byte_end":14298,"line_start":347,"line_end":347,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14299,"byte_end":14302,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ Likewise, some parts of the API are only available with the same flag:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14303,"byte_end":14377,"line_start":349,"line_end":349,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14378,"byte_end":14381,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ - [`task::Builder`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14382,"byte_end":14405,"line_start":351,"line_end":351,"column_start":1,"column_end":24}},{"value":"/ - Some methods on [`task::JoinSet`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14406,"byte_end":14445,"line_start":352,"line_end":352,"column_start":1,"column_end":40}},{"value":"/ - [`runtime::RuntimeMetrics`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14446,"byte_end":14479,"line_start":353,"line_end":353,"column_start":1,"column_end":34}},{"value":"/ - [`runtime::Builder::unhandled_panic`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14480,"byte_end":14523,"line_start":354,"line_end":354,"column_start":1,"column_end":44}},{"value":"/ - [`task::Id`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14524,"byte_end":14542,"line_start":355,"line_end":355,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14543,"byte_end":14546,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ This flag enables **unstable** features. The public API of these features","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14547,"byte_end":14624,"line_start":357,"line_end":357,"column_start":1,"column_end":78}},{"value":"/ may break in 1.x releases. To enable these features, the `--cfg","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14625,"byte_end":14692,"line_start":358,"line_end":358,"column_start":1,"column_end":68}},{"value":"/ tokio_unstable` argument must be passed to `rustc` when compiling. This","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14693,"byte_end":14768,"line_start":359,"line_end":359,"column_start":1,"column_end":76}},{"value":"/ serves to explicitly opt-in to features which may break semver conventions,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14769,"byte_end":14848,"line_start":360,"line_end":360,"column_start":1,"column_end":80}},{"value":"/ since Cargo [does not yet directly support such opt-ins][unstable features].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14849,"byte_end":14929,"line_start":361,"line_end":361,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14930,"byte_end":14933,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ You can specify it in your project's `.cargo/config.toml` file:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":14934,"byte_end":15001,"line_start":363,"line_end":363,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15002,"byte_end":15005,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15006,"byte_end":15017,"line_start":365,"line_end":365,"column_start":1,"column_end":12}},{"value":"/ [build]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15018,"byte_end":15029,"line_start":366,"line_end":366,"column_start":1,"column_end":12}},{"value":"/ rustflags = [\"--cfg\", \"tokio_unstable\"]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15030,"byte_end":15073,"line_start":367,"line_end":367,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15074,"byte_end":15081,"line_start":368,"line_end":368,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15082,"byte_end":15085,"line_start":369,"line_end":369,"column_start":1,"column_end":4}},{"value":"/ Alternatively, you can specify it with an environment variable:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15086,"byte_end":15153,"line_start":370,"line_end":370,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15154,"byte_end":15157,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ ```sh","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15158,"byte_end":15167,"line_start":372,"line_end":372,"column_start":1,"column_end":10}},{"value":"/ ## Many *nix shells:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15168,"byte_end":15192,"line_start":373,"line_end":373,"column_start":1,"column_end":25}},{"value":"/ export RUSTFLAGS=\"--cfg tokio_unstable\"","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15193,"byte_end":15236,"line_start":374,"line_end":374,"column_start":1,"column_end":44}},{"value":"/ cargo build","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15237,"byte_end":15252,"line_start":375,"line_end":375,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15253,"byte_end":15260,"line_start":376,"line_end":376,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15261,"byte_end":15264,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ ```powershell","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15265,"byte_end":15282,"line_start":378,"line_end":378,"column_start":1,"column_end":18}},{"value":"/ ## Windows PowerShell:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15283,"byte_end":15309,"line_start":379,"line_end":379,"column_start":1,"column_end":27}},{"value":"/ $Env:RUSTFLAGS=\"--cfg tokio_unstable\"","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15310,"byte_end":15351,"line_start":380,"line_end":380,"column_start":1,"column_end":42}},{"value":"/ cargo build","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15352,"byte_end":15367,"line_start":381,"line_end":381,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15368,"byte_end":15375,"line_start":382,"line_end":382,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15376,"byte_end":15379,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ [unstable features]: https://internals.rust-lang.org/t/feature-request-unstable-opt-in-non-transitive-crate-features/16193#why-not-a-crate-feature-2","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15380,"byte_end":15532,"line_start":384,"line_end":384,"column_start":1,"column_end":153}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15533,"byte_end":15630,"line_start":385,"line_end":385,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15631,"byte_end":15634,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ ## WASM support","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15635,"byte_end":15654,"line_start":387,"line_end":387,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15655,"byte_end":15658,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ Tokio has some limited support for the WASM platform. Without the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15659,"byte_end":15728,"line_start":389,"line_end":389,"column_start":1,"column_end":70}},{"value":"/ `tokio_unstable` flag, the following features are supported:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15729,"byte_end":15793,"line_start":390,"line_end":390,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15794,"byte_end":15797,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/  * `sync`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15798,"byte_end":15811,"line_start":392,"line_end":392,"column_start":1,"column_end":14}},{"value":"/  * `macros`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15812,"byte_end":15827,"line_start":393,"line_end":393,"column_start":1,"column_end":16}},{"value":"/  * `io-util`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15828,"byte_end":15844,"line_start":394,"line_end":394,"column_start":1,"column_end":17}},{"value":"/  * `rt`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15845,"byte_end":15856,"line_start":395,"line_end":395,"column_start":1,"column_end":12}},{"value":"/  * `time`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15857,"byte_end":15870,"line_start":396,"line_end":396,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15871,"byte_end":15874,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ Enabling any other feature (including `full`) will cause a compilation","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15875,"byte_end":15949,"line_start":398,"line_end":398,"column_start":1,"column_end":75}},{"value":"/ failure.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15950,"byte_end":15962,"line_start":399,"line_end":399,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15963,"byte_end":15966,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ The `time` module will only work on WASM platforms that have support for","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":15967,"byte_end":16043,"line_start":401,"line_end":401,"column_start":1,"column_end":77}},{"value":"/ timers (e.g. wasm32-wasi). The timing functions will panic if used on a WASM","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":16044,"byte_end":16124,"line_start":402,"line_end":402,"column_start":1,"column_end":81}},{"value":"/ platform that does not support timers.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":16125,"byte_end":16167,"line_start":403,"line_end":403,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":16168,"byte_end":16171,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ Note also that if the runtime becomes indefinitely idle, it will panic","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":16172,"byte_end":16246,"line_start":405,"line_end":405,"column_start":1,"column_end":75}},{"value":"/ immediately instead of blocking forever. On platforms that don't support","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":16247,"byte_end":16323,"line_start":406,"line_end":406,"column_start":1,"column_end":77}},{"value":"/ time, this means that the runtime can never be idle in any way.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":16324,"byte_end":16391,"line_start":407,"line_end":407,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":16392,"byte_end":16395,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ ### Unstable WASM support","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":16396,"byte_end":16425,"line_start":409,"line_end":409,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":16426,"byte_end":16429,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ Tokio also has unstable support for some additional WASM features. This","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":16430,"byte_end":16505,"line_start":411,"line_end":411,"column_start":1,"column_end":76}},{"value":"/ requires the use of the `tokio_unstable` flag.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":16506,"byte_end":16556,"line_start":412,"line_end":412,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":16557,"byte_end":16560,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ Using this flag enables the use of `tokio::net` on the wasm32-wasi target.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":16561,"byte_end":16639,"line_start":414,"line_end":414,"column_start":1,"column_end":79}},{"value":"/ However, not all methods are available on the networking types as WASI","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":16640,"byte_end":16714,"line_start":415,"line_end":415,"column_start":1,"column_end":75}},{"value":"/ currently does not support the creation of new sockets from within WASM.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":16715,"byte_end":16791,"line_start":416,"line_end":416,"column_start":1,"column_end":77}},{"value":"/ Because of this, sockets must currently be created via the `FromRawFd`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":16792,"byte_end":16866,"line_start":417,"line_end":417,"column_start":1,"column_end":75}},{"value":"/ trait.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":16867,"byte_end":16877,"line_start":418,"line_end":418,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":63}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":18556,"byte_end":18568,"line_start":468,"line_end":468,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/macros/mod.rs","byte_start":22811,"byte_end":22831,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":63},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":110},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":355}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":42335,"byte_end":42412,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":42413,"byte_end":42416,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":42417,"byte_end":42488,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":42489,"byte_end":42569,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":42570,"byte_end":42644,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":42645,"byte_end":42648,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":42649,"byte_end":42679,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":42680,"byte_end":42683,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":42684,"byte_end":42764,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":42765,"byte_end":42842,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":42843,"byte_end":42920,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":42921,"byte_end":43001,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":43002,"byte_end":43080,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":43081,"byte_end":43146,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":43147,"byte_end":43150,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":43151,"byte_end":43223,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":43224,"byte_end":43291,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":43292,"byte_end":43371,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":43372,"byte_end":43446,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":43447,"byte_end":43521,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":43522,"byte_end":43539,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":43540,"byte_end":43543,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":43544,"byte_end":43608,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":43609,"byte_end":43684,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":43685,"byte_end":43760,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":43761,"byte_end":43838,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":43839,"byte_end":43842,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":43843,"byte_end":43919,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":43920,"byte_end":43995,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":43996,"byte_end":44076,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44077,"byte_end":44148,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44149,"byte_end":44218,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44219,"byte_end":44222,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44223,"byte_end":44295,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44296,"byte_end":44376,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44377,"byte_end":44430,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44431,"byte_end":44434,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44435,"byte_end":44448,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44449,"byte_end":44489,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44490,"byte_end":44514,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44515,"byte_end":44518,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44519,"byte_end":44537,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44538,"byte_end":44577,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44578,"byte_end":44627,"line_start":44,"line_end":44,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44628,"byte_end":44661,"line_start":45,"line_end":45,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44662,"byte_end":44665,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44666,"byte_end":44696,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44697,"byte_end":44740,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44741,"byte_end":44744,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44745,"byte_end":44795,"line_start":50,"line_end":50,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44796,"byte_end":44810,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44811,"byte_end":44816,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44817,"byte_end":44824,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44825,"byte_end":44828,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44829,"byte_end":44858,"line_start":55,"line_end":55,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44859,"byte_end":44899,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44900,"byte_end":44936,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44937,"byte_end":44978,"line_start":58,"line_end":58,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44979,"byte_end":44982,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":44983,"byte_end":45018,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45019,"byte_end":45022,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45023,"byte_end":45104,"line_start":62,"line_end":62,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45105,"byte_end":45179,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45180,"byte_end":45258,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45259,"byte_end":45303,"line_start":65,"line_end":65,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45304,"byte_end":45307,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45308,"byte_end":45378,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45379,"byte_end":45457,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45458,"byte_end":45536,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45537,"byte_end":45614,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45615,"byte_end":45618,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45619,"byte_end":45694,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45695,"byte_end":45733,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45734,"byte_end":45737,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45738,"byte_end":45751,"line_start":75,"line_end":75,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45752,"byte_end":45806,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45807,"byte_end":45831,"line_start":77,"line_end":77,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45832,"byte_end":45835,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45836,"byte_end":45854,"line_start":79,"line_end":79,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45855,"byte_end":45894,"line_start":80,"line_end":80,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45895,"byte_end":45940,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45941,"byte_end":45984,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":45985,"byte_end":46024,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46025,"byte_end":46028,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46029,"byte_end":46063,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46064,"byte_end":46109,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46110,"byte_end":46113,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46114,"byte_end":46145,"line_start":88,"line_end":88,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46146,"byte_end":46160,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46161,"byte_end":46166,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46167,"byte_end":46174,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46175,"byte_end":46178,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46179,"byte_end":46260,"line_start":93,"line_end":93,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46261,"byte_end":46339,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46340,"byte_end":46402,"line_start":95,"line_end":95,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46403,"byte_end":46406,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46407,"byte_end":46420,"line_start":97,"line_end":97,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46421,"byte_end":46473,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46474,"byte_end":46498,"line_start":99,"line_end":99,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46499,"byte_end":46502,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46503,"byte_end":46521,"line_start":101,"line_end":101,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46522,"byte_end":46561,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46562,"byte_end":46609,"line_start":103,"line_end":103,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46610,"byte_end":46619,"line_start":104,"line_end":104,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46620,"byte_end":46667,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46668,"byte_end":46671,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46672,"byte_end":46714,"line_start":107,"line_end":107,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46715,"byte_end":46756,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46757,"byte_end":46760,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46761,"byte_end":46821,"line_start":110,"line_end":110,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46822,"byte_end":46856,"line_start":111,"line_end":111,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46857,"byte_end":46860,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46861,"byte_end":46951,"line_start":113,"line_end":113,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46952,"byte_end":46955,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46956,"byte_end":46970,"line_start":115,"line_end":115,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46971,"byte_end":46976,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46977,"byte_end":46984,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46985,"byte_end":46988,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":46989,"byte_end":47034,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47035,"byte_end":47077,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47078,"byte_end":47123,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47124,"byte_end":47163,"line_start":122,"line_end":122,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47164,"byte_end":47203,"line_start":123,"line_end":123,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47204,"byte_end":47207,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47208,"byte_end":47252,"line_start":125,"line_end":125,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47253,"byte_end":47256,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47257,"byte_end":47339,"line_start":127,"line_end":127,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47340,"byte_end":47419,"line_start":128,"line_end":128,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47420,"byte_end":47494,"line_start":129,"line_end":129,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47495,"byte_end":47568,"line_start":130,"line_end":130,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47569,"byte_end":47629,"line_start":131,"line_end":131,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47630,"byte_end":47633,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47634,"byte_end":47675,"line_start":133,"line_end":133,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47676,"byte_end":47679,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47680,"byte_end":47748,"line_start":135,"line_end":135,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47749,"byte_end":47818,"line_start":136,"line_end":136,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47819,"byte_end":47885,"line_start":137,"line_end":137,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47886,"byte_end":47949,"line_start":138,"line_end":138,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":47950,"byte_end":48017,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48018,"byte_end":48087,"line_start":140,"line_end":140,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48088,"byte_end":48158,"line_start":141,"line_end":141,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48159,"byte_end":48237,"line_start":142,"line_end":142,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48238,"byte_end":48263,"line_start":143,"line_end":143,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48264,"byte_end":48267,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48268,"byte_end":48344,"line_start":145,"line_end":145,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48345,"byte_end":48348,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48349,"byte_end":48380,"line_start":147,"line_end":147,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48381,"byte_end":48384,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48385,"byte_end":48465,"line_start":149,"line_end":149,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48466,"byte_end":48542,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48543,"byte_end":48590,"line_start":151,"line_end":151,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48591,"byte_end":48594,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48595,"byte_end":48668,"line_start":153,"line_end":153,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48669,"byte_end":48745,"line_start":154,"line_end":154,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48746,"byte_end":48822,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48823,"byte_end":48826,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48827,"byte_end":48848,"line_start":157,"line_end":157,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48849,"byte_end":48872,"line_start":158,"line_end":158,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48873,"byte_end":48895,"line_start":159,"line_end":159,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48896,"byte_end":48899,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48900,"byte_end":48922,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48923,"byte_end":48926,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":48927,"byte_end":49003,"line_start":163,"line_end":163,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49004,"byte_end":49051,"line_start":164,"line_end":164,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49052,"byte_end":49055,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49056,"byte_end":49090,"line_start":166,"line_end":166,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49091,"byte_end":49127,"line_start":167,"line_end":167,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49128,"byte_end":49168,"line_start":168,"line_end":168,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49169,"byte_end":49211,"line_start":169,"line_end":169,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49212,"byte_end":49285,"line_start":170,"line_end":170,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49286,"byte_end":49369,"line_start":171,"line_end":171,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49370,"byte_end":49453,"line_start":172,"line_end":172,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49454,"byte_end":49481,"line_start":173,"line_end":173,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49482,"byte_end":49515,"line_start":174,"line_end":174,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49516,"byte_end":49543,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49544,"byte_end":49571,"line_start":176,"line_end":176,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49572,"byte_end":49603,"line_start":177,"line_end":177,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49604,"byte_end":49674,"line_start":178,"line_end":178,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.3/futures/stream/trait.Stream.html","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49675,"byte_end":49751,"line_start":179,"line_end":179,"column_start":1,"column_end":77}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/mod.rs","byte_start":49752,"byte_end":49781,"line_start":180,"line_end":180,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":131},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52779,"byte_end":52791,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52102,"byte_end":52133,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52134,"byte_end":52137,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52138,"byte_end":52210,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52211,"byte_end":52289,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52290,"byte_end":52376,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52377,"byte_end":52454,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52455,"byte_end":52466,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52467,"byte_end":52470,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52471,"byte_end":52539,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52540,"byte_end":52564,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52565,"byte_end":52568,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52569,"byte_end":52611,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52612,"byte_end":52662,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52663,"byte_end":52716,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52717,"byte_end":52768,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53889,"byte_end":53902,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52809,"byte_end":52894,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52899,"byte_end":52940,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52945,"byte_end":52948,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52953,"byte_end":53000,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53005,"byte_end":53008,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53013,"byte_end":53072,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53077,"byte_end":53135,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53140,"byte_end":53221,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53226,"byte_end":53252,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53257,"byte_end":53260,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53265,"byte_end":53336,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53341,"byte_end":53403,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53408,"byte_end":53479,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53484,"byte_end":53565,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53570,"byte_end":53646,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53651,"byte_end":53702,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53707,"byte_end":53710,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53715,"byte_end":53786,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53791,"byte_end":53794,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53799,"byte_end":53838,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53843,"byte_end":53881,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":54805,"byte_end":54812,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":53980,"byte_end":54054,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":54059,"byte_end":54126,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":54131,"byte_end":54134,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":54139,"byte_end":54210,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":54215,"byte_end":54284,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":54289,"byte_end":54363,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":54368,"byte_end":54445,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":54450,"byte_end":54520,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":54525,"byte_end":54578,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":54583,"byte_end":54586,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":54591,"byte_end":54663,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":54668,"byte_end":54690,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":54695,"byte_end":54698,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":54703,"byte_end":54742,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":54747,"byte_end":54797,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":55491,"byte_end":55504,"line_start":90,"line_end":90,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Pin<P> as io::async_buf_read::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":0,"index":131},"children":[],"decl_id":{"krate":0,"index":132},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":55642,"byte_end":55649,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"consume","qualname":"<Pin<P> as io::async_buf_read::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":0,"index":131},"children":[],"decl_id":{"krate":0,"index":133},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":55777,"byte_end":55790,"line_start":100,"line_end":100,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<&'_ [u8] as io::async_buf_read::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":0,"index":131},"children":[],"decl_id":{"krate":0,"index":132},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":55910,"byte_end":55917,"line_start":104,"line_end":104,"column_start":8,"column_end":15},"name":"consume","qualname":"<&'_ [u8] as io::async_buf_read::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":0,"index":131},"children":[],"decl_id":{"krate":0,"index":133},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":56066,"byte_end":56079,"line_start":110,"line_end":110,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<io::Cursor<T> as io::async_buf_read::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":0,"index":131},"children":[],"decl_id":{"krate":0,"index":132},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":56227,"byte_end":56234,"line_start":114,"line_end":114,"column_start":8,"column_end":15},"name":"consume","qualname":"<io::Cursor<T> as io::async_buf_read::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":0,"index":131},"children":[],"decl_id":{"krate":0,"index":133},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":173},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":58126,"byte_end":58135,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":174}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":56439,"byte_end":56469,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":56470,"byte_end":56473,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":56474,"byte_end":56553,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":56554,"byte_end":56628,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":56629,"byte_end":56708,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":56709,"byte_end":56786,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":56787,"byte_end":56798,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":56799,"byte_end":56802,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":56803,"byte_end":56880,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":56881,"byte_end":56899,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":56900,"byte_end":56903,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(()))` means that data was immediately read and placed into","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":56904,"byte_end":56984,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   the output buffer. The amount of data read can be determined by the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":56985,"byte_end":57058,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/   increase in the length of the slice returned by `ReadBuf::filled`. If the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57059,"byte_end":57138,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   difference is 0, EOF has been reached.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57139,"byte_end":57183,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57184,"byte_end":57187,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57188,"byte_end":57253,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57254,"byte_end":57334,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57335,"byte_end":57414,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57415,"byte_end":57488,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57489,"byte_end":57562,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57563,"byte_end":57584,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57585,"byte_end":57588,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57589,"byte_end":57673,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57674,"byte_end":57698,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57699,"byte_end":57702,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57703,"byte_end":57776,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57777,"byte_end":57856,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57857,"byte_end":57860,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57861,"byte_end":57926,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57927,"byte_end":57948,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57949,"byte_end":57952,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57953,"byte_end":57992,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":57993,"byte_end":58029,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":58030,"byte_end":58069,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":58070,"byte_end":58115,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":58652,"byte_end":58661,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"fn poll_read<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":58142,"byte_end":58195,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":58200,"byte_end":58203,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))` and places data in the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":58208,"byte_end":58276,"line_start":46,"line_end":46,"column_start":5,"column_end":73}},{"value":"/ unfilled portion of `buf`. If no data was read (`buf.filled().len()` is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":58281,"byte_end":58356,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ unchanged), it implies that EOF has been reached.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":58361,"byte_end":58414,"line_start":48,"line_end":48,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":58419,"byte_end":58422,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns `Poll::Pending`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":58427,"byte_end":58502,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ and arranges for the current task (via `cx.waker()`) to receive a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":58507,"byte_end":58576,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ notification when the object becomes readable or is closed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":58581,"byte_end":58644,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":59339,"byte_end":59348,"line_start":85,"line_end":85,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Pin<P> as io::async_read::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":173},"children":[],"decl_id":{"krate":0,"index":174},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":59567,"byte_end":59576,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<&'_ [u8] as io::async_read::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":173},"children":[],"decl_id":{"krate":0,"index":174},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":59957,"byte_end":59966,"line_start":109,"line_end":109,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<io::Cursor<T> as io::async_read::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":173},"children":[],"decl_id":{"krate":0,"index":174},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":212},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61257,"byte_end":61266,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":60775,"byte_end":60805,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":60806,"byte_end":60809,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":60810,"byte_end":60884,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":60885,"byte_end":60955,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":60956,"byte_end":61025,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61026,"byte_end":61029,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61030,"byte_end":61095,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61096,"byte_end":61117,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61118,"byte_end":61121,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61122,"byte_end":61158,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61159,"byte_end":61200,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61201,"byte_end":61246,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61908,"byte_end":61918,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"fn start_seek<'_>(Pin<&'_ mut Self>, SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61273,"byte_end":61330,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61335,"byte_end":61338,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61343,"byte_end":61416,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61421,"byte_end":61447,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61452,"byte_end":61455,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61460,"byte_end":61535,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61540,"byte_end":61596,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61601,"byte_end":61604,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61609,"byte_end":61621,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61626,"byte_end":61629,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This function can return [`io::ErrorKind::Other`] in case there is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61634,"byte_end":61704,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ another seek in progress. To avoid this, it is advisable that any call","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61709,"byte_end":61783,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ to `start_seek` is preceded by a call to `poll_complete` to ensure all","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61788,"byte_end":61862,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pending seeks have completed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61867,"byte_end":61900,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":62441,"byte_end":62454,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"fn poll_complete<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<u64>>","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":61985,"byte_end":62028,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":62033,"byte_end":62036,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":62041,"byte_end":62090,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":62095,"byte_end":62165,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`]. Repeatedly","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":62170,"byte_end":62242,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ calling this function without calling `start_seek` might return the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":62247,"byte_end":62318,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ same result.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":62323,"byte_end":62339,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":62344,"byte_end":62347,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":62352,"byte_end":62364,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":62369,"byte_end":62372,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":62377,"byte_end":62433,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":63157,"byte_end":63167,"line_start":74,"line_end":74,"column_start":8,"column_end":18},"name":"start_seek","qualname":"<Pin<P> as io::async_seek::AsyncSeek>::start_seek","value":"fn start_seek<'_>(Pin<&'_ mut Self>, SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":212},"children":[],"decl_id":{"krate":0,"index":213},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":63287,"byte_end":63300,"line_start":78,"line_end":78,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"<Pin<P> as io::async_seek::AsyncSeek>::poll_complete","value":"fn poll_complete<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<u64>>","parent":{"krate":0,"index":212},"children":[],"decl_id":{"krate":0,"index":214},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":63497,"byte_end":63507,"line_start":84,"line_end":84,"column_start":8,"column_end":18},"name":"start_seek","qualname":"<io::Cursor<T> as io::async_seek::AsyncSeek>::start_seek","value":"fn start_seek<'_>(Pin<&'_ mut Self>, SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":212},"children":[],"decl_id":{"krate":0,"index":213},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":63632,"byte_end":63645,"line_start":87,"line_end":87,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"<io::Cursor<T> as io::async_seek::AsyncSeek>::poll_complete","value":"fn poll_complete<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<u64>>","parent":{"krate":0,"index":212},"children":[],"decl_id":{"krate":0,"index":214},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":252},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65745,"byte_end":65755,"line_start":45,"line_end":45,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":259}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":63882,"byte_end":63914,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":63915,"byte_end":63918,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":63919,"byte_end":64001,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64002,"byte_end":64077,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64078,"byte_end":64145,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64146,"byte_end":64149,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64150,"byte_end":64230,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64231,"byte_end":64249,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64250,"byte_end":64253,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64254,"byte_end":64325,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64326,"byte_end":64340,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64341,"byte_end":64344,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64345,"byte_end":64413,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64414,"byte_end":64494,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64495,"byte_end":64574,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64575,"byte_end":64648,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64649,"byte_end":64722,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64723,"byte_end":64744,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64745,"byte_end":64748,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64749,"byte_end":64833,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64834,"byte_end":64858,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64859,"byte_end":64862,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64863,"byte_end":64945,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":64946,"byte_end":65029,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65030,"byte_end":65033,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65034,"byte_end":65118,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65119,"byte_end":65203,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65204,"byte_end":65282,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65283,"byte_end":65362,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65363,"byte_end":65424,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65425,"byte_end":65428,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65429,"byte_end":65495,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65496,"byte_end":65518,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65519,"byte_end":65522,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65523,"byte_end":65561,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65562,"byte_end":65606,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65607,"byte_end":65646,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65647,"byte_end":65686,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65687,"byte_end":65734,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":66427,"byte_end":66437,"line_start":58,"line_end":58,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65762,"byte_end":65816,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65821,"byte_end":65824,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`. If successful,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65829,"byte_end":65905,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ then it must be guaranteed that `n <= buf.len()`. A return value of `0`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65910,"byte_end":65985,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ typically means that the underlying object is no longer able to accept","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":65990,"byte_end":66064,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ bytes and will likely not be able to in the future as well, or that the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":66069,"byte_end":66144,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ buffer provided is empty.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":66149,"byte_end":66178,"line_start":52,"line_end":52,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":66183,"byte_end":66186,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":66191,"byte_end":66253,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":66258,"byte_end":66316,"line_start":55,"line_end":55,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":66321,"byte_end":66388,"line_start":56,"line_end":56,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":66393,"byte_end":66419,"line_start":57,"line_end":57,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":66978,"byte_end":66988,"line_start":73,"line_end":73,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":66565,"byte_end":66636,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":66641,"byte_end":66663,"line_start":65,"line_end":65,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":66668,"byte_end":66671,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":66676,"byte_end":66722,"line_start":67,"line_end":67,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":66727,"byte_end":66730,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":66735,"byte_end":66799,"line_start":69,"line_end":69,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":66804,"byte_end":66862,"line_start":70,"line_end":70,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":66867,"byte_end":66935,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":66940,"byte_end":66970,"line_start":72,"line_end":72,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70274,"byte_end":70287,"line_start":133,"line_end":133,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"fn poll_shutdown<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":67070,"byte_end":67144,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":67149,"byte_end":67197,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":67202,"byte_end":67205,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":67210,"byte_end":67281,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":67286,"byte_end":67362,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":67367,"byte_end":67443,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":67448,"byte_end":67523,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":67528,"byte_end":67599,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":67604,"byte_end":67680,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":67685,"byte_end":67713,"line_start":84,"line_end":84,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":67718,"byte_end":67721,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":67726,"byte_end":67787,"line_start":86,"line_end":86,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":67792,"byte_end":67863,"line_start":87,"line_end":87,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":67868,"byte_end":67940,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":67945,"byte_end":68020,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68025,"byte_end":68098,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68103,"byte_end":68178,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68183,"byte_end":68255,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68260,"byte_end":68271,"line_start":93,"line_end":93,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68276,"byte_end":68279,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68284,"byte_end":68358,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68363,"byte_end":68435,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68440,"byte_end":68509,"line_start":97,"line_end":97,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68514,"byte_end":68582,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68587,"byte_end":68648,"line_start":99,"line_end":99,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68653,"byte_end":68656,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68661,"byte_end":68679,"line_start":101,"line_end":101,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68684,"byte_end":68687,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68692,"byte_end":68762,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68767,"byte_end":68770,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68775,"byte_end":68838,"line_start":105,"line_end":105,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68843,"byte_end":68912,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68917,"byte_end":68992,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":68997,"byte_end":69070,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":69075,"byte_end":69126,"line_start":109,"line_end":109,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":69131,"byte_end":69134,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":69139,"byte_end":69209,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":69214,"byte_end":69289,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":69294,"byte_end":69366,"line_start":113,"line_end":113,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":69371,"byte_end":69441,"line_start":114,"line_end":114,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":69446,"byte_end":69521,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":69526,"byte_end":69529,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":69534,"byte_end":69615,"line_start":117,"line_end":117,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":69620,"byte_end":69695,"line_start":118,"line_end":118,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":69700,"byte_end":69767,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":69772,"byte_end":69775,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":69780,"byte_end":69792,"line_start":121,"line_end":121,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":69797,"byte_end":69800,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":69805,"byte_end":69876,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":69881,"byte_end":69947,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":69952,"byte_end":70026,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70031,"byte_end":70095,"line_start":126,"line_end":126,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70100,"byte_end":70139,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70144,"byte_end":70147,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70152,"byte_end":70164,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70169,"byte_end":70172,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70177,"byte_end":70252,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70257,"byte_end":70266,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":71400,"byte_end":71419,"line_start":158,"line_end":158,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"::io::async_write::AsyncWrite::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":" Like [`poll_write`], except that it writes from a slice of buffers.","sig":null,"attributes":[{"value":"/ Like [`poll_write`], except that it writes from a slice of buffers.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70369,"byte_end":70440,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70445,"byte_end":70448,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Data is copied from each buffer in order, with the final buffer","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70453,"byte_end":70520,"line_start":137,"line_end":137,"column_start":5,"column_end":72}},{"value":"/ read from possibly being only partially consumed. This method must","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70525,"byte_end":70595,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/ behave as a call to [`write`] with the buffers concatenated would.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70600,"byte_end":70670,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70675,"byte_end":70678,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The default implementation calls [`poll_write`] with either the first nonempty","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70683,"byte_end":70765,"line_start":141,"line_end":141,"column_start":5,"column_end":87}},{"value":"/ buffer provided, or an empty one if none exists.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70770,"byte_end":70822,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70827,"byte_end":70830,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70835,"byte_end":70896,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70901,"byte_end":70904,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70909,"byte_end":70971,"line_start":146,"line_end":146,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":70976,"byte_end":71034,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":71039,"byte_end":71106,"line_start":148,"line_end":148,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":71111,"byte_end":71137,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":71142,"byte_end":71145,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":71150,"byte_end":71160,"line_start":151,"line_end":151,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":71165,"byte_end":71168,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be implemented as a single \"atomic\" write action. If any","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":71173,"byte_end":71245,"line_start":153,"line_end":153,"column_start":5,"column_end":77}},{"value":"/ data has been partially written, it is wrong to return an error or","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":71250,"byte_end":71320,"line_start":154,"line_end":154,"column_start":5,"column_end":75}},{"value":"/ pending.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":71325,"byte_end":71337,"line_start":155,"line_end":155,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":71342,"byte_end":71345,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":71350,"byte_end":71392,"line_start":157,"line_end":157,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":72187,"byte_end":72204,"line_start":180,"line_end":180,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"::io::async_write::AsyncWrite::is_write_vectored","value":"fn is_write_vectored<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":252},"children":[],"decl_id":null,"docs":" Determines if this writer has an efficient [`poll_write_vectored`]\n implementation.","sig":null,"attributes":[{"value":"/ Determines if this writer has an efficient [`poll_write_vectored`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":71717,"byte_end":71787,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":71792,"byte_end":71811,"line_start":171,"line_end":171,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":71816,"byte_end":71819,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If a writer does not override the default [`poll_write_vectored`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":71824,"byte_end":71893,"line_start":173,"line_end":173,"column_start":5,"column_end":74}},{"value":"/ implementation, code using it may want to avoid the method all together","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":71898,"byte_end":71973,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ and coalesce writes into a single buffer for higher performance.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":71978,"byte_end":72046,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":72051,"byte_end":72054,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `false`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":72059,"byte_end":72106,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":72111,"byte_end":72114,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_vectored`]: AsyncWrite::poll_write_vectored","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":72119,"byte_end":72179,"line_start":179,"line_end":179,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":73467,"byte_end":73477,"line_start":230,"line_end":230,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Pin<P> as io::async_write::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":253},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":73660,"byte_end":73679,"line_start":238,"line_end":238,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<Pin<P> as io::async_write::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":256},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":73882,"byte_end":73899,"line_start":246,"line_end":246,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"<Pin<P> as io::async_write::AsyncWrite>::is_write_vectored","value":"fn is_write_vectored<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":259},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":73968,"byte_end":73978,"line_start":250,"line_end":250,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Pin<P> as io::async_write::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":254},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":74110,"byte_end":74123,"line_start":254,"line_end":254,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"<Pin<P> as io::async_write::AsyncWrite>::poll_shutdown","value":"fn poll_shutdown<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":74290,"byte_end":74300,"line_start":260,"line_end":260,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Vec<u8> as io::async_write::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":253},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":74514,"byte_end":74533,"line_start":269,"line_end":269,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<Vec<u8> as io::async_write::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":256},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":74742,"byte_end":74759,"line_start":277,"line_end":277,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"<Vec<u8> as io::async_write::AsyncWrite>::is_write_vectored","value":"fn is_write_vectored<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":259},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":74804,"byte_end":74814,"line_start":281,"line_end":281,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Vec<u8> as io::async_write::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":254},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":74928,"byte_end":74941,"line_start":285,"line_end":285,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"<Vec<u8> as io::async_write::AsyncWrite>::poll_shutdown","value":"fn poll_shutdown<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":75101,"byte_end":75111,"line_start":291,"line_end":291,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<io::Cursor<&'_ mut [u8]> as io::async_write::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":253},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":75300,"byte_end":75319,"line_start":299,"line_end":299,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<io::Cursor<&'_ mut [u8]> as io::async_write::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":256},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":75528,"byte_end":75545,"line_start":307,"line_end":307,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"<io::Cursor<&'_ mut [u8]> as io::async_write::AsyncWrite>::is_write_vectored","value":"fn is_write_vectored<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":259},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":75590,"byte_end":75600,"line_start":311,"line_end":311,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<io::Cursor<&'_ mut [u8]> as io::async_write::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":254},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":75738,"byte_end":75751,"line_start":315,"line_end":315,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"<io::Cursor<&'_ mut [u8]> as io::async_write::AsyncWrite>::poll_shutdown","value":"fn poll_shutdown<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":75913,"byte_end":75923,"line_start":321,"line_end":321,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<io::Cursor<&'_ mut Vec<u8>> as io::async_write::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":253},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":76112,"byte_end":76131,"line_start":329,"line_end":329,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<io::Cursor<&'_ mut Vec<u8>> as io::async_write::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":256},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":76340,"byte_end":76357,"line_start":337,"line_end":337,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"<io::Cursor<&'_ mut Vec<u8>> as io::async_write::AsyncWrite>::is_write_vectored","value":"fn is_write_vectored<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":259},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":76402,"byte_end":76412,"line_start":341,"line_end":341,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<io::Cursor<&'_ mut Vec<u8>> as io::async_write::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":254},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":76550,"byte_end":76563,"line_start":345,"line_end":345,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"<io::Cursor<&'_ mut Vec<u8>> as io::async_write::AsyncWrite>::poll_shutdown","value":"fn poll_shutdown<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":76720,"byte_end":76730,"line_start":351,"line_end":351,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<io::Cursor<Vec<u8>> as io::async_write::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":253},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":76919,"byte_end":76938,"line_start":359,"line_end":359,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<io::Cursor<Vec<u8>> as io::async_write::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":256},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":77147,"byte_end":77164,"line_start":367,"line_end":367,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"<io::Cursor<Vec<u8>> as io::async_write::AsyncWrite>::is_write_vectored","value":"fn is_write_vectored<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":259},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":77209,"byte_end":77219,"line_start":371,"line_end":371,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<io::Cursor<Vec<u8>> as io::async_write::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":254},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":77357,"byte_end":77370,"line_start":375,"line_end":375,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"<io::Cursor<Vec<u8>> as io::async_write::AsyncWrite>::poll_shutdown","value":"fn poll_shutdown<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":77529,"byte_end":77539,"line_start":381,"line_end":381,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<io::Cursor<Box<[u8]>> as io::async_write::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":253},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":77728,"byte_end":77747,"line_start":389,"line_end":389,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<io::Cursor<Box<[u8]>> as io::async_write::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":256},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":77956,"byte_end":77973,"line_start":397,"line_end":397,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"<io::Cursor<Box<[u8]>> as io::async_write::AsyncWrite>::is_write_vectored","value":"fn is_write_vectored<'_>(&'_ Self) -> bool","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":259},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":78018,"byte_end":78028,"line_start":401,"line_end":401,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<io::Cursor<Box<[u8]>> as io::async_write::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":254},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":78166,"byte_end":78179,"line_start":405,"line_end":405,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"<io::Cursor<Box<[u8]>> as io::async_write::AsyncWrite>::poll_shutdown","value":"fn poll_shutdown<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":252},"children":[],"decl_id":{"krate":0,"index":255},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":312},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":79277,"byte_end":79284,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"ReadBuf","qualname":"::io::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"decl_id":null,"docs":" A wrapper around a byte buffer that is incrementally filled and initialized.","sig":null,"attributes":[{"value":"/ A wrapper around a byte buffer that is incrementally filled and initialized.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":78329,"byte_end":78409,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":78410,"byte_end":78413,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This type is a sort of \"double cursor\". It tracks three regions in the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":78414,"byte_end":78488,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ buffer: a region at the beginning of the buffer that has been logically","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":78489,"byte_end":78564,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ filled with data, a region that has been initialized at some point but not","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":78565,"byte_end":78643,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ yet logically filled, and a region at the end that may be uninitialized.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":78644,"byte_end":78720,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ The filled region is guaranteed to be a subset of the initialized region.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":78721,"byte_end":78798,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":78799,"byte_end":78802,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ In summary, the contents of the buffer can be visualized as:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":78803,"byte_end":78867,"line_start":12,"line_end":12,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":78868,"byte_end":78871,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```not_rust","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":78872,"byte_end":78887,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/ [             capacity              ]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":78888,"byte_end":78929,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ [ filled |         unfilled         ]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":78930,"byte_end":78971,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [    initialized    | uninitialized ]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":78972,"byte_end":79013,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":79014,"byte_end":79021,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":79022,"byte_end":79025,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ It is undefined behavior to de-initialize any bytes from the uninitialized","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":79026,"byte_end":79104,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ region, since it is merely unknown whether this region is uninitialized or","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":79105,"byte_end":79183,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ not, and if part of it turns out to be initialized, it must stay initialized.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":79184,"byte_end":79265,"line_start":22,"line_end":22,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":79486,"byte_end":79489,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuf>::new","value":"fn new(&'a mut [u8]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully initialized buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully initialized buffer.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":79400,"byte_end":79460,"line_start":30,"line_end":30,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":79465,"byte_end":79474,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":79902,"byte_end":79908,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ReadBuf>::uninit","value":"fn uninit(&'a mut [MaybeUninit<u8>]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully uninitialized buffer.","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully uninitialized buffer.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":79722,"byte_end":79784,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":79789,"byte_end":79792,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Use `assume_init` if part of the buffer is known to be already initialized.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":79797,"byte_end":79876,"line_start":44,"line_end":44,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":79881,"byte_end":79890,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":80136,"byte_end":80144,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ReadBuf>::capacity","value":"fn capacity<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total capacity of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the total capacity of the buffer.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":80065,"byte_end":80110,"line_start":54,"line_end":54,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":80115,"byte_end":80124,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":80290,"byte_end":80296,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"filled","qualname":"<ReadBuf>::filled","value":"fn filled<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the filled portion of the buffer.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":80197,"byte_end":80264,"line_start":60,"line_end":60,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":80269,"byte_end":80278,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":80644,"byte_end":80654,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"filled_mut","qualname":"<ReadBuf>::filled_mut","value":"fn filled_mut<'_>(&'_ mut Self) -> &'_ mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the filled portion of the buffer.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":80550,"byte_end":80618,"line_start":69,"line_end":69,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":80623,"byte_end":80632,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":81022,"byte_end":81026,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"take","qualname":"<ReadBuf>::take","value":"fn take<'_>(&'_ mut Self, usize) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ReadBuf` comprised of the unfilled section up to `n`.\n","sig":null,"attributes":[{"value":"/ Returns a new `ReadBuf` comprised of the unfilled section up to `n`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":80924,"byte_end":80996,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":81001,"byte_end":81010,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":81432,"byte_end":81443,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"initialized","qualname":"<ReadBuf>::initialized","value":"fn initialized<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the initialized portion of the buffer.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":81284,"byte_end":81356,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":81361,"byte_end":81364,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":81369,"byte_end":81406,"line_start":88,"line_end":88,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":81411,"byte_end":81420,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":81849,"byte_end":81864,"line_start":101,"line_end":101,"column_start":12,"column_end":27},"name":"initialized_mut","qualname":"<ReadBuf>::initialized_mut","value":"fn initialized_mut<'_>(&'_ mut Self) -> &'_ mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the initialized portion of the buffer.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":81700,"byte_end":81773,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":81778,"byte_end":81781,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":81786,"byte_end":81823,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":81828,"byte_end":81837,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":82976,"byte_end":82985,"line_start":123,"line_end":123,"column_start":19,"column_end":28},"name":"inner_mut","qualname":"<ReadBuf>::inner_mut","value":"unsafe fn inner_mut<'_>(&'_ mut Self) -> &'_ mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the entire buffer, without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the entire buffer, without ensuring that it has been fully","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":82137,"byte_end":82230,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/ initialized.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":82235,"byte_end":82251,"line_start":109,"line_end":109,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":82256,"byte_end":82259,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The elements between 0 and `self.filled().len()` are filled, and those between 0 and","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":82264,"byte_end":82352,"line_start":111,"line_end":111,"column_start":5,"column_end":93}},{"value":"/ `self.initialized().len()` are initialized (and so can be converted to a `&mut [u8]`).","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":82357,"byte_end":82447,"line_start":112,"line_end":112,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":82452,"byte_end":82455,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The caller of this method must ensure that these invariants are upheld. For example, if the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":82460,"byte_end":82555,"line_start":114,"line_end":114,"column_start":5,"column_end":100}},{"value":"/ caller initializes some of the uninitialized section of the buffer, it must call","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":82560,"byte_end":82644,"line_start":115,"line_end":115,"column_start":5,"column_end":89}},{"value":"/ [`assume_init`](Self::assume_init) with the number of bytes initialized.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":82649,"byte_end":82725,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":82730,"byte_end":82733,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":82738,"byte_end":82750,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":82755,"byte_end":82758,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":82763,"byte_end":82859,"line_start":120,"line_end":120,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":82864,"byte_end":82943,"line_start":121,"line_end":121,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":82948,"byte_end":82957,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":83431,"byte_end":83443,"line_start":135,"line_end":135,"column_start":19,"column_end":31},"name":"unfilled_mut","qualname":"<ReadBuf>::unfilled_mut","value":"unsafe fn unfilled_mut<'_>(&'_ mut Self) -> &'_ mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":83053,"byte_end":83159,"line_start":127,"line_end":127,"column_start":5,"column_end":111}},{"value":"/ initialized.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":83164,"byte_end":83180,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":83185,"byte_end":83188,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":83193,"byte_end":83205,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":83210,"byte_end":83213,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":83218,"byte_end":83314,"line_start":132,"line_end":132,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":83319,"byte_end":83398,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":83403,"byte_end":83412,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":83805,"byte_end":83824,"line_start":144,"line_end":144,"column_start":12,"column_end":31},"name":"initialize_unfilled","qualname":"<ReadBuf>::initialize_unfilled","value":"fn initialize_unfilled<'_>(&'_ mut Self) -> &'_ mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":83531,"byte_end":83632,"line_start":139,"line_end":139,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":83637,"byte_end":83640,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Since `ReadBuf` tracks the region of the buffer that has been initialized, this is effectively \"free\" after","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":83645,"byte_end":83756,"line_start":141,"line_end":141,"column_start":5,"column_end":116}},{"value":"/ the first use.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":83761,"byte_end":83779,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":83784,"byte_end":83793,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":84182,"byte_end":84204,"line_start":156,"line_end":156,"column_start":12,"column_end":34},"name":"initialize_unfilled_to","qualname":"<ReadBuf>::initialize_unfilled_to","value":"fn initialize_unfilled_to<'_>(&'_ mut Self, usize) -> &'_ mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is\n fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":83916,"byte_end":84021,"line_start":148,"line_end":148,"column_start":5,"column_end":110}},{"value":"/ fully initialized.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":84026,"byte_end":84048,"line_start":149,"line_end":149,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":84053,"byte_end":84056,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":84061,"byte_end":84073,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":84078,"byte_end":84081,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `n`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":84086,"byte_end":84136,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":84141,"byte_end":84150,"line_start":154,"line_end":154,"column_start":5,"column_end":14}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":84155,"byte_end":84170,"line_start":155,"line_end":155,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85019,"byte_end":85028,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"remaining","qualname":"<ReadBuf>::remaining","value":"fn remaining<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes at the end of the slice that have not yet been filled.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes at the end of the slice that have not yet been filled.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":84907,"byte_end":84993,"line_start":177,"line_end":177,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":84998,"byte_end":85007,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85295,"byte_end":85300,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"clear","qualname":"<ReadBuf>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, resetting the filled region to empty.","sig":null,"attributes":[{"value":"/ Clears the buffer, resetting the filled region to empty.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85096,"byte_end":85156,"line_start":183,"line_end":183,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85161,"byte_end":85164,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed, and the contents of the buffer are not modified.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85169,"byte_end":85269,"line_start":185,"line_end":185,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85274,"byte_end":85283,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85649,"byte_end":85656,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"advance","qualname":"<ReadBuf>::advance","value":"fn advance<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Advances the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Advances the size of the filled region of the buffer.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85350,"byte_end":85407,"line_start":191,"line_end":191,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85412,"byte_end":85415,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85420,"byte_end":85471,"line_start":193,"line_end":193,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85476,"byte_end":85479,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85484,"byte_end":85496,"line_start":195,"line_end":195,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85501,"byte_end":85504,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85509,"byte_end":85603,"line_start":197,"line_end":197,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85608,"byte_end":85617,"line_start":198,"line_end":198,"column_start":5,"column_end":14}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85622,"byte_end":85637,"line_start":199,"line_end":199,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":86287,"byte_end":86297,"line_start":217,"line_end":217,"column_start":12,"column_end":22},"name":"set_filled","qualname":"<ReadBuf>::set_filled","value":"fn set_filled<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Sets the size of the filled region of the buffer.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85793,"byte_end":85846,"line_start":205,"line_end":205,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85851,"byte_end":85854,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85859,"byte_end":85910,"line_start":207,"line_end":207,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85915,"byte_end":85918,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Note that this can be used to *shrink* the filled region of the buffer in addition to growing it (for","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":85923,"byte_end":86028,"line_start":209,"line_end":209,"column_start":5,"column_end":110}},{"value":"/ example, by a `AsyncRead` implementation that compresses data in-place).","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":86033,"byte_end":86109,"line_start":210,"line_end":210,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":86114,"byte_end":86117,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":86122,"byte_end":86134,"line_start":212,"line_end":212,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":86139,"byte_end":86142,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":86147,"byte_end":86241,"line_start":214,"line_end":214,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":86246,"byte_end":86255,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":86260,"byte_end":86275,"line_start":216,"line_end":216,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":86901,"byte_end":86912,"line_start":234,"line_end":234,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ReadBuf>::assume_init","value":"unsafe fn assume_init<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Asserts that the first `n` unfilled bytes of the buffer are initialized.","sig":null,"attributes":[{"value":"/ Asserts that the first `n` unfilled bytes of the buffer are initialized.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":86481,"byte_end":86557,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":86562,"byte_end":86565,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ `ReadBuf` assumes that bytes are never de-initialized, so this method does nothing when called with fewer","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":86570,"byte_end":86679,"line_start":227,"line_end":227,"column_start":5,"column_end":114}},{"value":"/ bytes than are already known to be initialized.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":86684,"byte_end":86735,"line_start":228,"line_end":228,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":86740,"byte_end":86743,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":86748,"byte_end":86760,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":86765,"byte_end":86768,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `n` unfilled bytes of the buffer have already been initialized.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":86773,"byte_end":86868,"line_start":232,"line_end":232,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":86873,"byte_end":86882,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":87312,"byte_end":87321,"line_start":248,"line_end":248,"column_start":12,"column_end":21},"name":"put_slice","qualname":"<ReadBuf>::put_slice","value":"fn put_slice<'_, '_>(&'_ mut Self, &'_ [u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends data to the buffer, advancing the written position and possibly also the initialized position.","sig":null,"attributes":[{"value":"/ Appends data to the buffer, advancing the written position and possibly also the initialized position.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":87064,"byte_end":87170,"line_start":241,"line_end":241,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":87175,"byte_end":87178,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":87183,"byte_end":87195,"line_start":243,"line_end":243,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":87200,"byte_end":87203,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `buf.len()`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":87208,"byte_end":87266,"line_start":245,"line_end":245,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":87271,"byte_end":87280,"line_start":246,"line_end":246,"column_start":5,"column_end":14}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":87285,"byte_end":87300,"line_start":247,"line_end":247,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":87973,"byte_end":87976,"line_start":274,"line_end":274,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReadBuf as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":358},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":447}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":88795,"byte_end":88813,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":88815,"byte_end":88853,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":88854,"byte_end":88857,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":88858,"byte_end":88941,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":88942,"byte_end":89007,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":89008,"byte_end":89011,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":89012,"byte_end":89030,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":89031,"byte_end":89034,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":89035,"byte_end":89123,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":89124,"byte_end":89193,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":89194,"byte_end":89282,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":89283,"byte_end":89341,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":89342,"byte_end":89405,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":89406,"byte_end":89471,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":89473,"byte_end":89476,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":89477,"byte_end":89509,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":89510,"byte_end":89538,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":89539,"byte_end":89567,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":89568,"byte_end":89602,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":89603,"byte_end":89633,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/mod.rs","byte_start":89634,"byte_end":89668,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":385},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":90994,"byte_end":91007,"line_start":19,"line_end":19,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":90406,"byte_end":90483,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":90484,"byte_end":90487,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":90488,"byte_end":90497,"line_start":7,"line_end":7,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":90498,"byte_end":90501,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":90502,"byte_end":90579,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":90580,"byte_end":90583,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":90584,"byte_end":90597,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":90598,"byte_end":90601,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":90602,"byte_end":90679,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":90680,"byte_end":90752,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":90753,"byte_end":90822,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":90823,"byte_end":90826,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":90827,"byte_end":90906,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":90907,"byte_end":90983,"line_start":18,"line_end":18,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":91510,"byte_end":91525,"line_start":43,"line_end":43,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<&'_ T as net::addr::sealed::ToSocketAddrsPriv>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self, sealed::Internal) -> Self::Future","parent":{"krate":0,"index":441},"children":[],"decl_id":{"krate":0,"index":444},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":91852,"byte_end":91867,"line_start":56,"line_end":56,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<SocketAddr as net::addr::sealed::ToSocketAddrsPriv>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self, sealed::Internal) -> Self::Future","parent":{"krate":0,"index":441},"children":[],"decl_id":{"krate":0,"index":444},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":92225,"byte_end":92240,"line_start":70,"line_end":70,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<SocketAddrV4 as net::addr::sealed::ToSocketAddrsPriv>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self, sealed::Internal) -> Self::Future","parent":{"krate":0,"index":441},"children":[],"decl_id":{"krate":0,"index":444},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":92586,"byte_end":92601,"line_start":83,"line_end":83,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<SocketAddrV6 as net::addr::sealed::ToSocketAddrsPriv>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self, sealed::Internal) -> Self::Future","parent":{"krate":0,"index":441},"children":[],"decl_id":{"krate":0,"index":444},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":92950,"byte_end":92965,"line_start":96,"line_end":96,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<(IpAddr, u16) as net::addr::sealed::ToSocketAddrsPriv>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self, sealed::Internal) -> Self::Future","parent":{"krate":0,"index":441},"children":[],"decl_id":{"krate":0,"index":444},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":93350,"byte_end":93365,"line_start":110,"line_end":110,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<(Ipv4Addr, u16) as net::addr::sealed::ToSocketAddrsPriv>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self, sealed::Internal) -> Self::Future","parent":{"krate":0,"index":441},"children":[],"decl_id":{"krate":0,"index":444},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":93758,"byte_end":93773,"line_start":124,"line_end":124,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<(Ipv6Addr, u16) as net::addr::sealed::ToSocketAddrsPriv>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self, sealed::Internal) -> Self::Future","parent":{"krate":0,"index":441},"children":[],"decl_id":{"krate":0,"index":444},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":94163,"byte_end":94178,"line_start":138,"line_end":138,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"<&'_ [SocketAddr] as net::addr::sealed::ToSocketAddrsPriv>::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self, sealed::Internal) -> Self::Future","parent":{"krate":0,"index":441},"children":[],"decl_id":{"krate":0,"index":444},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":441},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":98264,"byte_end":98281,"line_start":262,"line_end":262,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":442},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":98297,"byte_end":98301,"line_start":263,"line_end":263,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":443},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":98362,"byte_end":98368,"line_start":264,"line_end":264,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":98440,"byte_end":98455,"line_start":266,"line_end":266,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"fn to_socket_addrs<'_>(&'_ Self, Internal) -> Self::Future","parent":{"krate":0,"index":441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":445},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":98566,"byte_end":98574,"line_start":270,"line_end":270,"column_start":16,"column_end":24},"name":"Internal","qualname":"::net::addr::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":98511,"byte_end":98550,"line_start":269,"line_end":269,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":849},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/mod.rs","byte_start":114363,"byte_end":114369,"line_start":51,"line_end":51,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/mod.rs","byte_start":114300,"byte_end":114353,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":850},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/mod.rs","byte_start":114423,"byte_end":114428,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error: Debug;","parent":{"krate":0,"index":848},"children":[],"decl_id":null,"docs":" Error returned by `park`.\n","sig":null,"attributes":[{"value":"/ Error returned by `park`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/mod.rs","byte_start":114384,"byte_end":114413,"line_start":53,"line_end":53,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":1107},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1112},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1133},{"krate":0,"index":1136},{"krate":0,"index":1337},{"krate":0,"index":1978},{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2148},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2154},{"krate":0,"index":2157},{"krate":0,"index":2160},{"krate":0,"index":2248},{"krate":0,"index":2251},{"krate":0,"index":2403},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2531},{"krate":0,"index":2534},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2583},{"krate":0,"index":2586},{"krate":0,"index":2589},{"krate":0,"index":3034},{"krate":0,"index":3037},{"krate":0,"index":3040},{"krate":0,"index":3043},{"krate":0,"index":3046},{"krate":0,"index":3049},{"krate":0,"index":3052},{"krate":0,"index":3055},{"krate":0,"index":3139},{"krate":0,"index":3142},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3253},{"krate":0,"index":3256}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/macros/cfg.rs","byte_start":30078,"byte_end":30102,"line_start":312,"line_end":312,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14473650,"byte_end":14473714,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14473715,"byte_end":14473718,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14473719,"byte_end":14473794,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14473795,"byte_end":14473875,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14473876,"byte_end":14473955,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14473956,"byte_end":14473990,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14473991,"byte_end":14473994,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14473995,"byte_end":14474019,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474020,"byte_end":14474023,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474024,"byte_end":14474045,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474046,"byte_end":14474049,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474050,"byte_end":14474123,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474124,"byte_end":14474203,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474204,"byte_end":14474273,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474274,"byte_end":14474277,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474278,"byte_end":14474357,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474358,"byte_end":14474435,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474436,"byte_end":14474511,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474512,"byte_end":14474584,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474585,"byte_end":14474657,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports multiple consumers, many different separate tasks may **receive**","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474658,"byte_end":14474736,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ messages.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474737,"byte_end":14474750,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474751,"byte_end":14474754,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474755,"byte_end":14474833,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474834,"byte_end":14474895,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474896,"byte_end":14474899,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474900,"byte_end":14474924,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474925,"byte_end":14474928,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14474929,"byte_end":14475008,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475009,"byte_end":14475087,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475088,"byte_end":14475132,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475133,"byte_end":14475136,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475137,"byte_end":14475217,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475218,"byte_end":14475234,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475235,"byte_end":14475238,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475239,"byte_end":14475246,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475247,"byte_end":14475276,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475277,"byte_end":14475280,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475281,"byte_end":14475324,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475325,"byte_end":14475387,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475388,"byte_end":14475393,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475394,"byte_end":14475397,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475398,"byte_end":14475416,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475417,"byte_end":14475438,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475439,"byte_end":14475481,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475482,"byte_end":14475485,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475486,"byte_end":14475519,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475520,"byte_end":14475567,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475568,"byte_end":14475602,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475603,"byte_end":14475614,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475615,"byte_end":14475618,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475619,"byte_end":14475696,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475697,"byte_end":14475700,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475701,"byte_end":14475743,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475744,"byte_end":14475780,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475781,"byte_end":14475786,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475787,"byte_end":14475794,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475795,"byte_end":14475798,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475799,"byte_end":14475863,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475864,"byte_end":14475928,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475929,"byte_end":14475991,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14475992,"byte_end":14476062,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476063,"byte_end":14476128,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476129,"byte_end":14476139,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476140,"byte_end":14476143,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476144,"byte_end":14476160,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476161,"byte_end":14476164,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476165,"byte_end":14476172,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476173,"byte_end":14476216,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476217,"byte_end":14476268,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476269,"byte_end":14476274,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476275,"byte_end":14476278,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476279,"byte_end":14476297,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476298,"byte_end":14476319,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476320,"byte_end":14476371,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476372,"byte_end":14476408,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476409,"byte_end":14476420,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476421,"byte_end":14476424,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476425,"byte_end":14476502,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476503,"byte_end":14476506,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476507,"byte_end":14476549,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476550,"byte_end":14476595,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476596,"byte_end":14476601,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476602,"byte_end":14476609,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476610,"byte_end":14476613,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476614,"byte_end":14476636,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476637,"byte_end":14476680,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476681,"byte_end":14476684,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476685,"byte_end":14476706,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476707,"byte_end":14476710,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476711,"byte_end":14476788,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476789,"byte_end":14476869,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476870,"byte_end":14476925,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476926,"byte_end":14476929,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14476930,"byte_end":14477008,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477009,"byte_end":14477029,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477030,"byte_end":14477033,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477034,"byte_end":14477041,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477042,"byte_end":14477068,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477069,"byte_end":14477072,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477073,"byte_end":14477126,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477127,"byte_end":14477181,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477182,"byte_end":14477187,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477188,"byte_end":14477191,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477192,"byte_end":14477210,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477211,"byte_end":14477232,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477233,"byte_end":14477279,"line_start":109,"line_end":109,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477280,"byte_end":14477283,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477284,"byte_end":14477317,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477318,"byte_end":14477346,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477347,"byte_end":14477399,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477400,"byte_end":14477444,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477445,"byte_end":14477458,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477459,"byte_end":14477470,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477471,"byte_end":14477474,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477475,"byte_end":14477522,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477523,"byte_end":14477561,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477562,"byte_end":14477571,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477572,"byte_end":14477577,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477578,"byte_end":14477585,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477586,"byte_end":14477589,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477590,"byte_end":14477670,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477671,"byte_end":14477748,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477749,"byte_end":14477822,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477823,"byte_end":14477898,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477899,"byte_end":14477912,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477913,"byte_end":14477916,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477917,"byte_end":14477992,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14477993,"byte_end":14478072,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478073,"byte_end":14478151,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478152,"byte_end":14478231,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478232,"byte_end":14478312,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478313,"byte_end":14478378,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478379,"byte_end":14478382,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478383,"byte_end":14478463,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478464,"byte_end":14478476,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478477,"byte_end":14478480,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478481,"byte_end":14478494,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478495,"byte_end":14478536,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478537,"byte_end":14478567,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478568,"byte_end":14478594,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478595,"byte_end":14478598,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478599,"byte_end":14478617,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478618,"byte_end":14478657,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478658,"byte_end":14478733,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478734,"byte_end":14478780,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478781,"byte_end":14478784,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478785,"byte_end":14478809,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478810,"byte_end":14478889,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478890,"byte_end":14478921,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let tx = tx.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478922,"byte_end":14478954,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478955,"byte_end":14478958,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478959,"byte_end":14478996,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14478997,"byte_end":14479059,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479060,"byte_end":14479075,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479076,"byte_end":14479085,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479086,"byte_end":14479089,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479090,"byte_end":14479169,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479170,"byte_end":14479245,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479246,"byte_end":14479324,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479325,"byte_end":14479372,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479373,"byte_end":14479390,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479391,"byte_end":14479394,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479395,"byte_end":14479442,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479443,"byte_end":14479484,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479485,"byte_end":14479494,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479495,"byte_end":14479498,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479499,"byte_end":14479513,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479514,"byte_end":14479519,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479520,"byte_end":14479527,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479528,"byte_end":14479531,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479532,"byte_end":14479607,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479608,"byte_end":14479683,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479684,"byte_end":14479763,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479764,"byte_end":14479829,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479830,"byte_end":14479907,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479908,"byte_end":14479911,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479912,"byte_end":14479990,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14479991,"byte_end":14480071,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480072,"byte_end":14480117,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480118,"byte_end":14480121,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480122,"byte_end":14480129,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480130,"byte_end":14480167,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480168,"byte_end":14480195,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480196,"byte_end":14480199,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480200,"byte_end":14480218,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480219,"byte_end":14480237,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480238,"byte_end":14480281,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480282,"byte_end":14480287,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480288,"byte_end":14480291,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480292,"byte_end":14480310,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480311,"byte_end":14480332,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480333,"byte_end":14480422,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480423,"byte_end":14480426,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480427,"byte_end":14480472,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480473,"byte_end":14480506,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480507,"byte_end":14480544,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480545,"byte_end":14480548,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480549,"byte_end":14480616,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480617,"byte_end":14480644,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480645,"byte_end":14480679,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480680,"byte_end":14480723,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480724,"byte_end":14480761,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480762,"byte_end":14480815,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480816,"byte_end":14480837,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480838,"byte_end":14480855,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480856,"byte_end":14480869,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480870,"byte_end":14480881,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480882,"byte_end":14480885,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480886,"byte_end":14480924,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480925,"byte_end":14480928,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480929,"byte_end":14480989,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14480990,"byte_end":14481014,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let cmd_tx = cmd_tx.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481015,"byte_end":14481055,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481056,"byte_end":14481059,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481060,"byte_end":14481115,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481116,"byte_end":14481176,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481177,"byte_end":14481180,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481181,"byte_end":14481251,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481252,"byte_end":14481301,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481302,"byte_end":14481305,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481306,"byte_end":14481359,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481360,"byte_end":14481376,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481377,"byte_end":14481386,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481387,"byte_end":14481390,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481391,"byte_end":14481432,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481433,"byte_end":14481484,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481485,"byte_end":14481524,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481525,"byte_end":14481534,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481535,"byte_end":14481540,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481541,"byte_end":14481548,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481549,"byte_end":14481552,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481553,"byte_end":14481569,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481570,"byte_end":14481573,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481574,"byte_end":14481600,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481601,"byte_end":14481604,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481605,"byte_end":14481672,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481673,"byte_end":14481745,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481746,"byte_end":14481819,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481820,"byte_end":14481873,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481874,"byte_end":14481877,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481878,"byte_end":14481958,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481959,"byte_end":14481981,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481982,"byte_end":14481985,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14481986,"byte_end":14482001,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482002,"byte_end":14482005,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482006,"byte_end":14482013,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482014,"byte_end":14482045,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482046,"byte_end":14482049,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482050,"byte_end":14482068,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482069,"byte_end":14482090,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482091,"byte_end":14482142,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482143,"byte_end":14482180,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482181,"byte_end":14482184,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482185,"byte_end":14482218,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482219,"byte_end":14482273,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482274,"byte_end":14482328,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482329,"byte_end":14482340,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482341,"byte_end":14482344,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482345,"byte_end":14482378,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482379,"byte_end":14482433,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482434,"byte_end":14482488,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482489,"byte_end":14482500,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482501,"byte_end":14482504,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482505,"byte_end":14482534,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482535,"byte_end":14482564,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482565,"byte_end":14482570,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482571,"byte_end":14482578,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482579,"byte_end":14482582,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482583,"byte_end":14482632,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482633,"byte_end":14482636,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482637,"byte_end":14482659,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482660,"byte_end":14482663,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482664,"byte_end":14482740,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482741,"byte_end":14482819,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482820,"byte_end":14482899,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482900,"byte_end":14482965,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482966,"byte_end":14482969,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14482970,"byte_end":14483050,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483051,"byte_end":14483054,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483055,"byte_end":14483129,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483130,"byte_end":14483203,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483204,"byte_end":14483217,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483218,"byte_end":14483221,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483222,"byte_end":14483295,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483296,"byte_end":14483376,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483377,"byte_end":14483452,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483453,"byte_end":14483456,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483457,"byte_end":14483464,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483465,"byte_end":14483492,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483493,"byte_end":14483540,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483541,"byte_end":14483544,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483545,"byte_end":14483561,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483562,"byte_end":14483565,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483566,"byte_end":14483608,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483609,"byte_end":14483628,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483629,"byte_end":14483655,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483656,"byte_end":14483661,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483662,"byte_end":14483665,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483666,"byte_end":14483683,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483684,"byte_end":14483741,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483742,"byte_end":14483800,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483801,"byte_end":14483853,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483854,"byte_end":14483863,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483864,"byte_end":14483869,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483870,"byte_end":14483873,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483874,"byte_end":14483909,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483910,"byte_end":14483938,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483939,"byte_end":14483944,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483945,"byte_end":14483948,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483949,"byte_end":14483967,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483968,"byte_end":14483989,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14483990,"byte_end":14484033,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484034,"byte_end":14484099,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484100,"byte_end":14484103,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484104,"byte_end":14484182,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484183,"byte_end":14484237,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484238,"byte_end":14484241,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484242,"byte_end":14484286,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484287,"byte_end":14484320,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484321,"byte_end":14484339,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484340,"byte_end":14484389,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::sleep(Duration::from_secs(10)).await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484390,"byte_end":14484449,"line_start":325,"line_end":325,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484450,"byte_end":14484453,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484454,"byte_end":14484500,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484501,"byte_end":14484574,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484575,"byte_end":14484578,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484579,"byte_end":14484653,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484654,"byte_end":14484694,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484695,"byte_end":14484736,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.send(new_config.clone()).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484737,"byte_end":14484794,"line_start":333,"line_end":333,"column_start":1,"column_end":58}},{"value":"/                 config = new_config;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484795,"byte_end":14484835,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484836,"byte_end":14484853,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484854,"byte_end":14484867,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484868,"byte_end":14484879,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484880,"byte_end":14484883,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484884,"byte_end":14484917,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484918,"byte_end":14484921,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14484922,"byte_end":14485000,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485001,"byte_end":14485055,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485056,"byte_end":14485066,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485067,"byte_end":14485144,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485145,"byte_end":14485223,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485224,"byte_end":14485259,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485260,"byte_end":14485283,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485284,"byte_end":14485347,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485348,"byte_end":14485384,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485385,"byte_end":14485388,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485389,"byte_end":14485439,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485440,"byte_end":14485519,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485520,"byte_end":14485595,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485596,"byte_end":14485649,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485650,"byte_end":14485696,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485697,"byte_end":14485729,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485730,"byte_end":14485733,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Get the initial config value","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485734,"byte_end":14485781,"line_start":358,"line_end":358,"column_start":1,"column_end":48}},{"value":"/             let mut conf = rx.borrow().clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485782,"byte_end":14485833,"line_start":359,"line_end":359,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485834,"byte_end":14485837,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485838,"byte_end":14485888,"line_start":361,"line_end":361,"column_start":1,"column_end":51}},{"value":"/             let sleep = time::sleep_until(op_start + conf.timeout);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485889,"byte_end":14485960,"line_start":362,"line_end":362,"column_start":1,"column_end":72}},{"value":"/             tokio::pin!(sleep);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485961,"byte_end":14485996,"line_start":363,"line_end":363,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14485997,"byte_end":14486000,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486001,"byte_end":14486023,"line_start":365,"line_end":365,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486024,"byte_end":14486060,"line_start":366,"line_end":366,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut sleep => {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486061,"byte_end":14486104,"line_start":367,"line_end":367,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486105,"byte_end":14486169,"line_start":368,"line_end":368,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486170,"byte_end":14486227,"line_start":369,"line_end":369,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486228,"byte_end":14486231,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486232,"byte_end":14486287,"line_start":371,"line_end":371,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486288,"byte_end":14486342,"line_start":372,"line_end":372,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486343,"byte_end":14486346,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486347,"byte_end":14486397,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/                         sleep.set(time::sleep_until(op_start + conf.timeout));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486398,"byte_end":14486480,"line_start":375,"line_end":375,"column_start":1,"column_end":83}},{"value":"/                     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486481,"byte_end":14486506,"line_start":376,"line_end":376,"column_start":1,"column_end":26}},{"value":"/                     _ = rx.changed() => {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486507,"byte_end":14486552,"line_start":377,"line_end":377,"column_start":1,"column_end":46}},{"value":"/                         conf = rx.borrow().clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486553,"byte_end":14486608,"line_start":378,"line_end":378,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486609,"byte_end":14486612,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486613,"byte_end":14486690,"line_start":380,"line_end":380,"column_start":1,"column_end":78}},{"value":"/                         // `sleep` using the new `timeout` value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486691,"byte_end":14486760,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"/                         sleep.as_mut().reset(op_start + conf.timeout);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486761,"byte_end":14486835,"line_start":382,"line_end":382,"column_start":1,"column_end":75}},{"value":"/                     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486836,"byte_end":14486861,"line_start":383,"line_end":383,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486862,"byte_end":14486902,"line_start":384,"line_end":384,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486903,"byte_end":14486958,"line_start":385,"line_end":385,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486959,"byte_end":14486993,"line_start":386,"line_end":386,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14486994,"byte_end":14487019,"line_start":387,"line_end":387,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487020,"byte_end":14487041,"line_start":388,"line_end":388,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487042,"byte_end":14487059,"line_start":389,"line_end":389,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487060,"byte_end":14487075,"line_start":390,"line_end":390,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487076,"byte_end":14487079,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487080,"byte_end":14487113,"line_start":392,"line_end":392,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487114,"byte_end":14487123,"line_start":393,"line_end":393,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487124,"byte_end":14487127,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487128,"byte_end":14487169,"line_start":395,"line_end":395,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487170,"byte_end":14487204,"line_start":396,"line_end":396,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487205,"byte_end":14487214,"line_start":397,"line_end":397,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487215,"byte_end":14487220,"line_start":398,"line_end":398,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487221,"byte_end":14487228,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487229,"byte_end":14487232,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487233,"byte_end":14487278,"line_start":401,"line_end":401,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487279,"byte_end":14487332,"line_start":402,"line_end":402,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487333,"byte_end":14487336,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487337,"byte_end":14487364,"line_start":404,"line_end":404,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487365,"byte_end":14487368,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487369,"byte_end":14487443,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487444,"byte_end":14487518,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts but will wait","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487519,"byte_end":14487589,"line_start":408,"line_end":408,"column_start":1,"column_end":71}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487590,"byte_end":14487640,"line_start":409,"line_end":409,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487641,"byte_end":14487644,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487645,"byte_end":14487722,"line_start":411,"line_end":411,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487723,"byte_end":14487800,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487801,"byte_end":14487804,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487805,"byte_end":14487882,"line_start":414,"line_end":414,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487883,"byte_end":14487938,"line_start":415,"line_end":415,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487939,"byte_end":14487942,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14487943,"byte_end":14488022,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488023,"byte_end":14488101,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488102,"byte_end":14488127,"line_start":419,"line_end":419,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488128,"byte_end":14488131,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488132,"byte_end":14488207,"line_start":421,"line_end":421,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488208,"byte_end":14488284,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488285,"byte_end":14488352,"line_start":423,"line_end":423,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488353,"byte_end":14488356,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488357,"byte_end":14488433,"line_start":425,"line_end":425,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488434,"byte_end":14488510,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488511,"byte_end":14488585,"line_start":427,"line_end":427,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488586,"byte_end":14488613,"line_start":428,"line_end":428,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":1108},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488667,"byte_end":14488674,"line_start":432,"line_end":432,"column_start":13,"column_end":20},"name":"futures","qualname":"::sync::futures","value":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":1109}],"decl_id":null,"docs":" Named future types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/macros/cfg.rs","byte_start":30078,"byte_end":30102,"line_start":312,"line_end":312,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3371},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491529,"byte_end":14491536,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3374}],"decl_id":null,"docs":" A barrier enables multiple tasks to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple tasks to synchronize the beginning of some computation.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14490468,"byte_end":14490554,"line_start":6,"line_end":6,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14490555,"byte_end":14490558,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14490559,"byte_end":14490566,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14490567,"byte_end":14490587,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14490588,"byte_end":14490611,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14490612,"byte_end":14490641,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14490642,"byte_end":14490665,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14490666,"byte_end":14490669,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14490670,"byte_end":14490715,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14490716,"byte_end":14490761,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14490762,"byte_end":14490782,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14490783,"byte_end":14490815,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14490816,"byte_end":14490870,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14490871,"byte_end":14490916,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/     handles.push(tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14490917,"byte_end":14490963,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14490964,"byte_end":14491000,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/         let wait_result = c.wait().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491001,"byte_end":14491046,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491047,"byte_end":14491082,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/         wait_result","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491083,"byte_end":14491106,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/     }));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491107,"byte_end":14491119,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491120,"byte_end":14491125,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491126,"byte_end":14491129,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Will not resolve until all \"after wait\" messages have been printed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491130,"byte_end":14491203,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ let mut num_leaders = 0;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491204,"byte_end":14491232,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ for handle in handles {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491233,"byte_end":14491260,"line_start":30,"line_end":30,"column_start":1,"column_end":28}},{"value":"/     let wait_result = handle.await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491261,"byte_end":14491309,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/     if wait_result.is_leader() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491310,"byte_end":14491346,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/         num_leaders += 1;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491347,"byte_end":14491376,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491377,"byte_end":14491386,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491387,"byte_end":14491392,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491393,"byte_end":14491396,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491397,"byte_end":14491452,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(num_leaders, 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491453,"byte_end":14491484,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491485,"byte_end":14491492,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491493,"byte_end":14491500,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14492098,"byte_end":14492101,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of tasks.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of tasks.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491846,"byte_end":14491911,"line_start":58,"line_end":58,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491916,"byte_end":14491919,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 tasks which call [`Barrier::wait`] and then wake up all","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491924,"byte_end":14492010,"line_start":60,"line_end":60,"column_start":5,"column_end":91}},{"value":"/ tasks at once when the `n`th task calls `wait`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14492015,"byte_end":14492066,"line_start":61,"line_end":61,"column_start":5,"column_end":56}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14492071,"byte_end":14492086,"line_start":62,"line_end":62,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14494104,"byte_end":14494108,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14493634,"byte_end":14493694,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14493699,"byte_end":14493702,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all tasks have rendezvoused once, and can","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14493707,"byte_end":14493781,"line_start":114,"line_end":114,"column_start":5,"column_end":79}},{"value":"/ be used continuously.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14493786,"byte_end":14493811,"line_start":115,"line_end":115,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14493816,"byte_end":14493819,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14493824,"byte_end":14493917,"line_start":117,"line_end":117,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other tasks","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14493922,"byte_end":14494013,"line_start":118,"line_end":118,"column_start":5,"column_end":96}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14494018,"byte_end":14494086,"line_start":119,"line_end":119,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":3383},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14497114,"byte_end":14497131,"line_start":196,"line_end":196,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all tasks in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all tasks in the `Barrier` have rendezvoused.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14496980,"byte_end":14497078,"line_start":194,"line_end":194,"column_start":1,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14497371,"byte_end":14497380,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"fn is_leader<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this task from wait is the \"leader task\".","sig":null,"attributes":[{"value":"/ Returns `true` if this task from wait is the \"leader task\".","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14497169,"byte_end":14497232,"line_start":199,"line_end":199,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14497237,"byte_end":14497240,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Only one task will have `true` returned from their result, all other tasks will have","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14497245,"byte_end":14497333,"line_start":201,"line_end":201,"column_start":5,"column_end":93}},{"value":"/ `false` returned.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14497338,"byte_end":14497359,"line_start":202,"line_end":202,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":1136},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1140},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1147},{"krate":0,"index":1150},{"krate":0,"index":1153},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1160},{"krate":0,"index":1163},{"krate":0,"index":1166},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1175},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1191},{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1201},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1223},{"krate":0,"index":1228},{"krate":0,"index":1233},{"krate":0,"index":3427},{"krate":0,"index":1238},{"krate":0,"index":1242},{"krate":0,"index":1247},{"krate":0,"index":1250},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1264},{"krate":0,"index":1271},{"krate":0,"index":1273},{"krate":0,"index":1275},{"krate":0,"index":1278},{"krate":0,"index":1281},{"krate":0,"index":1287},{"krate":0,"index":1294},{"krate":0,"index":1297},{"krate":0,"index":1302},{"krate":0,"index":1307},{"krate":0,"index":1313},{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1325},{"krate":0,"index":1330},{"krate":0,"index":1335}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/macros/cfg.rs","byte_start":30078,"byte_end":30102,"line_start":312,"line_end":312,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14497422,"byte_end":14497502,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14497503,"byte_end":14497521,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14497522,"byte_end":14497525,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14497526,"byte_end":14497604,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14497605,"byte_end":14497680,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14497681,"byte_end":14497759,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14497760,"byte_end":14497814,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14497815,"byte_end":14497818,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14497819,"byte_end":14497895,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14497896,"byte_end":14497976,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14497977,"byte_end":14498054,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498055,"byte_end":14498105,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498106,"byte_end":14498109,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498110,"byte_end":14498188,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498189,"byte_end":14498246,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498247,"byte_end":14498250,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498251,"byte_end":14498329,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498330,"byte_end":14498402,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498403,"byte_end":14498419,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498420,"byte_end":14498423,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498424,"byte_end":14498438,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498439,"byte_end":14498442,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498443,"byte_end":14498523,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498524,"byte_end":14498603,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498604,"byte_end":14498681,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498682,"byte_end":14498760,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498761,"byte_end":14498768,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498769,"byte_end":14498772,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498773,"byte_end":14498850,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498851,"byte_end":14498926,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14498927,"byte_end":14499007,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499008,"byte_end":14499011,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499012,"byte_end":14499084,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499085,"byte_end":14499163,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499164,"byte_end":14499240,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499241,"byte_end":14499300,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499301,"byte_end":14499304,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499305,"byte_end":14499383,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499384,"byte_end":14499458,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499459,"byte_end":14499495,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499496,"byte_end":14499499,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499500,"byte_end":14499579,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499580,"byte_end":14499657,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499658,"byte_end":14499733,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499734,"byte_end":14499765,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499766,"byte_end":14499769,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499770,"byte_end":14499784,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499785,"byte_end":14499788,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499789,"byte_end":14499864,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499865,"byte_end":14499943,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14499944,"byte_end":14500021,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500022,"byte_end":14500053,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500054,"byte_end":14500057,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500058,"byte_end":14500104,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500105,"byte_end":14500173,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500174,"byte_end":14500224,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500225,"byte_end":14500273,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::error::RecvError::Lagged","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500274,"byte_end":14500349,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::error::RecvError::Closed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500350,"byte_end":14500425,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500426,"byte_end":14500478,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500479,"byte_end":14500482,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500483,"byte_end":14500497,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500498,"byte_end":14500501,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500502,"byte_end":14500517,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500518,"byte_end":14500521,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500522,"byte_end":14500529,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500530,"byte_end":14500561,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500562,"byte_end":14500565,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500566,"byte_end":14500584,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500585,"byte_end":14500606,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500607,"byte_end":14500658,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500659,"byte_end":14500696,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500697,"byte_end":14500700,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500701,"byte_end":14500734,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500735,"byte_end":14500789,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500790,"byte_end":14500844,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500845,"byte_end":14500856,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500857,"byte_end":14500860,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500861,"byte_end":14500894,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500895,"byte_end":14500949,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14500950,"byte_end":14501004,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501005,"byte_end":14501016,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501017,"byte_end":14501020,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501021,"byte_end":14501050,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501051,"byte_end":14501080,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501081,"byte_end":14501086,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501087,"byte_end":14501094,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501095,"byte_end":14501098,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501099,"byte_end":14501115,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501116,"byte_end":14501119,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501120,"byte_end":14501127,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501128,"byte_end":14501159,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501160,"byte_end":14501163,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501164,"byte_end":14501182,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501183,"byte_end":14501204,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501205,"byte_end":14501254,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501255,"byte_end":14501258,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501259,"byte_end":14501288,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501289,"byte_end":14501318,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501319,"byte_end":14501348,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501349,"byte_end":14501352,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501353,"byte_end":14501390,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501391,"byte_end":14501433,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501434,"byte_end":14501437,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501438,"byte_end":14501507,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501508,"byte_end":14501511,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501512,"byte_end":14501561,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501562,"byte_end":14501611,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501612,"byte_end":14501617,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14501618,"byte_end":14501625,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1194},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502822,"byte_end":14502828,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":1196}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502029,"byte_end":14502075,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502076,"byte_end":14502079,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502080,"byte_end":14502140,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502141,"byte_end":14502168,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502169,"byte_end":14502172,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502173,"byte_end":14502187,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502188,"byte_end":14502191,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502192,"byte_end":14502199,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502200,"byte_end":14502231,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502232,"byte_end":14502235,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502236,"byte_end":14502254,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502255,"byte_end":14502276,"line_start":137,"line_end":137,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502277,"byte_end":14502328,"line_start":138,"line_end":138,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502329,"byte_end":14502366,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502367,"byte_end":14502370,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502371,"byte_end":14502404,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502405,"byte_end":14502459,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502460,"byte_end":14502514,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502515,"byte_end":14502526,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502527,"byte_end":14502530,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502531,"byte_end":14502564,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502565,"byte_end":14502619,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502620,"byte_end":14502674,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502675,"byte_end":14502686,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502687,"byte_end":14502690,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502691,"byte_end":14502720,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502721,"byte_end":14502750,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502751,"byte_end":14502756,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502757,"byte_end":14502764,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502765,"byte_end":14502768,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502769,"byte_end":14502810,"line_start":156,"line_end":156,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1197},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503876,"byte_end":14503884,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":1199},{"krate":0,"index":1200}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502865,"byte_end":14502913,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502914,"byte_end":14502917,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502918,"byte_end":14502984,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14502985,"byte_end":14503014,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503015,"byte_end":14503018,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`BroadcastStream`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503019,"byte_end":14503097,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ wrapper.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503098,"byte_end":14503110,"line_start":167,"line_end":167,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503111,"byte_end":14503114,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`BroadcastStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.BroadcastStream.html","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503115,"byte_end":14503222,"line_start":169,"line_end":169,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503223,"byte_end":14503226,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503227,"byte_end":14503241,"line_start":171,"line_end":171,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503242,"byte_end":14503245,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503246,"byte_end":14503253,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503254,"byte_end":14503285,"line_start":174,"line_end":174,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503286,"byte_end":14503289,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503290,"byte_end":14503308,"line_start":176,"line_end":176,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503309,"byte_end":14503330,"line_start":177,"line_end":177,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503331,"byte_end":14503382,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503383,"byte_end":14503420,"line_start":179,"line_end":179,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503421,"byte_end":14503424,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503425,"byte_end":14503458,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503459,"byte_end":14503513,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503514,"byte_end":14503568,"line_start":183,"line_end":183,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503569,"byte_end":14503580,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503581,"byte_end":14503584,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503585,"byte_end":14503618,"line_start":186,"line_end":186,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503619,"byte_end":14503673,"line_start":187,"line_end":187,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503674,"byte_end":14503728,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503729,"byte_end":14503740,"line_start":189,"line_end":189,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503741,"byte_end":14503744,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503745,"byte_end":14503774,"line_start":191,"line_end":191,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503775,"byte_end":14503804,"line_start":192,"line_end":192,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503805,"byte_end":14503810,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503811,"byte_end":14503818,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503819,"byte_end":14503822,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14503823,"byte_end":14503864,"line_start":196,"line_end":196,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":1201},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504033,"byte_end":14504038,"line_start":205,"line_end":205,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::broadcast::error","value":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":3390},{"krate":0,"index":3394},{"krate":0,"index":1205},{"krate":0,"index":1208},{"krate":0,"index":3397},{"krate":0,"index":3403},{"krate":0,"index":3405},{"krate":0,"index":3406},{"krate":0,"index":3409},{"krate":0,"index":1210},{"krate":0,"index":1212},{"krate":0,"index":3411},{"krate":0,"index":3419},{"krate":0,"index":3421},{"krate":0,"index":3422},{"krate":0,"index":3425},{"krate":0,"index":1213},{"krate":0,"index":1215}],"decl_id":null,"docs":" Broadcast error types\n","sig":null,"attributes":[{"value":"/ Broadcast error types","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504045,"byte_end":14504070,"line_start":206,"line_end":206,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3390},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504542,"byte_end":14504551,"line_start":219,"line_end":219,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::broadcast::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by from the [`send`] function on a [`Sender`].","sig":null,"attributes":[{"value":"/ Error returned by from the [`send`] function on a [`Sender`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504095,"byte_end":14504160,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504165,"byte_end":14504168,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504173,"byte_end":14504245,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504250,"byte_end":14504327,"line_start":213,"line_end":213,"column_start":5,"column_end":82}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504332,"byte_end":14504391,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504396,"byte_end":14504399,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ [`send`]: crate::sync::broadcast::Sender::send","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504404,"byte_end":14504454,"line_start":216,"line_end":216,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504459,"byte_end":14504505,"line_start":217,"line_end":217,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3393},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504555,"byte_end":14504560,"line_start":219,"line_end":219,"column_start":29,"column_end":34},"name":"0","qualname":"::sync::broadcast::error::SendError::0","value":"T","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504619,"byte_end":14504622,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"fmt","qualname":"<SendError<T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3398},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505164,"byte_end":14505170,"line_start":237,"line_end":237,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":3397},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505059,"byte_end":14505134,"line_start":235,"line_end":235,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505143,"byte_end":14505155,"line_start":236,"line_end":236,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3400},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505396,"byte_end":14505402,"line_start":243,"line_end":243,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":3397},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505181,"byte_end":14505253,"line_start":239,"line_end":239,"column_start":9,"column_end":81}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505262,"byte_end":14505322,"line_start":240,"line_end":240,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505331,"byte_end":14505334,"line_start":241,"line_end":241,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505343,"byte_end":14505387,"line_start":242,"line_end":242,"column_start":9,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":3402},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505403,"byte_end":14505406,"line_start":243,"line_end":243,"column_start":16,"column_end":19},"name":"0","qualname":"::sync::broadcast::error::RecvError::Lagged::0","value":"u64","parent":{"krate":0,"index":3400},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3397},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505039,"byte_end":14505048,"line_start":234,"line_end":234,"column_start":14,"column_end":23},"name":"RecvError","qualname":"::sync::broadcast::error::RecvError","value":"enum RecvError { Closed, Lagged(u64), }","parent":null,"children":[{"krate":0,"index":3398},{"krate":0,"index":3400}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504799,"byte_end":14504866,"line_start":229,"line_end":229,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504871,"byte_end":14504874,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504879,"byte_end":14504931,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504936,"byte_end":14504986,"line_start":232,"line_end":232,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505465,"byte_end":14505468,"line_start":247,"line_end":247,"column_start":12,"column_end":15},"name":"fmt","qualname":"<RecvError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3412},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506249,"byte_end":14506254,"line_start":267,"line_end":267,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::broadcast::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`] handles, so data may yet become available.","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506049,"byte_end":14506107,"line_start":263,"line_end":263,"column_start":9,"column_end":67}},{"value":"/ [`Sender`] handles, so data may yet become available.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506116,"byte_end":14506173,"line_start":264,"line_end":264,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506182,"byte_end":14506185,"line_start":265,"line_end":265,"column_start":9,"column_end":12}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506194,"byte_end":14506240,"line_start":266,"line_end":266,"column_start":9,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3414},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506370,"byte_end":14506376,"line_start":271,"line_end":271,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506265,"byte_end":14506340,"line_start":269,"line_end":269,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506349,"byte_end":14506361,"line_start":270,"line_end":270,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3416},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506649,"byte_end":14506655,"line_start":278,"line_end":278,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506387,"byte_end":14506461,"line_start":273,"line_end":273,"column_start":9,"column_end":83}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506470,"byte_end":14506538,"line_start":274,"line_end":274,"column_start":9,"column_end":77}},{"value":"/ retained by the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506547,"byte_end":14506575,"line_start":275,"line_end":275,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506584,"byte_end":14506587,"line_start":276,"line_end":276,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506596,"byte_end":14506640,"line_start":277,"line_end":277,"column_start":9,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":3418},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506656,"byte_end":14506659,"line_start":278,"line_end":278,"column_start":16,"column_end":19},"name":"0","qualname":"::sync::broadcast::error::TryRecvError::Lagged::0","value":"u64","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3411},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506026,"byte_end":14506038,"line_start":262,"line_end":262,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::broadcast::error::TryRecvError","value":"enum TryRecvError { Empty, Closed, Lagged(u64), }","parent":null,"children":[{"krate":0,"index":3412},{"krate":0,"index":3414},{"krate":0,"index":3416}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505774,"byte_end":14505845,"line_start":257,"line_end":257,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505850,"byte_end":14505853,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505858,"byte_end":14505918,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505923,"byte_end":14505973,"line_start":260,"line_end":260,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506721,"byte_end":14506724,"line_start":282,"line_end":282,"column_start":12,"column_end":15},"name":"fmt","qualname":"<TryRecvError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1254},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14511121,"byte_end":14511128,"line_start":439,"line_end":439,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"fn channel<T>(usize) -> (Sender<T>, Receiver<T>) where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14509371,"byte_end":14509447,"line_start":388,"line_end":388,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14509448,"byte_end":14509497,"line_start":389,"line_end":389,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14509498,"byte_end":14509501,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14509502,"byte_end":14509571,"line_start":391,"line_end":391,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14509572,"byte_end":14509622,"line_start":392,"line_end":392,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14509623,"byte_end":14509626,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14509627,"byte_end":14509701,"line_start":394,"line_end":394,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14509702,"byte_end":14509777,"line_start":395,"line_end":395,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14509778,"byte_end":14509846,"line_start":396,"line_end":396,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14509847,"byte_end":14509850,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14509851,"byte_end":14509927,"line_start":398,"line_end":398,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14509928,"byte_end":14510009,"line_start":399,"line_end":399,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510010,"byte_end":14510049,"line_start":400,"line_end":400,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510050,"byte_end":14510053,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510054,"byte_end":14510100,"line_start":402,"line_end":402,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510101,"byte_end":14510169,"line_start":403,"line_end":403,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510170,"byte_end":14510220,"line_start":404,"line_end":404,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510221,"byte_end":14510273,"line_start":405,"line_end":405,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::error::SendError","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510274,"byte_end":14510333,"line_start":406,"line_end":406,"column_start":1,"column_end":60}},{"value":"/ [`RecvError`]: crate::sync::broadcast::error::RecvError","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510334,"byte_end":14510393,"line_start":407,"line_end":407,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510394,"byte_end":14510397,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510398,"byte_end":14510412,"line_start":409,"line_end":409,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510413,"byte_end":14510416,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510417,"byte_end":14510424,"line_start":411,"line_end":411,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510425,"byte_end":14510456,"line_start":412,"line_end":412,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510457,"byte_end":14510460,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510461,"byte_end":14510479,"line_start":414,"line_end":414,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510480,"byte_end":14510501,"line_start":415,"line_end":415,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510502,"byte_end":14510553,"line_start":416,"line_end":416,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510554,"byte_end":14510591,"line_start":417,"line_end":417,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510592,"byte_end":14510595,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510596,"byte_end":14510629,"line_start":419,"line_end":419,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510630,"byte_end":14510684,"line_start":420,"line_end":420,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510685,"byte_end":14510739,"line_start":421,"line_end":421,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510740,"byte_end":14510751,"line_start":422,"line_end":422,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510752,"byte_end":14510755,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510756,"byte_end":14510789,"line_start":424,"line_end":424,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510790,"byte_end":14510844,"line_start":425,"line_end":425,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510845,"byte_end":14510899,"line_start":426,"line_end":426,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510900,"byte_end":14510911,"line_start":427,"line_end":427,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510912,"byte_end":14510915,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510916,"byte_end":14510945,"line_start":429,"line_end":429,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510946,"byte_end":14510975,"line_start":430,"line_end":430,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510976,"byte_end":14510981,"line_start":431,"line_end":431,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510982,"byte_end":14510989,"line_start":432,"line_end":432,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510990,"byte_end":14510993,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14510994,"byte_end":14511006,"line_start":434,"line_end":434,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14511007,"byte_end":14511010,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ This will panic if `capacity` is equal to `0` or larger","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14511011,"byte_end":14511070,"line_start":436,"line_end":436,"column_start":1,"column_end":60}},{"value":"/ than `usize::MAX / 2`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14511071,"byte_end":14511097,"line_start":437,"line_end":437,"column_start":1,"column_end":27}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14511098,"byte_end":14511113,"line_start":438,"line_end":438,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14514153,"byte_end":14514157,"line_start":535,"line_end":535,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn send<'_>(&'_ Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512303,"byte_end":14512377,"line_start":485,"line_end":485,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512382,"byte_end":14512418,"line_start":486,"line_end":486,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512423,"byte_end":14512426,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512431,"byte_end":14512506,"line_start":488,"line_end":488,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512511,"byte_end":14512577,"line_start":489,"line_end":489,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512582,"byte_end":14512633,"line_start":490,"line_end":490,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512638,"byte_end":14512641,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512646,"byte_end":14512658,"line_start":492,"line_end":492,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512663,"byte_end":14512666,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512671,"byte_end":14512745,"line_start":494,"line_end":494,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512750,"byte_end":14512826,"line_start":495,"line_end":495,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512831,"byte_end":14512884,"line_start":496,"line_end":496,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512889,"byte_end":14512892,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512897,"byte_end":14512907,"line_start":498,"line_end":498,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512912,"byte_end":14512915,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512920,"byte_end":14512992,"line_start":500,"line_end":500,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512997,"byte_end":14513072,"line_start":501,"line_end":501,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513077,"byte_end":14513138,"line_start":502,"line_end":502,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513143,"byte_end":14513146,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513151,"byte_end":14513224,"line_start":504,"line_end":504,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513229,"byte_end":14513294,"line_start":505,"line_end":505,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513299,"byte_end":14513317,"line_start":506,"line_end":506,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513322,"byte_end":14513325,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513330,"byte_end":14513380,"line_start":508,"line_end":508,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513385,"byte_end":14513445,"line_start":509,"line_end":509,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513450,"byte_end":14513453,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513458,"byte_end":14513472,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513477,"byte_end":14513480,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513485,"byte_end":14513492,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513497,"byte_end":14513528,"line_start":514,"line_end":514,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513533,"byte_end":14513536,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513541,"byte_end":14513559,"line_start":516,"line_end":516,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513564,"byte_end":14513585,"line_start":517,"line_end":517,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513590,"byte_end":14513641,"line_start":518,"line_end":518,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513646,"byte_end":14513683,"line_start":519,"line_end":519,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513688,"byte_end":14513691,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513696,"byte_end":14513729,"line_start":521,"line_end":521,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513734,"byte_end":14513788,"line_start":522,"line_end":522,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513793,"byte_end":14513847,"line_start":523,"line_end":523,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513852,"byte_end":14513863,"line_start":524,"line_end":524,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513868,"byte_end":14513871,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513876,"byte_end":14513909,"line_start":526,"line_end":526,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513914,"byte_end":14513968,"line_start":527,"line_end":527,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14513973,"byte_end":14514027,"line_start":528,"line_end":528,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14514032,"byte_end":14514043,"line_start":529,"line_end":529,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14514048,"byte_end":14514051,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14514056,"byte_end":14514085,"line_start":531,"line_end":531,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14514090,"byte_end":14514119,"line_start":532,"line_end":532,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14514124,"byte_end":14514129,"line_start":533,"line_end":533,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14514134,"byte_end":14514141,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515829,"byte_end":14515838,"line_start":598,"line_end":598,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"fn subscribe<'_>(&'_ Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515234,"byte_end":14515311,"line_start":575,"line_end":575,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515316,"byte_end":14515345,"line_start":576,"line_end":576,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515350,"byte_end":14515353,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515358,"byte_end":14515372,"line_start":578,"line_end":578,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515377,"byte_end":14515380,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515385,"byte_end":14515392,"line_start":580,"line_end":580,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515397,"byte_end":14515428,"line_start":581,"line_end":581,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515433,"byte_end":14515436,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515441,"byte_end":14515459,"line_start":583,"line_end":583,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515464,"byte_end":14515485,"line_start":584,"line_end":584,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515490,"byte_end":14515537,"line_start":585,"line_end":585,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515542,"byte_end":14515545,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515550,"byte_end":14515577,"line_start":587,"line_end":587,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515582,"byte_end":14515611,"line_start":588,"line_end":588,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515616,"byte_end":14515619,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515624,"byte_end":14515660,"line_start":590,"line_end":590,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515665,"byte_end":14515668,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515673,"byte_end":14515702,"line_start":592,"line_end":592,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515707,"byte_end":14515710,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515715,"byte_end":14515760,"line_start":594,"line_end":594,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515765,"byte_end":14515795,"line_start":595,"line_end":595,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515800,"byte_end":14515805,"line_start":596,"line_end":596,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515810,"byte_end":14515817,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14517097,"byte_end":14517111,"line_start":639,"line_end":639,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"fn receiver_count<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515945,"byte_end":14515987,"line_start":603,"line_end":603,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14515992,"byte_end":14515995,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516000,"byte_end":14516076,"line_start":605,"line_end":605,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516081,"byte_end":14516154,"line_start":606,"line_end":606,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516159,"byte_end":14516179,"line_start":607,"line_end":607,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516184,"byte_end":14516187,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516192,"byte_end":14516202,"line_start":609,"line_end":609,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516207,"byte_end":14516210,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516215,"byte_end":14516285,"line_start":611,"line_end":611,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516290,"byte_end":14516358,"line_start":612,"line_end":612,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516363,"byte_end":14516376,"line_start":613,"line_end":613,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516381,"byte_end":14516384,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516389,"byte_end":14516441,"line_start":615,"line_end":615,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516446,"byte_end":14516496,"line_start":616,"line_end":616,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516501,"byte_end":14516547,"line_start":617,"line_end":617,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516552,"byte_end":14516612,"line_start":618,"line_end":618,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516617,"byte_end":14516665,"line_start":619,"line_end":619,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516670,"byte_end":14516673,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516678,"byte_end":14516692,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516697,"byte_end":14516700,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516705,"byte_end":14516712,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516717,"byte_end":14516748,"line_start":624,"line_end":624,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516753,"byte_end":14516756,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516761,"byte_end":14516779,"line_start":626,"line_end":626,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516784,"byte_end":14516805,"line_start":627,"line_end":627,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516810,"byte_end":14516858,"line_start":628,"line_end":628,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516863,"byte_end":14516866,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516871,"byte_end":14516914,"line_start":630,"line_end":630,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516919,"byte_end":14516922,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516927,"byte_end":14516965,"line_start":632,"line_end":632,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516970,"byte_end":14516973,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14516978,"byte_end":14517021,"line_start":634,"line_end":634,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14517026,"byte_end":14517029,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14517034,"byte_end":14517063,"line_start":636,"line_end":636,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14517068,"byte_end":14517073,"line_start":637,"line_end":637,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14517078,"byte_end":14517085,"line_start":638,"line_end":638,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14518147,"byte_end":14518152,"line_start":685,"line_end":685,"column_start":8,"column_end":13},"name":"clone","qualname":"<Sender<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Sender<T>","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14518333,"byte_end":14518337,"line_start":694,"line_end":694,"column_start":8,"column_end":12},"name":"drop","qualname":"<Sender<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519774,"byte_end":14519777,"line_start":735,"line_end":735,"column_start":12,"column_end":15},"name":"len","qualname":"<Receiver<T>>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of messages that were sent into the channel and that\n this [`Receiver`] has yet to receive.","sig":null,"attributes":[{"value":"/ Returns the number of messages that were sent into the channel and that","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14518488,"byte_end":14518563,"line_start":702,"line_end":702,"column_start":5,"column_end":80}},{"value":"/ this [`Receiver`] has yet to receive.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14518568,"byte_end":14518609,"line_start":703,"line_end":703,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14518614,"byte_end":14518617,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ If the returned value from `len` is larger than the next largest power of 2","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14518622,"byte_end":14518701,"line_start":705,"line_end":705,"column_start":5,"column_end":84}},{"value":"/ of the capacity of the channel any call to [`recv`] will return an","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14518706,"byte_end":14518776,"line_start":706,"line_end":706,"column_start":5,"column_end":75}},{"value":"/ `Err(RecvError::Lagged)` and any call to [`try_recv`] will return an","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14518781,"byte_end":14518853,"line_start":707,"line_end":707,"column_start":5,"column_end":77}},{"value":"/ `Err(TryRecvError::Lagged)`, e.g. if the capacity of the channel is 10,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14518858,"byte_end":14518933,"line_start":708,"line_end":708,"column_start":5,"column_end":80}},{"value":"/ [`recv`] will start to return `Err(RecvError::Lagged)` once `len` returns","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14518938,"byte_end":14519015,"line_start":709,"line_end":709,"column_start":5,"column_end":82}},{"value":"/ values larger than 16.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519020,"byte_end":14519046,"line_start":710,"line_end":710,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519051,"byte_end":14519054,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519059,"byte_end":14519109,"line_start":712,"line_end":712,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519114,"byte_end":14519166,"line_start":713,"line_end":713,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519171,"byte_end":14519231,"line_start":714,"line_end":714,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519236,"byte_end":14519239,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519244,"byte_end":14519258,"line_start":716,"line_end":716,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519263,"byte_end":14519266,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519271,"byte_end":14519278,"line_start":718,"line_end":718,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519283,"byte_end":14519314,"line_start":719,"line_end":719,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519319,"byte_end":14519322,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519327,"byte_end":14519345,"line_start":721,"line_end":721,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519350,"byte_end":14519371,"line_start":722,"line_end":722,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519376,"byte_end":14519427,"line_start":723,"line_end":723,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519432,"byte_end":14519435,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519440,"byte_end":14519469,"line_start":725,"line_end":725,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519474,"byte_end":14519503,"line_start":726,"line_end":726,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519508,"byte_end":14519511,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(rx1.len(), 2);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519516,"byte_end":14519549,"line_start":728,"line_end":728,"column_start":5,"column_end":38}},{"value":"/     assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519554,"byte_end":14519604,"line_start":729,"line_end":729,"column_start":5,"column_end":55}},{"value":"/     assert_eq!(rx1.len(), 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519609,"byte_end":14519642,"line_start":730,"line_end":730,"column_start":5,"column_end":38}},{"value":"/     assert_eq!(rx1.recv().await.unwrap(), 20);     ","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519647,"byte_end":14519702,"line_start":731,"line_end":731,"column_start":5,"column_end":60}},{"value":"/     assert_eq!(rx1.len(), 0);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519707,"byte_end":14519740,"line_start":732,"line_end":732,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519745,"byte_end":14519750,"line_start":733,"line_end":733,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519755,"byte_end":14519762,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520631,"byte_end":14520639,"line_start":765,"line_end":765,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Receiver<T>>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if there aren't any messages in the channel that the [`Receiver`]\n has yet to receive.","sig":null,"attributes":[{"value":"/ Returns true if there aren't any messages in the channel that the [`Receiver`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519909,"byte_end":14519991,"line_start":740,"line_end":740,"column_start":5,"column_end":87}},{"value":"/ has yet to receive.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14519996,"byte_end":14520019,"line_start":741,"line_end":741,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520024,"byte_end":14520027,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ [`Receiver]: create::sync::broadcast::Receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520032,"byte_end":14520082,"line_start":743,"line_end":743,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520087,"byte_end":14520090,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520095,"byte_end":14520109,"line_start":745,"line_end":745,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520114,"byte_end":14520117,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520122,"byte_end":14520129,"line_start":747,"line_end":747,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520134,"byte_end":14520165,"line_start":748,"line_end":748,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520170,"byte_end":14520173,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520178,"byte_end":14520196,"line_start":750,"line_end":750,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520201,"byte_end":14520222,"line_start":751,"line_end":751,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520227,"byte_end":14520278,"line_start":752,"line_end":752,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520283,"byte_end":14520286,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/     assert!(rx1.is_empty());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520291,"byte_end":14520323,"line_start":754,"line_end":754,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520328,"byte_end":14520331,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520336,"byte_end":14520365,"line_start":756,"line_end":756,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520370,"byte_end":14520399,"line_start":757,"line_end":757,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520404,"byte_end":14520407,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/     assert!(!rx1.is_empty());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520412,"byte_end":14520445,"line_start":759,"line_end":759,"column_start":5,"column_end":38}},{"value":"/     assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520450,"byte_end":14520500,"line_start":760,"line_end":760,"column_start":5,"column_end":55}},{"value":"/     assert_eq!(rx1.recv().await.unwrap(), 20);     ","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520505,"byte_end":14520560,"line_start":761,"line_end":761,"column_start":5,"column_end":60}},{"value":"/     assert!(rx1.is_empty());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520565,"byte_end":14520597,"line_start":762,"line_end":762,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520602,"byte_end":14520607,"line_start":763,"line_end":763,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14520612,"byte_end":14520619,"line_start":764,"line_end":764,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525539,"byte_end":14525550,"line_start":890,"line_end":890,"column_start":12,"column_end":23},"name":"resubscribe","qualname":"<Receiver<T>>::resubscribe","value":"fn resubscribe<'_>(&'_ Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Re-subscribes to the channel starting from the current tail element.","sig":null,"attributes":[{"value":"/ Re-subscribes to the channel starting from the current tail element.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14524780,"byte_end":14524852,"line_start":867,"line_end":867,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14524857,"byte_end":14524860,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ This [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14524865,"byte_end":14524933,"line_start":869,"line_end":869,"column_start":5,"column_end":73}},{"value":"/ **after** it has resubscribed. This will not include elements that are","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14524938,"byte_end":14525012,"line_start":870,"line_end":870,"column_start":5,"column_end":79}},{"value":"/ in the queue of the current receiver. Consider the following example.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525017,"byte_end":14525090,"line_start":871,"line_end":871,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525095,"byte_end":14525098,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525103,"byte_end":14525117,"line_start":873,"line_end":873,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525122,"byte_end":14525125,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525130,"byte_end":14525137,"line_start":875,"line_end":875,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525142,"byte_end":14525173,"line_start":876,"line_end":876,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525178,"byte_end":14525181,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525186,"byte_end":14525204,"line_start":878,"line_end":878,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525209,"byte_end":14525230,"line_start":879,"line_end":879,"column_start":5,"column_end":26}},{"value":"/   let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525235,"byte_end":14525282,"line_start":880,"line_end":880,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525287,"byte_end":14525290,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/   tx.send(1).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525295,"byte_end":14525321,"line_start":882,"line_end":882,"column_start":5,"column_end":31}},{"value":"/   let mut rx2 = rx.resubscribe();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525326,"byte_end":14525363,"line_start":883,"line_end":883,"column_start":5,"column_end":42}},{"value":"/   tx.send(2).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525368,"byte_end":14525394,"line_start":884,"line_end":884,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525399,"byte_end":14525402,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/   assert_eq!(rx2.recv().await.unwrap(), 2);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525407,"byte_end":14525454,"line_start":886,"line_end":886,"column_start":5,"column_end":52}},{"value":"/   assert_eq!(rx.recv().await.unwrap(), 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525459,"byte_end":14525505,"line_start":887,"line_end":887,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525510,"byte_end":14525515,"line_start":888,"line_end":888,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525520,"byte_end":14525527,"line_start":889,"line_end":889,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528161,"byte_end":14528165,"line_start":966,"line_end":966,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525649,"byte_end":14525695,"line_start":894,"line_end":894,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525700,"byte_end":14525703,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525708,"byte_end":14525776,"line_start":896,"line_end":896,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525781,"byte_end":14525813,"line_start":897,"line_end":897,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525818,"byte_end":14525821,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525826,"byte_end":14525896,"line_start":899,"line_end":899,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525901,"byte_end":14525975,"line_start":900,"line_end":900,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525980,"byte_end":14525983,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14525988,"byte_end":14526064,"line_start":902,"line_end":902,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526069,"byte_end":14526145,"line_start":903,"line_end":903,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526150,"byte_end":14526218,"line_start":904,"line_end":904,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526223,"byte_end":14526296,"line_start":905,"line_end":905,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526301,"byte_end":14526370,"line_start":906,"line_end":906,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526375,"byte_end":14526420,"line_start":907,"line_end":907,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526425,"byte_end":14526428,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526433,"byte_end":14526452,"line_start":909,"line_end":909,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526457,"byte_end":14526460,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. If `recv` is used as the event in a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526465,"byte_end":14526532,"line_start":911,"line_end":911,"column_start":5,"column_end":72}},{"value":"/ [`tokio::select!`](crate::select) statement and some other branch","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526537,"byte_end":14526606,"line_start":912,"line_end":912,"column_start":5,"column_end":74}},{"value":"/ completes first, it is guaranteed that no messages were received on this","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526611,"byte_end":14526687,"line_start":913,"line_end":913,"column_start":5,"column_end":81}},{"value":"/ channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526692,"byte_end":14526704,"line_start":914,"line_end":914,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526709,"byte_end":14526712,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526717,"byte_end":14526767,"line_start":916,"line_end":916,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526772,"byte_end":14526824,"line_start":917,"line_end":917,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526829,"byte_end":14526832,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526837,"byte_end":14526851,"line_start":919,"line_end":919,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526856,"byte_end":14526859,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526864,"byte_end":14526871,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526876,"byte_end":14526907,"line_start":922,"line_end":922,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526912,"byte_end":14526915,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526920,"byte_end":14526938,"line_start":924,"line_end":924,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526943,"byte_end":14526964,"line_start":925,"line_end":925,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14526969,"byte_end":14527020,"line_start":926,"line_end":926,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527025,"byte_end":14527062,"line_start":927,"line_end":927,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527067,"byte_end":14527070,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527075,"byte_end":14527108,"line_start":929,"line_end":929,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527113,"byte_end":14527167,"line_start":930,"line_end":930,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527172,"byte_end":14527226,"line_start":931,"line_end":931,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527231,"byte_end":14527242,"line_start":932,"line_end":932,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527247,"byte_end":14527250,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527255,"byte_end":14527288,"line_start":934,"line_end":934,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527293,"byte_end":14527347,"line_start":935,"line_end":935,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527352,"byte_end":14527406,"line_start":936,"line_end":936,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527411,"byte_end":14527422,"line_start":937,"line_end":937,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527427,"byte_end":14527430,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527435,"byte_end":14527464,"line_start":939,"line_end":939,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527469,"byte_end":14527498,"line_start":940,"line_end":940,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527503,"byte_end":14527508,"line_start":941,"line_end":941,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527513,"byte_end":14527520,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527525,"byte_end":14527528,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527533,"byte_end":14527549,"line_start":944,"line_end":944,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527554,"byte_end":14527557,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527562,"byte_end":14527569,"line_start":946,"line_end":946,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527574,"byte_end":14527605,"line_start":947,"line_end":947,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527610,"byte_end":14527613,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527618,"byte_end":14527636,"line_start":949,"line_end":949,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527641,"byte_end":14527662,"line_start":950,"line_end":950,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527667,"byte_end":14527716,"line_start":951,"line_end":951,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527721,"byte_end":14527724,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527729,"byte_end":14527758,"line_start":953,"line_end":953,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527763,"byte_end":14527792,"line_start":954,"line_end":954,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527797,"byte_end":14527826,"line_start":955,"line_end":955,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527831,"byte_end":14527834,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527839,"byte_end":14527876,"line_start":957,"line_end":957,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527881,"byte_end":14527923,"line_start":958,"line_end":958,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527928,"byte_end":14527931,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14527936,"byte_end":14528005,"line_start":960,"line_end":960,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528010,"byte_end":14528013,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528018,"byte_end":14528067,"line_start":962,"line_end":962,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528072,"byte_end":14528121,"line_start":963,"line_end":963,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528126,"byte_end":14528131,"line_start":964,"line_end":964,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528136,"byte_end":14528143,"line_start":965,"line_end":965,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529926,"byte_end":14529934,"line_start":1011,"line_end":1011,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn try_recv<'_>(&'_ mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528267,"byte_end":14528340,"line_start":971,"line_end":971,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528345,"byte_end":14528348,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528353,"byte_end":14528425,"line_start":973,"line_end":973,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528430,"byte_end":14528454,"line_start":974,"line_end":974,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528459,"byte_end":14528462,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of two","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528467,"byte_end":14528547,"line_start":976,"line_end":976,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528552,"byte_end":14528626,"line_start":977,"line_end":977,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528631,"byte_end":14528634,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528639,"byte_end":14528712,"line_start":979,"line_end":979,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528717,"byte_end":14528791,"line_start":980,"line_end":980,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528796,"byte_end":14528799,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528804,"byte_end":14528880,"line_start":982,"line_end":982,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528885,"byte_end":14528961,"line_start":983,"line_end":983,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14528966,"byte_end":14529037,"line_start":984,"line_end":984,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529042,"byte_end":14529115,"line_start":985,"line_end":985,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529120,"byte_end":14529193,"line_start":986,"line_end":986,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529198,"byte_end":14529269,"line_start":987,"line_end":987,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529274,"byte_end":14529326,"line_start":988,"line_end":988,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529331,"byte_end":14529334,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529339,"byte_end":14529391,"line_start":990,"line_end":990,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529396,"byte_end":14529456,"line_start":991,"line_end":991,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529461,"byte_end":14529511,"line_start":992,"line_end":992,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529516,"byte_end":14529519,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529524,"byte_end":14529538,"line_start":994,"line_end":994,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529543,"byte_end":14529546,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529551,"byte_end":14529558,"line_start":996,"line_end":996,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529563,"byte_end":14529594,"line_start":997,"line_end":997,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529599,"byte_end":14529602,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529607,"byte_end":14529625,"line_start":999,"line_end":999,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529630,"byte_end":14529651,"line_start":1000,"line_end":1000,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529656,"byte_end":14529706,"line_start":1001,"line_end":1001,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529711,"byte_end":14529714,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529719,"byte_end":14529759,"line_start":1003,"line_end":1003,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529764,"byte_end":14529767,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529772,"byte_end":14529801,"line_start":1005,"line_end":1005,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529806,"byte_end":14529809,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529814,"byte_end":14529857,"line_start":1007,"line_end":1007,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529862,"byte_end":14529892,"line_start":1008,"line_end":1008,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529897,"byte_end":14529902,"line_start":1009,"line_end":1009,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14529907,"byte_end":14529914,"line_start":1010,"line_end":1010,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14530120,"byte_end":14530124,"line_start":1018,"line_end":1018,"column_start":8,"column_end":12},"name":"drop","qualname":"<Receiver<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14533357,"byte_end":14533360,"line_start":1130,"line_end":1130,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Sender<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14533509,"byte_end":14533512,"line_start":1136,"line_end":1136,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Receiver<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1337},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1435},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1586},{"krate":0,"index":1589},{"krate":0,"index":1592},{"krate":0,"index":1595},{"krate":0,"index":1598},{"krate":0,"index":1601},{"krate":0,"index":1786},{"krate":0,"index":1865},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1945},{"krate":0,"index":1948},{"krate":0,"index":1951},{"krate":0,"index":1977}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values between\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/macros/cfg.rs","byte_start":30078,"byte_end":30102,"line_start":312,"line_end":312,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values between","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14534191,"byte_end":14534261,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ asynchronous tasks.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14534262,"byte_end":14534285,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14534286,"byte_end":14534289,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14534290,"byte_end":14534370,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14534371,"byte_end":14534449,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14534450,"byte_end":14534526,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14534527,"byte_end":14534606,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method will always complete immediately.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14534607,"byte_end":14534687,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14534688,"byte_end":14534759,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14534760,"byte_end":14534782,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14534783,"byte_end":14534786,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Similar to the `mpsc` channels provided by `std`, the channel constructor","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14534787,"byte_end":14534864,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ functions provide separate send and receive handles, [`Sender`] and","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14534865,"byte_end":14534936,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [`Receiver`] for the bounded channel, [`UnboundedSender`] and","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14534937,"byte_end":14535002,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedReceiver`] for the unbounded channel. If there is no message to read,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535003,"byte_end":14535087,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ the current task will be notified when a new value is sent. [`Sender`] and","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535088,"byte_end":14535166,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ [`UnboundedSender`] allow sending values into the channel. If the bounded","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535167,"byte_end":14535244,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ channel is at capacity, the send is rejected and the task will be notified","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535245,"byte_end":14535323,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ when additional capacity is available. In other words, the channel provides","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535324,"byte_end":14535403,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ backpressure.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535404,"byte_end":14535421,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535422,"byte_end":14535425,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535426,"byte_end":14535429,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535430,"byte_end":14535449,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535450,"byte_end":14535453,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535454,"byte_end":14535520,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535521,"byte_end":14535601,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535602,"byte_end":14535679,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535680,"byte_end":14535683,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535684,"byte_end":14535754,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535755,"byte_end":14535834,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535835,"byte_end":14535858,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535859,"byte_end":14535862,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535863,"byte_end":14535883,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535884,"byte_end":14535887,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535888,"byte_end":14535968,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14535969,"byte_end":14536049,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536050,"byte_end":14536128,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536129,"byte_end":14536201,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536202,"byte_end":14536276,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536277,"byte_end":14536289,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536290,"byte_end":14536293,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536294,"byte_end":14536341,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536342,"byte_end":14536345,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536346,"byte_end":14536427,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536428,"byte_end":14536463,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536464,"byte_end":14536467,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536468,"byte_end":14536548,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. Instead of calling","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536549,"byte_end":14536630,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ the async [`send`][bounded-send] or [`recv`][bounded-recv] methods, in","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536631,"byte_end":14536705,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ synchronous code you will need to use the [`blocking_send`][blocking-send] or","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536706,"byte_end":14536787,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ [`blocking_recv`][blocking-recv] methods.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536788,"byte_end":14536833,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536834,"byte_end":14536837,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536838,"byte_end":14536918,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536919,"byte_end":14536997,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14536998,"byte_end":14537064,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14537065,"byte_end":14537147,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14537148,"byte_end":14537212,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14537213,"byte_end":14537216,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Please be aware that the above remarks were written with the `mpsc` channel","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14537217,"byte_end":14537296,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ in mind, but they can also be generalized to other kinds of channels. In","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14537297,"byte_end":14537373,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/ general, any channel method that isn't marked async can be called anywhere,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14537374,"byte_end":14537453,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/ including outside of the runtime. For example, sending a message on a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14537454,"byte_end":14537527,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ oneshot channel from outside the runtime is perfectly fine.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14537528,"byte_end":14537591,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14537592,"byte_end":14537595,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Multiple runtimes","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14537596,"byte_end":14537619,"line_start":67,"line_end":67,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14537620,"byte_end":14537623,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The mpsc channel does not care about which runtime you use it in, and can be","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14537624,"byte_end":14537704,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ used to send messages from one runtime to another. It can also be used in","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14537705,"byte_end":14537782,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/ non-Tokio runtimes.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14537783,"byte_end":14537806,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14537807,"byte_end":14537810,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ There is one exception to the above: the [`send_timeout`] must be used from","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14537811,"byte_end":14537890,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/ within a Tokio runtime, however it is still not tied to one specific Tokio","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14537891,"byte_end":14537969,"line_start":74,"line_end":74,"column_start":1,"column_end":79}},{"value":"/ runtime, and the sender may be moved from one Tokio runtime to another.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14537970,"byte_end":14538045,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538046,"byte_end":14538049,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538050,"byte_end":14538091,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538092,"byte_end":14538137,"line_start":78,"line_end":78,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538138,"byte_end":14538191,"line_start":79,"line_end":79,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538192,"byte_end":14538247,"line_start":80,"line_end":80,"column_start":1,"column_end":56}},{"value":"/ [blocking-send]: crate::sync::mpsc::Sender::blocking_send()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538248,"byte_end":14538311,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"/ [blocking-recv]: crate::sync::mpsc::Receiver::blocking_recv()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538312,"byte_end":14538377,"line_start":82,"line_end":82,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538378,"byte_end":14538437,"line_start":83,"line_end":83,"column_start":1,"column_end":60}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538438,"byte_end":14538501,"line_start":84,"line_end":84,"column_start":1,"column_end":64}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538502,"byte_end":14538562,"line_start":85,"line_end":85,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538563,"byte_end":14538608,"line_start":86,"line_end":86,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538609,"byte_end":14538699,"line_start":87,"line_end":87,"column_start":1,"column_end":91}},{"value":"/ [`send_timeout`]: crate::sync::mpsc::Sender::send_timeout","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14538700,"byte_end":14538761,"line_start":88,"line_end":88,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1469},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14552967,"byte_end":14552973,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":1471}],"decl_id":null,"docs":" Sends values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends values to the associated `Receiver`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14552627,"byte_end":14552673,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14552674,"byte_end":14552677,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14552678,"byte_end":14552741,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14552742,"byte_end":14552745,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ To convert the `Sender` into a `Sink` or use it in a poll function, you can","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14552746,"byte_end":14552825,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ use the [`PollSender`] utility.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14552826,"byte_end":14552861,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14552862,"byte_end":14552865,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`PollSender`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSender.html","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14552866,"byte_end":14552955,"line_start":21,"line_end":21,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":1472},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553980,"byte_end":14553990,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"WeakSender","qualname":"::sync::mpsc::bounded::WeakSender","value":"WeakSender {  }","parent":null,"children":[{"krate":0,"index":1474}],"decl_id":null,"docs":" A sender that does not prevent the channel from being closed.","sig":null,"attributes":[{"value":"/ A sender that does not prevent the channel from being closed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553016,"byte_end":14553081,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553082,"byte_end":14553085,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ If all [`Sender`] instances of a channel were dropped and only `WeakSender`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553086,"byte_end":14553165,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ instances remain, the channel is closed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553166,"byte_end":14553210,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553211,"byte_end":14553214,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ In order to send messages, the `WeakSender` needs to be upgraded using","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553215,"byte_end":14553289,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ [`WeakSender::upgrade`], which returns `Option<Sender>`. It returns `None`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553290,"byte_end":14553368,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ if all `Sender`s have been dropped, and otherwise it returns a `Sender`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553369,"byte_end":14553445,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553446,"byte_end":14553449,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553450,"byte_end":14553472,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ [`WeakSender::upgrade`]: WeakSender::upgrade","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553473,"byte_end":14553521,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553522,"byte_end":14553525,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ #Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553526,"byte_end":14553539,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553540,"byte_end":14553543,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553544,"byte_end":14553551,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc::channel;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553552,"byte_end":14553587,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553588,"byte_end":14553591,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553592,"byte_end":14553610,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553611,"byte_end":14553632,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/     let (tx, _rx) = channel::<i32>(15);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553633,"byte_end":14553676,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/     let tx_weak = tx.downgrade();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553677,"byte_end":14553714,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/   ","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553715,"byte_end":14553721,"line_start":47,"line_end":47,"column_start":1,"column_end":7}},{"value":"/     // Upgrading will succeed because `tx` still exists.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553722,"byte_end":14553782,"line_start":48,"line_end":48,"column_start":1,"column_end":61}},{"value":"/     assert!(tx_weak.upgrade().is_some());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553783,"byte_end":14553828,"line_start":49,"line_end":49,"column_start":1,"column_end":46}},{"value":"/   ","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553829,"byte_end":14553835,"line_start":50,"line_end":50,"column_start":1,"column_end":7}},{"value":"/     // If we drop `tx`, then it will fail.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553836,"byte_end":14553882,"line_start":51,"line_end":51,"column_start":1,"column_end":47}},{"value":"/     drop(tx);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553883,"byte_end":14553900,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/     assert!(tx_weak.clone().upgrade().is_none());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553901,"byte_end":14553954,"line_start":53,"line_end":53,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553955,"byte_end":14553960,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14553961,"byte_end":14553968,"line_start":55,"line_end":55,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1475},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554373,"byte_end":14554379,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"Permit","qualname":"::sync::mpsc::bounded::Permit","value":"Permit {  }","parent":null,"children":[{"krate":0,"index":1478}],"decl_id":null,"docs":" Permits to send one value into the channel.","sig":null,"attributes":[{"value":"/ Permits to send one value into the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554040,"byte_end":14554087,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554088,"byte_end":14554091,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ `Permit` values are returned by [`Sender::reserve()`] and [`Sender::try_reserve()`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554092,"byte_end":14554179,"line_start":62,"line_end":62,"column_start":1,"column_end":88}},{"value":"/ and are used to guarantee channel capacity before generating a message to send.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554180,"byte_end":14554263,"line_start":63,"line_end":63,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554264,"byte_end":14554267,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`Sender::reserve()`]: Sender::reserve","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554268,"byte_end":14554310,"line_start":65,"line_end":65,"column_start":1,"column_end":43}},{"value":"/ [`Sender::try_reserve()`]: Sender::try_reserve","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554311,"byte_end":14554361,"line_start":66,"line_end":66,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1479},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554948,"byte_end":14554959,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"OwnedPermit","qualname":"::sync::mpsc::bounded::OwnedPermit","value":"OwnedPermit {  }","parent":null,"children":[{"krate":0,"index":1481}],"decl_id":null,"docs":" Owned permit to send one value into the channel.","sig":null,"attributes":[{"value":"/ Owned permit to send one value into the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554430,"byte_end":14554482,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554483,"byte_end":14554486,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This is identical to the [`Permit`] type, except that it moves the sender","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554487,"byte_end":14554564,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ rather than borrowing it.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554565,"byte_end":14554594,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554595,"byte_end":14554598,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ `OwnedPermit` values are returned by [`Sender::reserve_owned()`] and","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554599,"byte_end":14554671,"line_start":76,"line_end":76,"column_start":1,"column_end":73}},{"value":"/ [`Sender::try_reserve_owned()`] and are used to guarantee channel capacity","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554672,"byte_end":14554750,"line_start":77,"line_end":77,"column_start":1,"column_end":79}},{"value":"/ before generating a message to send.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554751,"byte_end":14554791,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554792,"byte_end":14554795,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554796,"byte_end":14554818,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ [`Sender::reserve_owned()`]: Sender::reserve_owned","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554819,"byte_end":14554873,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/ [`Sender::try_reserve_owned()`]: Sender::try_reserve_owned","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14554874,"byte_end":14554936,"line_start":82,"line_end":82,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1482},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555327,"byte_end":14555335,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":1484}],"decl_id":null,"docs":" Receives values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receives values from the associated `Sender`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555010,"byte_end":14555059,"line_start":87,"line_end":87,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555060,"byte_end":14555063,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555064,"byte_end":14555127,"line_start":89,"line_end":89,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555128,"byte_end":14555131,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`ReceiverStream`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555132,"byte_end":14555205,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555206,"byte_end":14555209,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ [`ReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.ReceiverStream.html","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555210,"byte_end":14555315,"line_start":93,"line_end":93,"column_start":1,"column_end":106}}]},{"kind":"Function","id":{"krate":0,"index":1485},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556801,"byte_end":14556808,"line_start":144,"line_end":144,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks\n with backpressure.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555408,"byte_end":14555487,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/ with backpressure.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555488,"byte_end":14555510,"line_start":100,"line_end":100,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555511,"byte_end":14555514,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ The channel will buffer up to the provided number of messages.  Once the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555515,"byte_end":14555591,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ buffer is full, attempts to send new messages will wait until a message is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555592,"byte_end":14555670,"line_start":103,"line_end":103,"column_start":1,"column_end":79}},{"value":"/ received from the channel. The provided buffer capacity must be at least 1.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555671,"byte_end":14555750,"line_start":104,"line_end":104,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555751,"byte_end":14555754,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555755,"byte_end":14555832,"line_start":106,"line_end":106,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555833,"byte_end":14555858,"line_start":107,"line_end":107,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555859,"byte_end":14555862,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555863,"byte_end":14555942,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555943,"byte_end":14555991,"line_start":110,"line_end":110,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555992,"byte_end":14555995,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14555996,"byte_end":14556075,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556076,"byte_end":14556151,"line_start":113,"line_end":113,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return `None`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556152,"byte_end":14556211,"line_start":114,"line_end":114,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556212,"byte_end":14556215,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556216,"byte_end":14556228,"line_start":116,"line_end":116,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556229,"byte_end":14556232,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ Panics if the buffer capacity is 0.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556233,"byte_end":14556272,"line_start":118,"line_end":118,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556273,"byte_end":14556276,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556277,"byte_end":14556291,"line_start":120,"line_end":120,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556292,"byte_end":14556295,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556296,"byte_end":14556307,"line_start":122,"line_end":122,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556308,"byte_end":14556334,"line_start":123,"line_end":123,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556335,"byte_end":14556338,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556339,"byte_end":14556357,"line_start":125,"line_end":125,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556358,"byte_end":14556379,"line_start":126,"line_end":126,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556380,"byte_end":14556426,"line_start":127,"line_end":127,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556427,"byte_end":14556430,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556431,"byte_end":14556464,"line_start":129,"line_end":129,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556465,"byte_end":14556493,"line_start":130,"line_end":130,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556494,"byte_end":14556544,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556545,"byte_end":14556594,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556595,"byte_end":14556622,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556623,"byte_end":14556640,"line_start":134,"line_end":134,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556641,"byte_end":14556654,"line_start":135,"line_end":135,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556655,"byte_end":14556666,"line_start":136,"line_end":136,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556667,"byte_end":14556670,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556671,"byte_end":14556716,"line_start":138,"line_end":138,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556717,"byte_end":14556753,"line_start":139,"line_end":139,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556754,"byte_end":14556763,"line_start":140,"line_end":140,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556764,"byte_end":14556769,"line_start":141,"line_end":141,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556770,"byte_end":14556777,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14556778,"byte_end":14556793,"line_start":143,"line_end":143,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559439,"byte_end":14559443,"line_start":221,"line_end":221,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14557408,"byte_end":14557454,"line_start":164,"line_end":164,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14557459,"byte_end":14557462,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14557467,"byte_end":14557542,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14557547,"byte_end":14557620,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14557625,"byte_end":14557701,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14557706,"byte_end":14557781,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14557786,"byte_end":14557789,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14557794,"byte_end":14557867,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will sleep until a message is sent or","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14557872,"byte_end":14557946,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.  Note that if [`close`] is called, but there are","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14557951,"byte_end":14558026,"line_start":173,"line_end":173,"column_start":5,"column_end":80}},{"value":"/ still outstanding [`Permits`] from before it was closed, the channel is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558031,"byte_end":14558106,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ not considered closed by `recv` until the permits are released.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558111,"byte_end":14558178,"line_start":175,"line_end":175,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558183,"byte_end":14558186,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558191,"byte_end":14558210,"line_start":177,"line_end":177,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558215,"byte_end":14558218,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. If `recv` is used as the event in a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558223,"byte_end":14558290,"line_start":179,"line_end":179,"column_start":5,"column_end":72}},{"value":"/ [`tokio::select!`](crate::select) statement and some other branch","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558295,"byte_end":14558364,"line_start":180,"line_end":180,"column_start":5,"column_end":74}},{"value":"/ completes first, it is guaranteed that no messages were received on this","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558369,"byte_end":14558445,"line_start":181,"line_end":181,"column_start":5,"column_end":81}},{"value":"/ channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558450,"byte_end":14558462,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558467,"byte_end":14558470,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558475,"byte_end":14558501,"line_start":184,"line_end":184,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558506,"byte_end":14558555,"line_start":185,"line_end":185,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558560,"byte_end":14558563,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558568,"byte_end":14558582,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558587,"byte_end":14558590,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558595,"byte_end":14558602,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558607,"byte_end":14558633,"line_start":190,"line_end":190,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558638,"byte_end":14558641,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558646,"byte_end":14558664,"line_start":192,"line_end":192,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558669,"byte_end":14558690,"line_start":193,"line_end":193,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558695,"byte_end":14558741,"line_start":194,"line_end":194,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558746,"byte_end":14558749,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558754,"byte_end":14558787,"line_start":196,"line_end":196,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558792,"byte_end":14558836,"line_start":197,"line_end":197,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558841,"byte_end":14558852,"line_start":198,"line_end":198,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558857,"byte_end":14558860,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558865,"byte_end":14558916,"line_start":200,"line_end":200,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558921,"byte_end":14558963,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558968,"byte_end":14558973,"line_start":202,"line_end":202,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558978,"byte_end":14558985,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558990,"byte_end":14558993,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14558998,"byte_end":14559022,"line_start":205,"line_end":205,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559027,"byte_end":14559030,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559035,"byte_end":14559042,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559047,"byte_end":14559073,"line_start":208,"line_end":208,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559078,"byte_end":14559081,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559086,"byte_end":14559104,"line_start":210,"line_end":210,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559109,"byte_end":14559130,"line_start":211,"line_end":211,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559135,"byte_end":14559181,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559186,"byte_end":14559189,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559194,"byte_end":14559234,"line_start":214,"line_end":214,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559239,"byte_end":14559279,"line_start":215,"line_end":215,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559284,"byte_end":14559287,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559292,"byte_end":14559343,"line_start":217,"line_end":217,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559348,"byte_end":14559399,"line_start":218,"line_end":218,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559404,"byte_end":14559409,"line_start":219,"line_end":219,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559414,"byte_end":14559421,"line_start":220,"line_end":220,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561046,"byte_end":14561054,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn try_recv<'_>(&'_ mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next value for this receiver.","sig":null,"attributes":[{"value":"/ Tries to receive the next value for this receiver.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559564,"byte_end":14559618,"line_start":226,"line_end":226,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559623,"byte_end":14559626,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ This method returns the [`Empty`] error if the channel is currently","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559631,"byte_end":14559702,"line_start":228,"line_end":228,"column_start":5,"column_end":76}},{"value":"/ empty, but there are still outstanding [senders] or [permits].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559707,"byte_end":14559773,"line_start":229,"line_end":229,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559778,"byte_end":14559781,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This method returns the [`Disconnected`] error if the channel is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559786,"byte_end":14559854,"line_start":231,"line_end":231,"column_start":5,"column_end":73}},{"value":"/ currently empty, and there are no outstanding [senders] or [permits].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559859,"byte_end":14559932,"line_start":232,"line_end":232,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559937,"byte_end":14559940,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Unlike the [`poll_recv`] method, this method will never return an","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14559945,"byte_end":14560014,"line_start":234,"line_end":234,"column_start":5,"column_end":74}},{"value":"/ [`Empty`] error spuriously.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560019,"byte_end":14560050,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560055,"byte_end":14560058,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ [`Empty`]: crate::sync::mpsc::error::TryRecvError::Empty","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560063,"byte_end":14560123,"line_start":237,"line_end":237,"column_start":5,"column_end":65}},{"value":"/ [`Disconnected`]: crate::sync::mpsc::error::TryRecvError::Disconnected","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560128,"byte_end":14560202,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ [`poll_recv`]: Self::poll_recv","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560207,"byte_end":14560241,"line_start":239,"line_end":239,"column_start":5,"column_end":39}},{"value":"/ [senders]: crate::sync::mpsc::Sender","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560246,"byte_end":14560286,"line_start":240,"line_end":240,"column_start":5,"column_end":45}},{"value":"/ [permits]: crate::sync::mpsc::Permit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560291,"byte_end":14560331,"line_start":241,"line_end":241,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560336,"byte_end":14560339,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560344,"byte_end":14560358,"line_start":243,"line_end":243,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560363,"byte_end":14560366,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560371,"byte_end":14560378,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560383,"byte_end":14560409,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"/ use tokio::sync::mpsc::error::TryRecvError;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560414,"byte_end":14560461,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560466,"byte_end":14560469,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560474,"byte_end":14560492,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560497,"byte_end":14560518,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560523,"byte_end":14560569,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560574,"byte_end":14560577,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560582,"byte_end":14560622,"line_start":253,"line_end":253,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560627,"byte_end":14560630,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(\"hello\"), rx.try_recv());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560635,"byte_end":14560682,"line_start":255,"line_end":255,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(Err(TryRecvError::Empty), rx.try_recv());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560687,"byte_end":14560747,"line_start":256,"line_end":256,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560752,"byte_end":14560755,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560760,"byte_end":14560800,"line_start":258,"line_end":258,"column_start":5,"column_end":45}},{"value":"/     // Drop the last sender, closing the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560805,"byte_end":14560858,"line_start":259,"line_end":259,"column_start":5,"column_end":58}},{"value":"/     drop(tx);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560863,"byte_end":14560880,"line_start":260,"line_end":260,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560885,"byte_end":14560888,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(\"hello\"), rx.try_recv());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560893,"byte_end":14560940,"line_start":262,"line_end":262,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(Err(TryRecvError::Disconnected), rx.try_recv());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14560945,"byte_end":14561012,"line_start":263,"line_end":263,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561017,"byte_end":14561022,"line_start":264,"line_end":264,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561027,"byte_end":14561034,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563098,"byte_end":14563111,"line_start":322,"line_end":322,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<Receiver<T>>::blocking_recv","value":"fn blocking_recv<'_>(&'_ mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561135,"byte_end":14561197,"line_start":270,"line_end":270,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561202,"byte_end":14561205,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561210,"byte_end":14561285,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561290,"byte_end":14561363,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561368,"byte_end":14561444,"line_start":274,"line_end":274,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561449,"byte_end":14561524,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561529,"byte_end":14561532,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561537,"byte_end":14561610,"line_start":277,"line_end":277,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will block until a message is sent or","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561615,"byte_end":14561689,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561694,"byte_end":14561720,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561725,"byte_end":14561728,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561733,"byte_end":14561801,"line_start":281,"line_end":281,"column_start":5,"column_end":73}},{"value":"/ asynchronous code to synchronous code, and will work even if the sender","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561806,"byte_end":14561881,"line_start":282,"line_end":282,"column_start":5,"column_end":80}},{"value":"/ is not using [`blocking_send`] to send the message.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561886,"byte_end":14561941,"line_start":283,"line_end":283,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561946,"byte_end":14561949,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14561954,"byte_end":14562023,"line_start":285,"line_end":285,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562028,"byte_end":14562100,"line_start":286,"line_end":286,"column_start":5,"column_end":77}},{"value":"/ closed by `blocking_recv` until the permits are released.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562105,"byte_end":14562166,"line_start":287,"line_end":287,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562171,"byte_end":14562174,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562179,"byte_end":14562205,"line_start":289,"line_end":289,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562210,"byte_end":14562259,"line_start":290,"line_end":290,"column_start":5,"column_end":54}},{"value":"/ [`blocking_send`]: fn@crate::sync::mpsc::Sender::blocking_send","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562264,"byte_end":14562330,"line_start":291,"line_end":291,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562335,"byte_end":14562338,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562343,"byte_end":14562355,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562360,"byte_end":14562363,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562368,"byte_end":14562435,"line_start":295,"line_end":295,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562440,"byte_end":14562452,"line_start":296,"line_end":296,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562457,"byte_end":14562460,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562465,"byte_end":14562479,"line_start":298,"line_end":298,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562484,"byte_end":14562487,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562492,"byte_end":14562499,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562504,"byte_end":14562524,"line_start":301,"line_end":301,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562529,"byte_end":14562561,"line_start":302,"line_end":302,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562566,"byte_end":14562592,"line_start":303,"line_end":303,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562597,"byte_end":14562600,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562605,"byte_end":14562620,"line_start":305,"line_end":305,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562625,"byte_end":14562676,"line_start":306,"line_end":306,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562681,"byte_end":14562684,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562689,"byte_end":14562736,"line_start":308,"line_end":308,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562741,"byte_end":14562794,"line_start":309,"line_end":309,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562799,"byte_end":14562810,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562815,"byte_end":14562818,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/     Runtime::new()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562823,"byte_end":14562845,"line_start":312,"line_end":312,"column_start":5,"column_end":27}},{"value":"/         .unwrap()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562850,"byte_end":14562871,"line_start":313,"line_end":313,"column_start":5,"column_end":26}},{"value":"/         .block_on(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562876,"byte_end":14562910,"line_start":314,"line_end":314,"column_start":5,"column_end":39}},{"value":"/             let _ = tx.send(10).await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562915,"byte_end":14562957,"line_start":315,"line_end":315,"column_start":5,"column_end":47}},{"value":"/         });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562962,"byte_end":14562977,"line_start":316,"line_end":316,"column_start":5,"column_end":20}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14562982,"byte_end":14563015,"line_start":317,"line_end":317,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563020,"byte_end":14563025,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563030,"byte_end":14563037,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563042,"byte_end":14563057,"line_start":320,"line_end":320,"column_start":5,"column_end":20}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563062,"byte_end":14563086,"line_start":321,"line_end":321,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564522,"byte_end":14564527,"line_start":366,"line_end":366,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn close<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel without dropping it.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563194,"byte_end":14563257,"line_start":326,"line_end":326,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563262,"byte_end":14563265,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563270,"byte_end":14563345,"line_start":328,"line_end":328,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered. Any","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563350,"byte_end":14563422,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ outstanding [`Permit`] values will still be able to send messages.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563427,"byte_end":14563497,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563502,"byte_end":14563505,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ To guarantee that no messages are dropped, after calling `close()`,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563510,"byte_end":14563581,"line_start":332,"line_end":332,"column_start":5,"column_end":76}},{"value":"/ `recv()` must be called until `None` is returned. If there are","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563586,"byte_end":14563652,"line_start":333,"line_end":333,"column_start":5,"column_end":71}},{"value":"/ outstanding [`Permit`] or [`OwnedPermit`] values, the `recv` method will","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563657,"byte_end":14563733,"line_start":334,"line_end":334,"column_start":5,"column_end":81}},{"value":"/ not return `None` until those are released.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563738,"byte_end":14563785,"line_start":335,"line_end":335,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563790,"byte_end":14563793,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563798,"byte_end":14563820,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563825,"byte_end":14563857,"line_start":338,"line_end":338,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563862,"byte_end":14563865,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563870,"byte_end":14563884,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563889,"byte_end":14563892,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563897,"byte_end":14563904,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563909,"byte_end":14563935,"line_start":343,"line_end":343,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563940,"byte_end":14563943,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563948,"byte_end":14563966,"line_start":345,"line_end":345,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563971,"byte_end":14563992,"line_start":346,"line_end":346,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(20);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14563997,"byte_end":14564042,"line_start":347,"line_end":347,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564047,"byte_end":14564050,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564055,"byte_end":14564088,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/         let mut i = 0;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564093,"byte_end":14564119,"line_start":350,"line_end":350,"column_start":5,"column_end":31}},{"value":"/         while let Ok(permit) = tx.reserve().await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564124,"byte_end":14564179,"line_start":351,"line_end":351,"column_start":5,"column_end":60}},{"value":"/             permit.send(i);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564184,"byte_end":14564215,"line_start":352,"line_end":352,"column_start":5,"column_end":36}},{"value":"/             i += 1;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564220,"byte_end":14564243,"line_start":353,"line_end":353,"column_start":5,"column_end":28}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564248,"byte_end":14564261,"line_start":354,"line_end":354,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564266,"byte_end":14564277,"line_start":355,"line_end":355,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564282,"byte_end":14564285,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564290,"byte_end":14564309,"line_start":357,"line_end":357,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564314,"byte_end":14564317,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/     while let Some(msg) = rx.recv().await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564322,"byte_end":14564369,"line_start":359,"line_end":359,"column_start":5,"column_end":52}},{"value":"/         println!(\"got {}\", msg);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564374,"byte_end":14564410,"line_start":360,"line_end":360,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564415,"byte_end":14564424,"line_start":361,"line_end":361,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564429,"byte_end":14564432,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/     // Channel closed and no messages are lost.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564437,"byte_end":14564488,"line_start":363,"line_end":363,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564493,"byte_end":14564498,"line_start":364,"line_end":364,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564503,"byte_end":14564510,"line_start":365,"line_end":365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14565751,"byte_end":14565760,"line_start":391,"line_end":391,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"fn poll_recv<'_, '_, '_>(&'_ mut Self, &'_ mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564579,"byte_end":14564633,"line_start":370,"line_end":370,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564638,"byte_end":14564641,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564646,"byte_end":14564670,"line_start":372,"line_end":372,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564675,"byte_end":14564678,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564683,"byte_end":14564757,"line_start":374,"line_end":374,"column_start":5,"column_end":79}},{"value":"/    closed, or if a spurious failure happens.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564762,"byte_end":14564810,"line_start":375,"line_end":375,"column_start":5,"column_end":53}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564815,"byte_end":14564877,"line_start":376,"line_end":376,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564882,"byte_end":14564956,"line_start":377,"line_end":377,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14564961,"byte_end":14565013,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14565018,"byte_end":14565021,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14565026,"byte_end":14565098,"line_start":380,"line_end":380,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14565103,"byte_end":14565179,"line_start":381,"line_end":381,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14565184,"byte_end":14565260,"line_start":382,"line_end":382,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14565265,"byte_end":14565336,"line_start":383,"line_end":383,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14565341,"byte_end":14565390,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14565395,"byte_end":14565398,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Pending` due to a spurious failure, then","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14565403,"byte_end":14565477,"line_start":386,"line_end":386,"column_start":5,"column_end":79}},{"value":"/ the `Waker` will be notified when the situation causing the spurious","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14565482,"byte_end":14565554,"line_start":387,"line_end":387,"column_start":5,"column_end":77}},{"value":"/ failure has been resolved. Note that receiving such a wakeup does not","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14565559,"byte_end":14565632,"line_start":388,"line_end":388,"column_start":5,"column_end":78}},{"value":"/ guarantee that the next call will succeed — it could fail with another","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14565637,"byte_end":14565713,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ spurious failure.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14565718,"byte_end":14565739,"line_start":390,"line_end":390,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14565895,"byte_end":14565898,"line_start":397,"line_end":397,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Receiver<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568307,"byte_end":14568311,"line_start":466,"line_end":466,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"async fn send<'_>(&'_ Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566216,"byte_end":14566267,"line_start":411,"line_end":411,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566272,"byte_end":14566275,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566280,"byte_end":14566356,"line_start":413,"line_end":413,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566361,"byte_end":14566437,"line_start":414,"line_end":414,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566442,"byte_end":14566516,"line_start":415,"line_end":415,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566521,"byte_end":14566596,"line_start":416,"line_end":416,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566601,"byte_end":14566670,"line_start":417,"line_end":417,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566675,"byte_end":14566747,"line_start":418,"line_end":418,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566752,"byte_end":14566783,"line_start":419,"line_end":419,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566788,"byte_end":14566791,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566796,"byte_end":14566808,"line_start":421,"line_end":421,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566813,"byte_end":14566816,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566821,"byte_end":14566894,"line_start":423,"line_end":423,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566899,"byte_end":14566973,"line_start":424,"line_end":424,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566978,"byte_end":14567038,"line_start":425,"line_end":425,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567043,"byte_end":14567046,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567051,"byte_end":14567081,"line_start":427,"line_end":427,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567086,"byte_end":14567112,"line_start":428,"line_end":428,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567117,"byte_end":14567120,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567125,"byte_end":14567144,"line_start":430,"line_end":430,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567149,"byte_end":14567152,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ If `send` is used as the event in a [`tokio::select!`](crate::select)","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567157,"byte_end":14567230,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/ statement and some other branch completes first, then it is guaranteed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567235,"byte_end":14567309,"line_start":433,"line_end":433,"column_start":5,"column_end":79}},{"value":"/ that the message was not sent.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567314,"byte_end":14567348,"line_start":434,"line_end":434,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567353,"byte_end":14567356,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ This channel uses a queue to ensure that calls to `send` and `reserve`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567361,"byte_end":14567435,"line_start":436,"line_end":436,"column_start":5,"column_end":79}},{"value":"/ complete in the order they were requested.  Cancelling a call to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567440,"byte_end":14567508,"line_start":437,"line_end":437,"column_start":5,"column_end":73}},{"value":"/ `send` makes you lose your place in the queue.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567513,"byte_end":14567563,"line_start":438,"line_end":438,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567568,"byte_end":14567571,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567576,"byte_end":14567590,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567595,"byte_end":14567598,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567603,"byte_end":14567673,"line_start":442,"line_end":442,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567678,"byte_end":14567717,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567722,"byte_end":14567725,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567730,"byte_end":14567741,"line_start":445,"line_end":445,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567746,"byte_end":14567772,"line_start":446,"line_end":446,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567777,"byte_end":14567780,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567785,"byte_end":14567803,"line_start":448,"line_end":448,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567808,"byte_end":14567829,"line_start":449,"line_end":449,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567834,"byte_end":14567878,"line_start":450,"line_end":450,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567883,"byte_end":14567886,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567891,"byte_end":14567924,"line_start":452,"line_end":452,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567929,"byte_end":14567957,"line_start":453,"line_end":453,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14567962,"byte_end":14568012,"line_start":454,"line_end":454,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568017,"byte_end":14568066,"line_start":455,"line_end":455,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568071,"byte_end":14568098,"line_start":456,"line_end":456,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568103,"byte_end":14568120,"line_start":457,"line_end":457,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568125,"byte_end":14568138,"line_start":458,"line_end":458,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568143,"byte_end":14568154,"line_start":459,"line_end":459,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568159,"byte_end":14568162,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568167,"byte_end":14568212,"line_start":461,"line_end":461,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568217,"byte_end":14568253,"line_start":462,"line_end":462,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568258,"byte_end":14568267,"line_start":463,"line_end":463,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568272,"byte_end":14568277,"line_start":464,"line_end":464,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568282,"byte_end":14568289,"line_start":465,"line_end":465,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569638,"byte_end":14569644,"line_start":512,"line_end":512,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568563,"byte_end":14568607,"line_start":476,"line_end":476,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568612,"byte_end":14568615,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568620,"byte_end":14568695,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568700,"byte_end":14568755,"line_start":479,"line_end":479,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568760,"byte_end":14568763,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568768,"byte_end":14568787,"line_start":481,"line_end":481,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568792,"byte_end":14568795,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. Once the channel is closed, it stays closed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568800,"byte_end":14568875,"line_start":483,"line_end":483,"column_start":5,"column_end":80}},{"value":"/ forever and all future calls to `closed` will return immediately.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568880,"byte_end":14568949,"line_start":484,"line_end":484,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568954,"byte_end":14568957,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568962,"byte_end":14568976,"line_start":486,"line_end":486,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568981,"byte_end":14568984,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14568989,"byte_end":14568996,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569001,"byte_end":14569027,"line_start":489,"line_end":489,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569032,"byte_end":14569035,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569040,"byte_end":14569058,"line_start":491,"line_end":491,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569063,"byte_end":14569084,"line_start":492,"line_end":492,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::channel::<()>(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569089,"byte_end":14569136,"line_start":493,"line_end":493,"column_start":5,"column_end":52}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569141,"byte_end":14569171,"line_start":494,"line_end":494,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569176,"byte_end":14569206,"line_start":495,"line_end":495,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569211,"byte_end":14569241,"line_start":496,"line_end":496,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569246,"byte_end":14569276,"line_start":497,"line_end":497,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569281,"byte_end":14569314,"line_start":498,"line_end":498,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569319,"byte_end":14569340,"line_start":499,"line_end":499,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569345,"byte_end":14569356,"line_start":500,"line_end":500,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569361,"byte_end":14569364,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569369,"byte_end":14569392,"line_start":502,"line_end":502,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569397,"byte_end":14569422,"line_start":503,"line_end":503,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569427,"byte_end":14569452,"line_start":504,"line_end":504,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569457,"byte_end":14569482,"line_start":505,"line_end":505,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569487,"byte_end":14569512,"line_start":506,"line_end":506,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569517,"byte_end":14569541,"line_start":507,"line_end":507,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569546,"byte_end":14569556,"line_start":508,"line_end":508,"column_start":5,"column_end":15}},{"value":"/     println!(\"Receiver dropped\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569561,"byte_end":14569598,"line_start":509,"line_end":509,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569603,"byte_end":14569608,"line_start":510,"line_end":510,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569613,"byte_end":14569620,"line_start":511,"line_end":511,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571818,"byte_end":14571826,"line_start":574,"line_end":574,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"fn try_send<'_>(&'_ Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569698,"byte_end":14569757,"line_start":516,"line_end":516,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569762,"byte_end":14569765,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569770,"byte_end":14569849,"line_start":518,"line_end":518,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569854,"byte_end":14569929,"line_start":519,"line_end":519,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14569934,"byte_end":14570012,"line_start":520,"line_end":520,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570017,"byte_end":14570059,"line_start":521,"line_end":521,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570064,"byte_end":14570067,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570072,"byte_end":14570084,"line_start":523,"line_end":523,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570089,"byte_end":14570092,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570097,"byte_end":14570168,"line_start":525,"line_end":525,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570173,"byte_end":14570249,"line_start":526,"line_end":526,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570254,"byte_end":14570276,"line_start":527,"line_end":527,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570281,"byte_end":14570284,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570289,"byte_end":14570362,"line_start":529,"line_end":529,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570367,"byte_end":14570441,"line_start":530,"line_end":530,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570446,"byte_end":14570506,"line_start":531,"line_end":531,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570511,"byte_end":14570514,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570519,"byte_end":14570545,"line_start":533,"line_end":533,"column_start":5,"column_end":31}},{"value":"/ [`channel`]: channel","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570550,"byte_end":14570574,"line_start":534,"line_end":534,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570579,"byte_end":14570609,"line_start":535,"line_end":535,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570614,"byte_end":14570617,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570622,"byte_end":14570636,"line_start":537,"line_end":537,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570641,"byte_end":14570644,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570649,"byte_end":14570656,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570661,"byte_end":14570687,"line_start":540,"line_end":540,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570692,"byte_end":14570695,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570700,"byte_end":14570718,"line_start":542,"line_end":542,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570723,"byte_end":14570744,"line_start":543,"line_end":543,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570749,"byte_end":14570795,"line_start":544,"line_end":544,"column_start":5,"column_end":51}},{"value":"/     let (tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570800,"byte_end":14570845,"line_start":545,"line_end":545,"column_start":5,"column_end":50}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570850,"byte_end":14570880,"line_start":546,"line_end":546,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570885,"byte_end":14570888,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570893,"byte_end":14570926,"line_start":548,"line_end":548,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570931,"byte_end":14570970,"line_start":549,"line_end":549,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14570975,"byte_end":14571014,"line_start":550,"line_end":550,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571019,"byte_end":14571081,"line_start":551,"line_end":551,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571086,"byte_end":14571097,"line_start":552,"line_end":552,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571102,"byte_end":14571105,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571110,"byte_end":14571143,"line_start":554,"line_end":554,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571148,"byte_end":14571197,"line_start":555,"line_end":555,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571202,"byte_end":14571249,"line_start":556,"line_end":556,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571254,"byte_end":14571290,"line_start":557,"line_end":557,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571295,"byte_end":14571306,"line_start":558,"line_end":558,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571311,"byte_end":14571314,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571319,"byte_end":14571339,"line_start":560,"line_end":560,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571344,"byte_end":14571383,"line_start":561,"line_end":561,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571388,"byte_end":14571433,"line_start":562,"line_end":562,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571438,"byte_end":14571441,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571446,"byte_end":14571485,"line_start":564,"line_end":564,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571490,"byte_end":14571535,"line_start":565,"line_end":565,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571540,"byte_end":14571543,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571548,"byte_end":14571597,"line_start":567,"line_end":567,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571602,"byte_end":14571633,"line_start":568,"line_end":568,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571638,"byte_end":14571700,"line_start":569,"line_end":569,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571705,"byte_end":14571770,"line_start":570,"line_end":570,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571775,"byte_end":14571784,"line_start":571,"line_end":571,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571789,"byte_end":14571794,"line_start":572,"line_end":572,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14571799,"byte_end":14571806,"line_start":573,"line_end":573,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575696,"byte_end":14575709,"line_start":692,"line_end":692,"column_start":12,"column_end":25},"name":"blocking_send","qualname":"<Sender<T>>::blocking_send","value":"fn blocking_send<'_>(&'_ Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Blocking send to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking send to call outside of asynchronous contexts.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14574604,"byte_end":14574663,"line_start":657,"line_end":657,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14574668,"byte_end":14574671,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14574676,"byte_end":14574744,"line_start":659,"line_end":659,"column_start":5,"column_end":73}},{"value":"/ synchronous code to asynchronous code, and will work even if the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14574749,"byte_end":14574817,"line_start":660,"line_end":660,"column_start":5,"column_end":73}},{"value":"/ receiver is not using [`blocking_recv`] to receive the message.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14574822,"byte_end":14574889,"line_start":661,"line_end":661,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14574894,"byte_end":14574897,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ [`blocking_recv`]: fn@crate::sync::mpsc::Receiver::blocking_recv","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14574902,"byte_end":14574970,"line_start":663,"line_end":663,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14574975,"byte_end":14574978,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14574983,"byte_end":14574995,"line_start":665,"line_end":665,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575000,"byte_end":14575003,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575008,"byte_end":14575075,"line_start":667,"line_end":667,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575080,"byte_end":14575092,"line_start":668,"line_end":668,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575097,"byte_end":14575100,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575105,"byte_end":14575119,"line_start":670,"line_end":670,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575124,"byte_end":14575127,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575132,"byte_end":14575139,"line_start":672,"line_end":672,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575144,"byte_end":14575164,"line_start":673,"line_end":673,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575169,"byte_end":14575201,"line_start":674,"line_end":674,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575206,"byte_end":14575232,"line_start":675,"line_end":675,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575237,"byte_end":14575240,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575245,"byte_end":14575260,"line_start":677,"line_end":677,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575265,"byte_end":14575315,"line_start":678,"line_end":678,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575320,"byte_end":14575323,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575328,"byte_end":14575375,"line_start":680,"line_end":680,"column_start":5,"column_end":52}},{"value":"/         tx.blocking_send(10).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575380,"byte_end":14575422,"line_start":681,"line_end":681,"column_start":5,"column_end":47}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575427,"byte_end":14575438,"line_start":682,"line_end":682,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575443,"byte_end":14575446,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/     Runtime::new().unwrap().block_on(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575451,"byte_end":14575504,"line_start":684,"line_end":684,"column_start":5,"column_end":58}},{"value":"/         assert_eq!(Some(10), rx.recv().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575509,"byte_end":14575559,"line_start":685,"line_end":685,"column_start":5,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575564,"byte_end":14575575,"line_start":686,"line_end":686,"column_start":5,"column_end":16}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575580,"byte_end":14575613,"line_start":687,"line_end":687,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575618,"byte_end":14575623,"line_start":688,"line_end":688,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575628,"byte_end":14575635,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575640,"byte_end":14575655,"line_start":690,"line_end":690,"column_start":5,"column_end":20}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575660,"byte_end":14575684,"line_start":691,"line_end":691,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576400,"byte_end":14576409,"line_start":714,"line_end":714,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"fn is_closed<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`Receiver`] is dropped, or when the [`Receiver::close`] method is\n called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575818,"byte_end":14575882,"line_start":696,"line_end":696,"column_start":5,"column_end":69}},{"value":"/ [`Receiver`] is dropped, or when the [`Receiver::close`] method is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575887,"byte_end":14575957,"line_start":697,"line_end":697,"column_start":5,"column_end":75}},{"value":"/ called.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575962,"byte_end":14575973,"line_start":698,"line_end":698,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575978,"byte_end":14575981,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14575986,"byte_end":14576031,"line_start":700,"line_end":700,"column_start":5,"column_end":50}},{"value":"/ [`Receiver::close`]: crate::sync::mpsc::Receiver::close","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576036,"byte_end":14576095,"line_start":701,"line_end":701,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576100,"byte_end":14576103,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576108,"byte_end":14576115,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(42);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576120,"byte_end":14576176,"line_start":704,"line_end":704,"column_start":5,"column_end":61}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576181,"byte_end":14576210,"line_start":705,"line_end":705,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576215,"byte_end":14576218,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576223,"byte_end":14576248,"line_start":707,"line_end":707,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576253,"byte_end":14576283,"line_start":708,"line_end":708,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576288,"byte_end":14576291,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576296,"byte_end":14576309,"line_start":710,"line_end":710,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576314,"byte_end":14576342,"line_start":711,"line_end":711,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576347,"byte_end":14576376,"line_start":712,"line_end":712,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576381,"byte_end":14576388,"line_start":713,"line_end":713,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14578051,"byte_end":14578058,"line_start":762,"line_end":762,"column_start":18,"column_end":25},"name":"reserve","qualname":"<Sender<T>>::reserve","value":"async fn reserve<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for channel capacity. Once capacity to send one message is\n available, it is reserved for the caller.","sig":null,"attributes":[{"value":"/ Waits for channel capacity. Once capacity to send one message is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576468,"byte_end":14576536,"line_start":718,"line_end":718,"column_start":5,"column_end":73}},{"value":"/ available, it is reserved for the caller.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576541,"byte_end":14576586,"line_start":719,"line_end":719,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576591,"byte_end":14576594,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576599,"byte_end":14576674,"line_start":721,"line_end":721,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576679,"byte_end":14576754,"line_start":722,"line_end":722,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. A [`Permit`] is returned to track","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576759,"byte_end":14576832,"line_start":723,"line_end":723,"column_start":5,"column_end":78}},{"value":"/ the reserved capacity. The [`send`] function on [`Permit`] consumes the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576837,"byte_end":14576912,"line_start":724,"line_end":724,"column_start":5,"column_end":80}},{"value":"/ reserved capacity.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576917,"byte_end":14576939,"line_start":725,"line_end":725,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576944,"byte_end":14576947,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14576952,"byte_end":14577028,"line_start":727,"line_end":727,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577033,"byte_end":14577052,"line_start":728,"line_end":728,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577057,"byte_end":14577060,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577065,"byte_end":14577087,"line_start":730,"line_end":730,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577092,"byte_end":14577118,"line_start":731,"line_end":731,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577123,"byte_end":14577126,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577131,"byte_end":14577150,"line_start":733,"line_end":733,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577155,"byte_end":14577158,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ This channel uses a queue to ensure that calls to `send` and `reserve`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577163,"byte_end":14577237,"line_start":735,"line_end":735,"column_start":5,"column_end":79}},{"value":"/ complete in the order they were requested.  Cancelling a call to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577242,"byte_end":14577310,"line_start":736,"line_end":736,"column_start":5,"column_end":73}},{"value":"/ `reserve` makes you lose your place in the queue.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577315,"byte_end":14577368,"line_start":737,"line_end":737,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577373,"byte_end":14577376,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577381,"byte_end":14577395,"line_start":739,"line_end":739,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577400,"byte_end":14577403,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577408,"byte_end":14577415,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577420,"byte_end":14577446,"line_start":742,"line_end":742,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577451,"byte_end":14577454,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577459,"byte_end":14577477,"line_start":744,"line_end":744,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577482,"byte_end":14577503,"line_start":745,"line_end":745,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577508,"byte_end":14577552,"line_start":746,"line_end":746,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577557,"byte_end":14577560,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577565,"byte_end":14577592,"line_start":748,"line_end":748,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577597,"byte_end":14577646,"line_start":749,"line_end":749,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577651,"byte_end":14577654,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577659,"byte_end":14577725,"line_start":751,"line_end":751,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577730,"byte_end":14577760,"line_start":752,"line_end":752,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577765,"byte_end":14577808,"line_start":753,"line_end":753,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577813,"byte_end":14577816,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577821,"byte_end":14577862,"line_start":755,"line_end":755,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577867,"byte_end":14577892,"line_start":756,"line_end":756,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577897,"byte_end":14577900,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577905,"byte_end":14577956,"line_start":758,"line_end":758,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14577961,"byte_end":14578011,"line_start":759,"line_end":759,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14578016,"byte_end":14578021,"line_start":760,"line_end":760,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14578026,"byte_end":14578033,"line_start":761,"line_end":761,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14581436,"byte_end":14581449,"line_start":847,"line_end":847,"column_start":18,"column_end":31},"name":"reserve_owned","qualname":"<Sender<T>>::reserve_owned","value":"async fn reserve_owned(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for channel capacity, moving the `Sender` and returning an owned\n permit. Once capacity to send one message is available, it is reserved\n for the caller.","sig":null,"attributes":[{"value":"/ Waits for channel capacity, moving the `Sender` and returning an owned","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14578196,"byte_end":14578270,"line_start":767,"line_end":767,"column_start":5,"column_end":79}},{"value":"/ permit. Once capacity to send one message is available, it is reserved","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14578275,"byte_end":14578349,"line_start":768,"line_end":768,"column_start":5,"column_end":79}},{"value":"/ for the caller.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14578354,"byte_end":14578373,"line_start":769,"line_end":769,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14578378,"byte_end":14578381,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ This moves the sender _by value_, and returns an owned permit that can","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14578386,"byte_end":14578460,"line_start":771,"line_end":771,"column_start":5,"column_end":79}},{"value":"/ be used to send a message into the channel. Unlike [`Sender::reserve`],","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14578465,"byte_end":14578540,"line_start":772,"line_end":772,"column_start":5,"column_end":80}},{"value":"/ this method may be used in cases where the permit must be valid for the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14578545,"byte_end":14578620,"line_start":773,"line_end":773,"column_start":5,"column_end":80}},{"value":"/ `'static` lifetime. `Sender`s may be cloned cheaply (`Sender::clone` is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14578625,"byte_end":14578700,"line_start":774,"line_end":774,"column_start":5,"column_end":80}},{"value":"/ essentially a reference count increment, comparable to [`Arc::clone`]),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14578705,"byte_end":14578780,"line_start":775,"line_end":775,"column_start":5,"column_end":80}},{"value":"/ so when multiple [`OwnedPermit`]s are needed or the `Sender` cannot be","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14578785,"byte_end":14578859,"line_start":776,"line_end":776,"column_start":5,"column_end":79}},{"value":"/ moved, it can be cloned prior to calling `reserve_owned`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14578864,"byte_end":14578925,"line_start":777,"line_end":777,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14578930,"byte_end":14578933,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14578938,"byte_end":14579013,"line_start":779,"line_end":779,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579018,"byte_end":14579093,"line_start":780,"line_end":780,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. An [`OwnedPermit`] is returned to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579098,"byte_end":14579171,"line_start":781,"line_end":781,"column_start":5,"column_end":78}},{"value":"/ track the reserved capacity. The [`send`] function on [`OwnedPermit`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579176,"byte_end":14579249,"line_start":782,"line_end":782,"column_start":5,"column_end":78}},{"value":"/ consumes the reserved capacity.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579254,"byte_end":14579289,"line_start":783,"line_end":783,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579294,"byte_end":14579297,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ Dropping the [`OwnedPermit`] without sending a message releases the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579302,"byte_end":14579373,"line_start":785,"line_end":785,"column_start":5,"column_end":76}},{"value":"/ capacity back to the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579378,"byte_end":14579411,"line_start":786,"line_end":786,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579416,"byte_end":14579419,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579424,"byte_end":14579443,"line_start":788,"line_end":788,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579448,"byte_end":14579451,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ This channel uses a queue to ensure that calls to `send` and `reserve`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579456,"byte_end":14579530,"line_start":790,"line_end":790,"column_start":5,"column_end":79}},{"value":"/ complete in the order they were requested.  Cancelling a call to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579535,"byte_end":14579603,"line_start":791,"line_end":791,"column_start":5,"column_end":73}},{"value":"/ `reserve_owned` makes you lose your place in the queue.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579608,"byte_end":14579667,"line_start":792,"line_end":792,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579672,"byte_end":14579675,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579680,"byte_end":14579694,"line_start":794,"line_end":794,"column_start":5,"column_end":19}},{"value":"/ Sending a message using an [`OwnedPermit`]:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579699,"byte_end":14579746,"line_start":795,"line_end":795,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579751,"byte_end":14579758,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579763,"byte_end":14579789,"line_start":797,"line_end":797,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579794,"byte_end":14579797,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579802,"byte_end":14579820,"line_start":799,"line_end":799,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579825,"byte_end":14579846,"line_start":800,"line_end":800,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579851,"byte_end":14579895,"line_start":801,"line_end":801,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579900,"byte_end":14579903,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity, moving the sender.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579908,"byte_end":14579955,"line_start":803,"line_end":803,"column_start":5,"column_end":52}},{"value":"/     let permit = tx.reserve_owned().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14579960,"byte_end":14580015,"line_start":804,"line_end":804,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580020,"byte_end":14580023,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/     // Send a message, consuming the permit and returning","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580028,"byte_end":14580089,"line_start":806,"line_end":806,"column_start":5,"column_end":66}},{"value":"/     // the moved sender.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580094,"byte_end":14580122,"line_start":807,"line_end":807,"column_start":5,"column_end":33}},{"value":"/     let tx = permit.send(123);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580127,"byte_end":14580161,"line_start":808,"line_end":808,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580166,"byte_end":14580169,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580174,"byte_end":14580226,"line_start":810,"line_end":810,"column_start":5,"column_end":57}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 123);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580231,"byte_end":14580281,"line_start":811,"line_end":811,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580286,"byte_end":14580289,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/     // The sender can now be used again.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580294,"byte_end":14580338,"line_start":813,"line_end":813,"column_start":5,"column_end":49}},{"value":"/     tx.send(456).await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580343,"byte_end":14580379,"line_start":814,"line_end":814,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580384,"byte_end":14580389,"line_start":815,"line_end":815,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580394,"byte_end":14580401,"line_start":816,"line_end":816,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580406,"byte_end":14580409,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ When multiple [`OwnedPermit`]s are needed, or the sender cannot be moved","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580414,"byte_end":14580490,"line_start":818,"line_end":818,"column_start":5,"column_end":81}},{"value":"/ by value, it can be inexpensively cloned before calling `reserve_owned`:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580495,"byte_end":14580571,"line_start":819,"line_end":819,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580576,"byte_end":14580579,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580584,"byte_end":14580591,"line_start":821,"line_end":821,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580596,"byte_end":14580622,"line_start":822,"line_end":822,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580627,"byte_end":14580630,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580635,"byte_end":14580653,"line_start":824,"line_end":824,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580658,"byte_end":14580679,"line_start":825,"line_end":825,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580684,"byte_end":14580728,"line_start":826,"line_end":826,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580733,"byte_end":14580736,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/     // Clone the sender and reserve capacity.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580741,"byte_end":14580790,"line_start":828,"line_end":828,"column_start":5,"column_end":54}},{"value":"/     let permit = tx.clone().reserve_owned().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580795,"byte_end":14580858,"line_start":829,"line_end":829,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580863,"byte_end":14580866,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580871,"byte_end":14580937,"line_start":831,"line_end":831,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580942,"byte_end":14580972,"line_start":832,"line_end":832,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14580977,"byte_end":14581020,"line_start":833,"line_end":833,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14581025,"byte_end":14581028,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14581033,"byte_end":14581075,"line_start":835,"line_end":835,"column_start":5,"column_end":47}},{"value":"/     permit.send(456);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14581080,"byte_end":14581105,"line_start":836,"line_end":836,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14581110,"byte_end":14581113,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14581118,"byte_end":14581169,"line_start":838,"line_end":838,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14581174,"byte_end":14581224,"line_start":839,"line_end":839,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14581229,"byte_end":14581234,"line_start":840,"line_end":840,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14581239,"byte_end":14581246,"line_start":841,"line_end":841,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14581251,"byte_end":14581254,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ [`Sender::reserve`]: Sender::reserve","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14581259,"byte_end":14581299,"line_start":843,"line_end":843,"column_start":5,"column_end":45}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14581304,"byte_end":14581336,"line_start":844,"line_end":844,"column_start":5,"column_end":37}},{"value":"/ [`send`]: OwnedPermit::send","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14581341,"byte_end":14581372,"line_start":845,"line_end":845,"column_start":5,"column_end":36}},{"value":"/ [`Arc::clone`]: std::sync::Arc::clone","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14581377,"byte_end":14581418,"line_start":846,"line_end":846,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14583351,"byte_end":14583362,"line_start":904,"line_end":904,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<Sender<T>>::try_reserve","value":"fn try_reserve<'_>(&'_ Self) -> Result<Permit, TrySendError<()>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a slot in the channel without waiting for the slot to become\n available.","sig":null,"attributes":[{"value":"/ Tries to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14581828,"byte_end":14581909,"line_start":861,"line_end":861,"column_start":5,"column_end":86}},{"value":"/ available.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14581914,"byte_end":14581928,"line_start":862,"line_end":862,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14581933,"byte_end":14581936,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return [`TrySendError`], otherwise","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14581941,"byte_end":14582021,"line_start":864,"line_end":864,"column_start":5,"column_end":85}},{"value":"/ if there is a slot available it will return a [`Permit`] that will then allow you","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582026,"byte_end":14582111,"line_start":865,"line_end":865,"column_start":5,"column_end":90}},{"value":"/ to [`send`] on the channel with a guaranteed slot. This function is similar to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582116,"byte_end":14582198,"line_start":866,"line_end":866,"column_start":5,"column_end":87}},{"value":"/ [`reserve`] except it does not await for the slot to become available.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582203,"byte_end":14582277,"line_start":867,"line_end":867,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582282,"byte_end":14582285,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582290,"byte_end":14582366,"line_start":869,"line_end":869,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582371,"byte_end":14582390,"line_start":870,"line_end":870,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582395,"byte_end":14582398,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582403,"byte_end":14582425,"line_start":872,"line_end":872,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582430,"byte_end":14582456,"line_start":873,"line_end":873,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582461,"byte_end":14582493,"line_start":874,"line_end":874,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582498,"byte_end":14582501,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582506,"byte_end":14582520,"line_start":876,"line_end":876,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582525,"byte_end":14582528,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582533,"byte_end":14582540,"line_start":878,"line_end":878,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582545,"byte_end":14582571,"line_start":879,"line_end":879,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582576,"byte_end":14582579,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582584,"byte_end":14582602,"line_start":881,"line_end":881,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582607,"byte_end":14582628,"line_start":882,"line_end":882,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582633,"byte_end":14582677,"line_start":883,"line_end":883,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582682,"byte_end":14582685,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582690,"byte_end":14582717,"line_start":885,"line_end":885,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.try_reserve().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582722,"byte_end":14582769,"line_start":886,"line_end":886,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582774,"byte_end":14582777,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582782,"byte_end":14582848,"line_start":888,"line_end":888,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582853,"byte_end":14582883,"line_start":889,"line_end":889,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582888,"byte_end":14582931,"line_start":890,"line_end":890,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582936,"byte_end":14582939,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14582944,"byte_end":14583008,"line_start":892,"line_end":892,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14583013,"byte_end":14583058,"line_start":893,"line_end":893,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14583063,"byte_end":14583106,"line_start":894,"line_end":894,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14583111,"byte_end":14583114,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14583119,"byte_end":14583160,"line_start":896,"line_end":896,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14583165,"byte_end":14583190,"line_start":897,"line_end":897,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14583195,"byte_end":14583198,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14583203,"byte_end":14583254,"line_start":899,"line_end":899,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14583259,"byte_end":14583309,"line_start":900,"line_end":900,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14583314,"byte_end":14583317,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14583322,"byte_end":14583327,"line_start":902,"line_end":902,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14583332,"byte_end":14583339,"line_start":903,"line_end":903,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586103,"byte_end":14586120,"line_start":969,"line_end":969,"column_start":12,"column_end":29},"name":"try_reserve_owned","qualname":"<Sender<T>>::try_reserve_owned","value":"fn try_reserve_owned(Self) -> Result<OwnedPermit<T>, TrySendError<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a slot in the channel without waiting for the slot to become\n available, returning an owned permit.","sig":null,"attributes":[{"value":"/ Tries to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14583721,"byte_end":14583802,"line_start":914,"line_end":914,"column_start":5,"column_end":86}},{"value":"/ available, returning an owned permit.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14583807,"byte_end":14583848,"line_start":915,"line_end":915,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14583853,"byte_end":14583856,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ This moves the sender _by value_, and returns an owned permit that can","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14583861,"byte_end":14583935,"line_start":917,"line_end":917,"column_start":5,"column_end":79}},{"value":"/ be used to send a message into the channel. Unlike [`Sender::try_reserve`],","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14583940,"byte_end":14584019,"line_start":918,"line_end":918,"column_start":5,"column_end":84}},{"value":"/ this method may be used in cases where the permit must be valid for the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14584024,"byte_end":14584099,"line_start":919,"line_end":919,"column_start":5,"column_end":80}},{"value":"/ `'static` lifetime.  `Sender`s may be cloned cheaply (`Sender::clone` is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14584104,"byte_end":14584180,"line_start":920,"line_end":920,"column_start":5,"column_end":81}},{"value":"/ essentially a reference count increment, comparable to [`Arc::clone`]),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14584185,"byte_end":14584260,"line_start":921,"line_end":921,"column_start":5,"column_end":80}},{"value":"/ so when multiple [`OwnedPermit`]s are needed or the `Sender` cannot be","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14584265,"byte_end":14584339,"line_start":922,"line_end":922,"column_start":5,"column_end":79}},{"value":"/ moved, it can be cloned prior to calling `try_reserve_owned`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14584344,"byte_end":14584409,"line_start":923,"line_end":923,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14584414,"byte_end":14584417,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return a [`TrySendError`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14584422,"byte_end":14584494,"line_start":925,"line_end":925,"column_start":5,"column_end":77}},{"value":"/ Since the sender is taken by value, the `TrySendError` returned in this","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14584499,"byte_end":14584574,"line_start":926,"line_end":926,"column_start":5,"column_end":80}},{"value":"/ case contains the sender, so that it may be used again. Otherwise, if","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14584579,"byte_end":14584652,"line_start":927,"line_end":927,"column_start":5,"column_end":78}},{"value":"/ there is a slot available, this method will return an [`OwnedPermit`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14584657,"byte_end":14584730,"line_start":928,"line_end":928,"column_start":5,"column_end":78}},{"value":"/ that can then be used to [`send`] on the channel with a guaranteed slot.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14584735,"byte_end":14584811,"line_start":929,"line_end":929,"column_start":5,"column_end":81}},{"value":"/ This function is similar to  [`reserve_owned`] except it does not await","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14584816,"byte_end":14584891,"line_start":930,"line_end":930,"column_start":5,"column_end":80}},{"value":"/ for the slot to become available.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14584896,"byte_end":14584933,"line_start":931,"line_end":931,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14584938,"byte_end":14584941,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ Dropping the [`OwnedPermit`] without sending a message releases the capacity back","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14584946,"byte_end":14585031,"line_start":933,"line_end":933,"column_start":5,"column_end":90}},{"value":"/ to the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585036,"byte_end":14585055,"line_start":934,"line_end":934,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585060,"byte_end":14585063,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585068,"byte_end":14585100,"line_start":936,"line_end":936,"column_start":5,"column_end":37}},{"value":"/ [`send`]: OwnedPermit::send","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585105,"byte_end":14585136,"line_start":937,"line_end":937,"column_start":5,"column_end":36}},{"value":"/ [`reserve_owned`]: Sender::reserve_owned","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585141,"byte_end":14585185,"line_start":938,"line_end":938,"column_start":5,"column_end":49}},{"value":"/ [`Arc::clone`]: std::sync::Arc::clone","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585190,"byte_end":14585231,"line_start":939,"line_end":939,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585236,"byte_end":14585239,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585244,"byte_end":14585258,"line_start":941,"line_end":941,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585263,"byte_end":14585266,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585271,"byte_end":14585278,"line_start":943,"line_end":943,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585283,"byte_end":14585309,"line_start":944,"line_end":944,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585314,"byte_end":14585317,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585322,"byte_end":14585340,"line_start":946,"line_end":946,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585345,"byte_end":14585366,"line_start":947,"line_end":947,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585371,"byte_end":14585415,"line_start":948,"line_end":948,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585420,"byte_end":14585423,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585428,"byte_end":14585455,"line_start":950,"line_end":950,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.clone().try_reserve_owned().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585460,"byte_end":14585521,"line_start":951,"line_end":951,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585526,"byte_end":14585529,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585534,"byte_end":14585600,"line_start":953,"line_end":953,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585605,"byte_end":14585635,"line_start":954,"line_end":954,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585640,"byte_end":14585683,"line_start":955,"line_end":955,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585688,"byte_end":14585691,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585696,"byte_end":14585760,"line_start":957,"line_end":957,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585765,"byte_end":14585810,"line_start":958,"line_end":958,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585815,"byte_end":14585858,"line_start":959,"line_end":959,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585863,"byte_end":14585866,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585871,"byte_end":14585912,"line_start":961,"line_end":961,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585917,"byte_end":14585942,"line_start":962,"line_end":962,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585947,"byte_end":14585950,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14585955,"byte_end":14586006,"line_start":964,"line_end":964,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586011,"byte_end":14586061,"line_start":965,"line_end":965,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586066,"byte_end":14586069,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586074,"byte_end":14586079,"line_start":967,"line_end":967,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586084,"byte_end":14586091,"line_start":968,"line_end":968,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586887,"byte_end":14586899,"line_start":993,"line_end":993,"column_start":12,"column_end":24},"name":"same_channel","qualname":"<Sender<T>>::same_channel","value":"fn same_channel<'_, '_>(&'_ Self, &'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if senders belong to the same channel.","sig":null,"attributes":[{"value":"/ Returns `true` if senders belong to the same channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586516,"byte_end":14586573,"line_start":981,"line_end":981,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586578,"byte_end":14586581,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586586,"byte_end":14586600,"line_start":983,"line_end":983,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586605,"byte_end":14586608,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586613,"byte_end":14586620,"line_start":985,"line_end":985,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586625,"byte_end":14586680,"line_start":986,"line_end":986,"column_start":5,"column_end":60}},{"value":"/ let  tx2 = tx.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586685,"byte_end":14586711,"line_start":987,"line_end":987,"column_start":5,"column_end":31}},{"value":"/ assert!(tx.same_channel(&tx2));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586716,"byte_end":14586751,"line_start":988,"line_end":988,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586756,"byte_end":14586759,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ let (tx3, rx3) = tokio::sync::mpsc::channel::<()>(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586764,"byte_end":14586821,"line_start":990,"line_end":990,"column_start":5,"column_end":62}},{"value":"/ assert!(!tx3.same_channel(&tx2));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586826,"byte_end":14586863,"line_start":991,"line_end":991,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586868,"byte_end":14586875,"line_start":992,"line_end":992,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14588156,"byte_end":14588164,"line_start":1030,"line_end":1030,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Sender<T>>::capacity","value":"fn capacity<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current capacity of the channel.","sig":null,"attributes":[{"value":"/ Returns the current capacity of the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14586986,"byte_end":14587034,"line_start":997,"line_end":997,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587039,"byte_end":14587042,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ The capacity goes down when sending a value by calling [`send`] or by reserving capacity","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587047,"byte_end":14587139,"line_start":999,"line_end":999,"column_start":5,"column_end":97}},{"value":"/ with [`reserve`]. The capacity goes up when values are received by the [`Receiver`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587144,"byte_end":14587232,"line_start":1000,"line_end":1000,"column_start":5,"column_end":93}},{"value":"/ This is distinct from [`max_capacity`], which always returns buffer capacity initially","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587237,"byte_end":14587327,"line_start":1001,"line_end":1001,"column_start":5,"column_end":95}},{"value":"/ specified when calling [`channel`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587332,"byte_end":14587370,"line_start":1002,"line_end":1002,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587375,"byte_end":14587378,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587383,"byte_end":14587397,"line_start":1004,"line_end":1004,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587402,"byte_end":14587405,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587410,"byte_end":14587417,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587422,"byte_end":14587448,"line_start":1007,"line_end":1007,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587453,"byte_end":14587456,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587461,"byte_end":14587479,"line_start":1009,"line_end":1009,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587484,"byte_end":14587505,"line_start":1010,"line_end":1010,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel::<()>(5);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587510,"byte_end":14587560,"line_start":1011,"line_end":1011,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587565,"byte_end":14587568,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(tx.capacity(), 5);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587573,"byte_end":14587610,"line_start":1013,"line_end":1013,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587615,"byte_end":14587618,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/     // Making a reservation drops the capacity by one.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587623,"byte_end":14587681,"line_start":1015,"line_end":1015,"column_start":5,"column_end":63}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587686,"byte_end":14587735,"line_start":1016,"line_end":1016,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(tx.capacity(), 4);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587740,"byte_end":14587777,"line_start":1017,"line_end":1017,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587782,"byte_end":14587785,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/     // Sending and receiving a value increases the capacity by one.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587790,"byte_end":14587861,"line_start":1019,"line_end":1019,"column_start":5,"column_end":76}},{"value":"/     permit.send(());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587866,"byte_end":14587890,"line_start":1020,"line_end":1020,"column_start":5,"column_end":29}},{"value":"/     rx.recv().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587895,"byte_end":14587928,"line_start":1021,"line_end":1021,"column_start":5,"column_end":38}},{"value":"/     assert_eq!(tx.capacity(), 5);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587933,"byte_end":14587970,"line_start":1022,"line_end":1022,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587975,"byte_end":14587980,"line_start":1023,"line_end":1023,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587985,"byte_end":14587992,"line_start":1024,"line_end":1024,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14587997,"byte_end":14588000,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14588005,"byte_end":14588031,"line_start":1026,"line_end":1026,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14588036,"byte_end":14588068,"line_start":1027,"line_end":1027,"column_start":5,"column_end":37}},{"value":"/ [`channel`]: channel","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14588073,"byte_end":14588097,"line_start":1028,"line_end":1028,"column_start":5,"column_end":29}},{"value":"/ [`max_capacity`]: Sender::max_capacity","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14588102,"byte_end":14588144,"line_start":1029,"line_end":1029,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14588493,"byte_end":14588502,"line_start":1038,"line_end":1038,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Sender<T>>::downgrade","value":"fn downgrade<'_>(&'_ Self) -> WeakSender<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the `Sender` to a [`WeakSender`] that does not count\n towards RAII semantics, i.e. if all `Sender` instances of the\n channel were dropped and only `WeakSender` instances remain,\n the channel is closed.\n","sig":null,"attributes":[{"value":"/ Converts the `Sender` to a [`WeakSender`] that does not count","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14588246,"byte_end":14588311,"line_start":1034,"line_end":1034,"column_start":5,"column_end":70}},{"value":"/ towards RAII semantics, i.e. if all `Sender` instances of the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14588316,"byte_end":14588381,"line_start":1035,"line_end":1035,"column_start":5,"column_end":70}},{"value":"/ channel were dropped and only `WeakSender` instances remain,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14588386,"byte_end":14588450,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/ the channel is closed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14588455,"byte_end":14588481,"line_start":1037,"line_end":1037,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589831,"byte_end":14589843,"line_start":1076,"line_end":1076,"column_start":12,"column_end":24},"name":"max_capacity","qualname":"<Sender<T>>::max_capacity","value":"fn max_capacity<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum buffer capacity of the channel.","sig":null,"attributes":[{"value":"/ Returns the maximum buffer capacity of the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14588612,"byte_end":14588667,"line_start":1044,"line_end":1044,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14588672,"byte_end":14588675,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ The maximum capacity is the buffer capacity initially specified when calling","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14588680,"byte_end":14588760,"line_start":1046,"line_end":1046,"column_start":5,"column_end":85}},{"value":"/ [`channel`]. This is distinct from [`capacity`], which returns the *current*","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14588765,"byte_end":14588845,"line_start":1047,"line_end":1047,"column_start":5,"column_end":85}},{"value":"/ available buffer capacity: as messages are sent and received, the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14588850,"byte_end":14588919,"line_start":1048,"line_end":1048,"column_start":5,"column_end":74}},{"value":"/ value returned by [`capacity`] will go up or down, whereas the value","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14588924,"byte_end":14588996,"line_start":1049,"line_end":1049,"column_start":5,"column_end":77}},{"value":"/ returned by `max_capacity` will remain constant.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589001,"byte_end":14589053,"line_start":1050,"line_end":1050,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589058,"byte_end":14589061,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589066,"byte_end":14589080,"line_start":1052,"line_end":1052,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589085,"byte_end":14589088,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589093,"byte_end":14589100,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589105,"byte_end":14589131,"line_start":1055,"line_end":1055,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589136,"byte_end":14589139,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589144,"byte_end":14589162,"line_start":1057,"line_end":1057,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589167,"byte_end":14589188,"line_start":1058,"line_end":1058,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = mpsc::channel::<()>(5);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589193,"byte_end":14589240,"line_start":1059,"line_end":1059,"column_start":5,"column_end":52}},{"value":"/      ","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589245,"byte_end":14589254,"line_start":1060,"line_end":1060,"column_start":5,"column_end":14}},{"value":"/     // both max capacity and capacity are the same at first","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589259,"byte_end":14589322,"line_start":1061,"line_end":1061,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(tx.max_capacity(), 5);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589327,"byte_end":14589368,"line_start":1062,"line_end":1062,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(tx.capacity(), 5);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589373,"byte_end":14589410,"line_start":1063,"line_end":1063,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589415,"byte_end":14589418,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/     // Making a reservation doesn't change the max capacity.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589423,"byte_end":14589487,"line_start":1065,"line_end":1065,"column_start":5,"column_end":69}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589492,"byte_end":14589541,"line_start":1066,"line_end":1066,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(tx.max_capacity(), 5);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589546,"byte_end":14589587,"line_start":1067,"line_end":1067,"column_start":5,"column_end":46}},{"value":"/     // but drops the capacity by one","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589592,"byte_end":14589632,"line_start":1068,"line_end":1068,"column_start":5,"column_end":45}},{"value":"/     assert_eq!(tx.capacity(), 4);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589637,"byte_end":14589674,"line_start":1069,"line_end":1069,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589679,"byte_end":14589684,"line_start":1070,"line_end":1070,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589689,"byte_end":14589696,"line_start":1071,"line_end":1071,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589701,"byte_end":14589704,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ [`channel`]: channel","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589709,"byte_end":14589733,"line_start":1073,"line_end":1073,"column_start":5,"column_end":29}},{"value":"/ [`max_capacity`]: Sender::max_capacity","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589738,"byte_end":14589780,"line_start":1074,"line_end":1074,"column_start":5,"column_end":47}},{"value":"/ [`capacity`]: Sender::capacity","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589785,"byte_end":14589819,"line_start":1075,"line_end":1075,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589940,"byte_end":14589945,"line_start":1082,"line_end":1082,"column_start":8,"column_end":13},"name":"clone","qualname":"<Sender<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14590078,"byte_end":14590081,"line_start":1090,"line_end":1090,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Sender<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14590282,"byte_end":14590287,"line_start":1098,"line_end":1098,"column_start":8,"column_end":13},"name":"clone","qualname":"<WeakSender<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14590631,"byte_end":14590638,"line_start":1109,"line_end":1109,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakSender<T>>::upgrade","value":"fn upgrade<'_>(&'_ Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to convert a WeakSender into a [`Sender`]. This will return `Some`\n if there are other `Sender` instances alive and the channel wasn't\n previously dropped, otherwise `None` is returned.\n","sig":null,"attributes":[{"value":"/ Tries to convert a WeakSender into a [`Sender`]. This will return `Some`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14590410,"byte_end":14590486,"line_start":1106,"line_end":1106,"column_start":5,"column_end":81}},{"value":"/ if there are other `Sender` instances alive and the channel wasn't","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14590491,"byte_end":14590561,"line_start":1107,"line_end":1107,"column_start":5,"column_end":75}},{"value":"/ previously dropped, otherwise `None` is returned.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14590566,"byte_end":14590619,"line_start":1108,"line_end":1108,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14590786,"byte_end":14590789,"line_start":1115,"line_end":1115,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WeakSender<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14592030,"byte_end":14592034,"line_start":1155,"line_end":1155,"column_start":12,"column_end":16},"name":"send","qualname":"<Permit>::send","value":"fn send(Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14590957,"byte_end":14591003,"line_start":1123,"line_end":1123,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591008,"byte_end":14591011,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591016,"byte_end":14591091,"line_start":1125,"line_end":1125,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591096,"byte_end":14591170,"line_start":1126,"line_end":1126,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591175,"byte_end":14591249,"line_start":1127,"line_end":1127,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591254,"byte_end":14591302,"line_start":1128,"line_end":1128,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591307,"byte_end":14591310,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591315,"byte_end":14591355,"line_start":1130,"line_end":1130,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591360,"byte_end":14591363,"line_start":1131,"line_end":1131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591368,"byte_end":14591382,"line_start":1132,"line_end":1132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591387,"byte_end":14591390,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591395,"byte_end":14591402,"line_start":1134,"line_end":1134,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591407,"byte_end":14591433,"line_start":1135,"line_end":1135,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591438,"byte_end":14591441,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591446,"byte_end":14591464,"line_start":1137,"line_end":1137,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591469,"byte_end":14591490,"line_start":1138,"line_end":1138,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591495,"byte_end":14591539,"line_start":1139,"line_end":1139,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591544,"byte_end":14591547,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591552,"byte_end":14591579,"line_start":1141,"line_end":1141,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591584,"byte_end":14591633,"line_start":1142,"line_end":1142,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591638,"byte_end":14591641,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591646,"byte_end":14591712,"line_start":1144,"line_end":1144,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591717,"byte_end":14591747,"line_start":1145,"line_end":1145,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591752,"byte_end":14591795,"line_start":1146,"line_end":1146,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591800,"byte_end":14591803,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591808,"byte_end":14591847,"line_start":1148,"line_end":1148,"column_start":5,"column_end":44}},{"value":"/     permit.send(456);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591852,"byte_end":14591877,"line_start":1149,"line_end":1149,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591882,"byte_end":14591885,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591890,"byte_end":14591941,"line_start":1151,"line_end":1151,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14591946,"byte_end":14591996,"line_start":1152,"line_end":1152,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14592001,"byte_end":14592006,"line_start":1153,"line_end":1153,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14592011,"byte_end":14592018,"line_start":1154,"line_end":1154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14592216,"byte_end":14592220,"line_start":1166,"line_end":1166,"column_start":8,"column_end":12},"name":"drop","qualname":"<Permit as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1563},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14592689,"byte_end":14592692,"line_start":1183,"line_end":1183,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Permit as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594096,"byte_end":14594100,"line_start":1227,"line_end":1227,"column_start":12,"column_end":16},"name":"send","qualname":"<OwnedPermit<T>>::send","value":"fn send(Self, T) -> Sender<T>","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14592909,"byte_end":14592955,"line_start":1193,"line_end":1193,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14592960,"byte_end":14592963,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14592968,"byte_end":14593043,"line_start":1195,"line_end":1195,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593048,"byte_end":14593122,"line_start":1196,"line_end":1196,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593127,"byte_end":14593201,"line_start":1197,"line_end":1197,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593206,"byte_end":14593254,"line_start":1198,"line_end":1198,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593259,"byte_end":14593262,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Permit::send`], this method returns the [`Sender`] from which","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593267,"byte_end":14593341,"line_start":1200,"line_end":1200,"column_start":5,"column_end":79}},{"value":"/ the `OwnedPermit` was reserved.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593346,"byte_end":14593381,"line_start":1201,"line_end":1201,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593386,"byte_end":14593389,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593394,"byte_end":14593434,"line_start":1203,"line_end":1203,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593439,"byte_end":14593442,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593447,"byte_end":14593461,"line_start":1205,"line_end":1205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593466,"byte_end":14593469,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593474,"byte_end":14593481,"line_start":1207,"line_end":1207,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593486,"byte_end":14593512,"line_start":1208,"line_end":1208,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593517,"byte_end":14593520,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593525,"byte_end":14593543,"line_start":1210,"line_end":1210,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593548,"byte_end":14593569,"line_start":1211,"line_end":1211,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593574,"byte_end":14593618,"line_start":1212,"line_end":1212,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593623,"byte_end":14593626,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593631,"byte_end":14593658,"line_start":1214,"line_end":1214,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve_owned().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593663,"byte_end":14593718,"line_start":1215,"line_end":1215,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593723,"byte_end":14593726,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit, returning the sender.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593731,"byte_end":14593793,"line_start":1217,"line_end":1217,"column_start":5,"column_end":67}},{"value":"/     let tx = permit.send(456);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593798,"byte_end":14593832,"line_start":1218,"line_end":1218,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593837,"byte_end":14593840,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593845,"byte_end":14593896,"line_start":1220,"line_end":1220,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593901,"byte_end":14593951,"line_start":1221,"line_end":1221,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593956,"byte_end":14593959,"line_start":1222,"line_end":1222,"column_start":5,"column_end":8}},{"value":"/     // We may now reuse `tx` to send another message.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14593964,"byte_end":14594021,"line_start":1223,"line_end":1223,"column_start":5,"column_end":62}},{"value":"/     tx.send(789).await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594026,"byte_end":14594062,"line_start":1224,"line_end":1224,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594067,"byte_end":14594072,"line_start":1225,"line_end":1225,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594077,"byte_end":14594084,"line_start":1226,"line_end":1226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14595326,"byte_end":14595333,"line_start":1266,"line_end":1266,"column_start":12,"column_end":19},"name":"release","qualname":"<OwnedPermit<T>>::release","value":"fn release(Self) -> Sender<T>","parent":null,"children":[],"decl_id":null,"docs":" Releases the reserved capacity *without* sending a message, returning the\n [`Sender`].","sig":null,"attributes":[{"value":"/ Releases the reserved capacity *without* sending a message, returning the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594353,"byte_end":14594430,"line_start":1236,"line_end":1236,"column_start":5,"column_end":82}},{"value":"/ [`Sender`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594435,"byte_end":14594450,"line_start":1237,"line_end":1237,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594455,"byte_end":14594458,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594463,"byte_end":14594477,"line_start":1239,"line_end":1239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594482,"byte_end":14594485,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594490,"byte_end":14594497,"line_start":1241,"line_end":1241,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594502,"byte_end":14594528,"line_start":1242,"line_end":1242,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594533,"byte_end":14594536,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594541,"byte_end":14594559,"line_start":1244,"line_end":1244,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594564,"byte_end":14594585,"line_start":1245,"line_end":1245,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = mpsc::channel(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594590,"byte_end":14594630,"line_start":1246,"line_end":1246,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594635,"byte_end":14594638,"line_start":1247,"line_end":1247,"column_start":5,"column_end":8}},{"value":"/     // Clone the sender and reserve capacity","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594643,"byte_end":14594691,"line_start":1248,"line_end":1248,"column_start":5,"column_end":53}},{"value":"/     let permit = tx.clone().reserve_owned().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594696,"byte_end":14594759,"line_start":1249,"line_end":1249,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594764,"byte_end":14594767,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/     // Trying to send on the original `tx` will fail, since the `permit`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594772,"byte_end":14594848,"line_start":1251,"line_end":1251,"column_start":5,"column_end":81}},{"value":"/     // has reserved all the available capacity.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594853,"byte_end":14594904,"line_start":1252,"line_end":1252,"column_start":5,"column_end":56}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594909,"byte_end":14594952,"line_start":1253,"line_end":1253,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594957,"byte_end":14594960,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/     // Release the permit without sending a message, returning the clone","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14594965,"byte_end":14595041,"line_start":1255,"line_end":1255,"column_start":5,"column_end":81}},{"value":"/     // of the sender.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14595046,"byte_end":14595071,"line_start":1256,"line_end":1256,"column_start":5,"column_end":30}},{"value":"/     let tx2 = permit.release();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14595076,"byte_end":14595111,"line_start":1257,"line_end":1257,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14595116,"byte_end":14595119,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/     // We may now reuse `tx` to send another message.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14595124,"byte_end":14595181,"line_start":1259,"line_end":1259,"column_start":5,"column_end":62}},{"value":"/     tx.send(789).await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14595186,"byte_end":14595222,"line_start":1260,"line_end":1260,"column_start":5,"column_end":41}},{"value":"/     # drop(rx); drop(tx2);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14595227,"byte_end":14595257,"line_start":1261,"line_end":1261,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14595262,"byte_end":14595267,"line_start":1262,"line_end":1262,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14595272,"byte_end":14595279,"line_start":1263,"line_end":1263,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14595284,"byte_end":14595287,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14595292,"byte_end":14595314,"line_start":1265,"line_end":1265,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14595706,"byte_end":14595710,"line_start":1280,"line_end":1280,"column_start":8,"column_end":12},"name":"drop","qualname":"<OwnedPermit<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14596380,"byte_end":14596383,"line_start":1303,"line_end":1303,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OwnedPermit<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1889},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14621331,"byte_end":14621346,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":1891}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14621173,"byte_end":14621227,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14621228,"byte_end":14621231,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14621232,"byte_end":14621264,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14621265,"byte_end":14621319,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14621435,"byte_end":14621440,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"clone","qualname":"<UnboundedSender<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1897},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14621591,"byte_end":14621594,"line_start":25,"line_end":25,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UnboundedSender<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1898},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14622139,"byte_end":14622156,"line_start":40,"line_end":40,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":1900}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14621763,"byte_end":14621820,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14621821,"byte_end":14621824,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14621825,"byte_end":14621857,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14621858,"byte_end":14621912,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14621913,"byte_end":14621916,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`UnboundedReceiverStream`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14621917,"byte_end":14621999,"line_start":37,"line_end":37,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14622000,"byte_end":14622003,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`UnboundedReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.UnboundedReceiverStream.html","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14622004,"byte_end":14622127,"line_start":39,"line_end":39,"column_start":1,"column_end":124}}]},{"kind":"Method","id":{"krate":0,"index":1903},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14622281,"byte_end":14622284,"line_start":46,"line_end":46,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UnboundedReceiver<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1904},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14622988,"byte_end":14623005,"line_start":63,"line_end":63,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks without backpressure.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14622455,"byte_end":14622531,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ tasks without backpressure.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14622532,"byte_end":14622563,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14622564,"byte_end":14622567,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14622568,"byte_end":14622648,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14622649,"byte_end":14622728,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14622729,"byte_end":14622742,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14622743,"byte_end":14622746,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14622747,"byte_end":14622826,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14622827,"byte_end":14622903,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14622904,"byte_end":14622980,"line_start":62,"line_end":62,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625186,"byte_end":14625190,"line_start":134,"line_end":134,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14623414,"byte_end":14623460,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14623465,"byte_end":14623468,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14623473,"byte_end":14623548,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14623553,"byte_end":14623626,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14623631,"byte_end":14623707,"line_start":84,"line_end":84,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14623712,"byte_end":14623787,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14623792,"byte_end":14623795,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14623800,"byte_end":14623873,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will sleep until a message is sent or","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14623878,"byte_end":14623952,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14623957,"byte_end":14623983,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14623988,"byte_end":14623991,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14623996,"byte_end":14624015,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624020,"byte_end":14624023,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. If `recv` is used as the event in a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624028,"byte_end":14624095,"line_start":93,"line_end":93,"column_start":5,"column_end":72}},{"value":"/ [`tokio::select!`](crate::select) statement and some other branch","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624100,"byte_end":14624169,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ completes first, it is guaranteed that no messages were received on this","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624174,"byte_end":14624250,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/ channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624255,"byte_end":14624267,"line_start":96,"line_end":96,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624272,"byte_end":14624275,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624280,"byte_end":14624306,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624311,"byte_end":14624314,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624319,"byte_end":14624333,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624338,"byte_end":14624341,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624346,"byte_end":14624353,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624358,"byte_end":14624384,"line_start":103,"line_end":103,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624389,"byte_end":14624392,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624397,"byte_end":14624415,"line_start":105,"line_end":105,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624420,"byte_end":14624441,"line_start":106,"line_end":106,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624446,"byte_end":14624499,"line_start":107,"line_end":107,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624504,"byte_end":14624507,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624512,"byte_end":14624545,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624550,"byte_end":14624588,"line_start":110,"line_end":110,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624593,"byte_end":14624604,"line_start":111,"line_end":111,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624609,"byte_end":14624612,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624617,"byte_end":14624668,"line_start":113,"line_end":113,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624673,"byte_end":14624715,"line_start":114,"line_end":114,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624720,"byte_end":14624725,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624730,"byte_end":14624737,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624742,"byte_end":14624745,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624750,"byte_end":14624774,"line_start":118,"line_end":118,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624779,"byte_end":14624782,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624787,"byte_end":14624794,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624799,"byte_end":14624825,"line_start":121,"line_end":121,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624830,"byte_end":14624833,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624838,"byte_end":14624856,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624861,"byte_end":14624882,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624887,"byte_end":14624940,"line_start":125,"line_end":125,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624945,"byte_end":14624948,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624953,"byte_end":14624987,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14624992,"byte_end":14625026,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625031,"byte_end":14625034,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625039,"byte_end":14625090,"line_start":130,"line_end":130,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625095,"byte_end":14625146,"line_start":131,"line_end":131,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625151,"byte_end":14625156,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625161,"byte_end":14625168,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626789,"byte_end":14626797,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnboundedReceiver<T>>::try_recv","value":"fn try_recv<'_>(&'_ mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next value for this receiver.","sig":null,"attributes":[{"value":"/ Tries to receive the next value for this receiver.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625312,"byte_end":14625366,"line_start":140,"line_end":140,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625371,"byte_end":14625374,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This method returns the [`Empty`] error if the channel is currently","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625379,"byte_end":14625450,"line_start":142,"line_end":142,"column_start":5,"column_end":76}},{"value":"/ empty, but there are still outstanding [senders] or [permits].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625455,"byte_end":14625521,"line_start":143,"line_end":143,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625526,"byte_end":14625529,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This method returns the [`Disconnected`] error if the channel is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625534,"byte_end":14625602,"line_start":145,"line_end":145,"column_start":5,"column_end":73}},{"value":"/ currently empty, and there are no outstanding [senders] or [permits].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625607,"byte_end":14625680,"line_start":146,"line_end":146,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625685,"byte_end":14625688,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Unlike the [`poll_recv`] method, this method will never return an","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625693,"byte_end":14625762,"line_start":148,"line_end":148,"column_start":5,"column_end":74}},{"value":"/ [`Empty`] error spuriously.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625767,"byte_end":14625798,"line_start":149,"line_end":149,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625803,"byte_end":14625806,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Empty`]: crate::sync::mpsc::error::TryRecvError::Empty","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625811,"byte_end":14625871,"line_start":151,"line_end":151,"column_start":5,"column_end":65}},{"value":"/ [`Disconnected`]: crate::sync::mpsc::error::TryRecvError::Disconnected","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625876,"byte_end":14625950,"line_start":152,"line_end":152,"column_start":5,"column_end":79}},{"value":"/ [`poll_recv`]: Self::poll_recv","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625955,"byte_end":14625989,"line_start":153,"line_end":153,"column_start":5,"column_end":39}},{"value":"/ [senders]: crate::sync::mpsc::Sender","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14625994,"byte_end":14626034,"line_start":154,"line_end":154,"column_start":5,"column_end":45}},{"value":"/ [permits]: crate::sync::mpsc::Permit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626039,"byte_end":14626079,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626084,"byte_end":14626087,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626092,"byte_end":14626106,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626111,"byte_end":14626114,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626119,"byte_end":14626126,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626131,"byte_end":14626157,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/ use tokio::sync::mpsc::error::TryRecvError;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626162,"byte_end":14626209,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626214,"byte_end":14626217,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626222,"byte_end":14626240,"line_start":163,"line_end":163,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626245,"byte_end":14626266,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626271,"byte_end":14626324,"line_start":165,"line_end":165,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626329,"byte_end":14626332,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626337,"byte_end":14626371,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626376,"byte_end":14626379,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(\"hello\"), rx.try_recv());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626384,"byte_end":14626431,"line_start":169,"line_end":169,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(Err(TryRecvError::Empty), rx.try_recv());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626436,"byte_end":14626496,"line_start":170,"line_end":170,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626501,"byte_end":14626504,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626509,"byte_end":14626543,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/     // Drop the last sender, closing the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626548,"byte_end":14626601,"line_start":173,"line_end":173,"column_start":5,"column_end":58}},{"value":"/     drop(tx);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626606,"byte_end":14626623,"line_start":174,"line_end":174,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626628,"byte_end":14626631,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(\"hello\"), rx.try_recv());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626636,"byte_end":14626683,"line_start":176,"line_end":176,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(Err(TryRecvError::Disconnected), rx.try_recv());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626688,"byte_end":14626755,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626760,"byte_end":14626765,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626770,"byte_end":14626777,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1918},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627583,"byte_end":14627596,"line_start":211,"line_end":211,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<UnboundedReceiver<T>>::blocking_recv","value":"fn blocking_recv<'_>(&'_ mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626878,"byte_end":14626940,"line_start":184,"line_end":184,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626945,"byte_end":14626948,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626953,"byte_end":14626965,"line_start":186,"line_end":186,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626970,"byte_end":14626973,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14626978,"byte_end":14627045,"line_start":188,"line_end":188,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627050,"byte_end":14627062,"line_start":189,"line_end":189,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627067,"byte_end":14627070,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627075,"byte_end":14627089,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627094,"byte_end":14627097,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627102,"byte_end":14627109,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627114,"byte_end":14627134,"line_start":194,"line_end":194,"column_start":5,"column_end":25}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627139,"byte_end":14627165,"line_start":195,"line_end":195,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627170,"byte_end":14627173,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627178,"byte_end":14627196,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627201,"byte_end":14627222,"line_start":198,"line_end":198,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel::<u8>();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627227,"byte_end":14627286,"line_start":199,"line_end":199,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627291,"byte_end":14627294,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627299,"byte_end":14627346,"line_start":201,"line_end":201,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627351,"byte_end":14627404,"line_start":202,"line_end":202,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627409,"byte_end":14627420,"line_start":203,"line_end":203,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627425,"byte_end":14627428,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/     let _ = tx.send(10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627433,"byte_end":14627461,"line_start":205,"line_end":205,"column_start":5,"column_end":33}},{"value":"/     sync_code.join().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627466,"byte_end":14627500,"line_start":206,"line_end":206,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627505,"byte_end":14627510,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627515,"byte_end":14627522,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627527,"byte_end":14627542,"line_start":209,"line_end":209,"column_start":5,"column_end":20}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627547,"byte_end":14627571,"line_start":210,"line_end":210,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1919},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14628058,"byte_end":14628063,"line_start":222,"line_end":222,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"fn close<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627679,"byte_end":14627743,"line_start":215,"line_end":215,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627748,"byte_end":14627751,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627756,"byte_end":14627831,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627836,"byte_end":14627904,"line_start":218,"line_end":218,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627909,"byte_end":14627912,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ To guarantee that no messages are dropped, after calling `close()`,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627917,"byte_end":14627988,"line_start":220,"line_end":220,"column_start":5,"column_end":76}},{"value":"/ `recv()` must be called until `None` is returned.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14627993,"byte_end":14628046,"line_start":221,"line_end":221,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14629287,"byte_end":14629296,"line_start":247,"line_end":247,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"fn poll_recv<'_, '_, '_>(&'_ mut Self, &'_ mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14628115,"byte_end":14628169,"line_start":226,"line_end":226,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14628174,"byte_end":14628177,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14628182,"byte_end":14628206,"line_start":228,"line_end":228,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14628211,"byte_end":14628214,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14628219,"byte_end":14628293,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/    closed, or if a spurious failure happens.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14628298,"byte_end":14628346,"line_start":231,"line_end":231,"column_start":5,"column_end":53}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14628351,"byte_end":14628413,"line_start":232,"line_end":232,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14628418,"byte_end":14628492,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14628497,"byte_end":14628549,"line_start":234,"line_end":234,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14628554,"byte_end":14628557,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14628562,"byte_end":14628634,"line_start":236,"line_end":236,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14628639,"byte_end":14628715,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14628720,"byte_end":14628796,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14628801,"byte_end":14628872,"line_start":239,"line_end":239,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14628877,"byte_end":14628926,"line_start":240,"line_end":240,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14628931,"byte_end":14628934,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Pending` due to a spurious failure, then","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14628939,"byte_end":14629013,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ the `Waker` will be notified when the situation causing the spurious","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14629018,"byte_end":14629090,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ failure has been resolved. Note that receiving such a wakeup does not","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14629095,"byte_end":14629168,"line_start":244,"line_end":244,"column_start":5,"column_end":78}},{"value":"/ guarantee that the next call will succeed — it could fail with another","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14629173,"byte_end":14629249,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ spurious failure.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14629254,"byte_end":14629275,"line_start":246,"line_end":246,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14630224,"byte_end":14630228,"line_start":269,"line_end":269,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"fn send<'_>(&'_ Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14629536,"byte_end":14629610,"line_start":257,"line_end":257,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14629615,"byte_end":14629618,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14629623,"byte_end":14629708,"line_start":259,"line_end":259,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14629713,"byte_end":14629794,"line_start":260,"line_end":260,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14629799,"byte_end":14629867,"line_start":261,"line_end":261,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14629872,"byte_end":14629875,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14629880,"byte_end":14629953,"line_start":263,"line_end":263,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14629958,"byte_end":14630029,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14630034,"byte_end":14630111,"line_start":265,"line_end":265,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14630116,"byte_end":14630119,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14630124,"byte_end":14630163,"line_start":267,"line_end":267,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14630168,"byte_end":14630212,"line_start":268,"line_end":268,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1936},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632351,"byte_end":14632357,"line_start":344,"line_end":344,"column_start":18,"column_end":24},"name":"closed","qualname":"<UnboundedSender<T>>::closed","value":"async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631266,"byte_end":14631310,"line_start":308,"line_end":308,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631315,"byte_end":14631318,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631323,"byte_end":14631398,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631403,"byte_end":14631458,"line_start":311,"line_end":311,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631463,"byte_end":14631466,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631471,"byte_end":14631490,"line_start":313,"line_end":313,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631495,"byte_end":14631498,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. Once the channel is closed, it stays closed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631503,"byte_end":14631578,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ forever and all future calls to `closed` will return immediately.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631583,"byte_end":14631652,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631657,"byte_end":14631660,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631665,"byte_end":14631679,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631684,"byte_end":14631687,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631692,"byte_end":14631699,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631704,"byte_end":14631730,"line_start":321,"line_end":321,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631735,"byte_end":14631738,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631743,"byte_end":14631761,"line_start":323,"line_end":323,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631766,"byte_end":14631787,"line_start":324,"line_end":324,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631792,"byte_end":14631848,"line_start":325,"line_end":325,"column_start":5,"column_end":61}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631853,"byte_end":14631883,"line_start":326,"line_end":326,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631888,"byte_end":14631918,"line_start":327,"line_end":327,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631923,"byte_end":14631953,"line_start":328,"line_end":328,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631958,"byte_end":14631988,"line_start":329,"line_end":329,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14631993,"byte_end":14632026,"line_start":330,"line_end":330,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632031,"byte_end":14632052,"line_start":331,"line_end":331,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632057,"byte_end":14632068,"line_start":332,"line_end":332,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632073,"byte_end":14632076,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632081,"byte_end":14632104,"line_start":334,"line_end":334,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632109,"byte_end":14632134,"line_start":335,"line_end":335,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632139,"byte_end":14632164,"line_start":336,"line_end":336,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632169,"byte_end":14632194,"line_start":337,"line_end":337,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632199,"byte_end":14632224,"line_start":338,"line_end":338,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632229,"byte_end":14632253,"line_start":339,"line_end":339,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632258,"byte_end":14632268,"line_start":340,"line_end":340,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632316,"byte_end":14632321,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632326,"byte_end":14632333,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14633055,"byte_end":14633064,"line_start":366,"line_end":366,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"fn is_closed<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`UnboundedReceiver`] is dropped, or when the\n [`UnboundedReceiver::close`] method is called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632411,"byte_end":14632475,"line_start":348,"line_end":348,"column_start":5,"column_end":69}},{"value":"/ [`UnboundedReceiver`] is dropped, or when the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632480,"byte_end":14632529,"line_start":349,"line_end":349,"column_start":5,"column_end":54}},{"value":"/ [`UnboundedReceiver::close`] method is called.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632534,"byte_end":14632584,"line_start":350,"line_end":350,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632589,"byte_end":14632592,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632597,"byte_end":14632660,"line_start":352,"line_end":352,"column_start":5,"column_end":68}},{"value":"/ [`UnboundedReceiver::close`]: crate::sync::mpsc::UnboundedReceiver::close","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632665,"byte_end":14632742,"line_start":353,"line_end":353,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632747,"byte_end":14632750,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632755,"byte_end":14632762,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632767,"byte_end":14632831,"line_start":356,"line_end":356,"column_start":5,"column_end":69}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632836,"byte_end":14632865,"line_start":357,"line_end":357,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632870,"byte_end":14632873,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632878,"byte_end":14632903,"line_start":359,"line_end":359,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632908,"byte_end":14632938,"line_start":360,"line_end":360,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632943,"byte_end":14632946,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632951,"byte_end":14632964,"line_start":362,"line_end":362,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14632969,"byte_end":14632997,"line_start":363,"line_end":363,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14633002,"byte_end":14633031,"line_start":364,"line_end":364,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14633036,"byte_end":14633043,"line_start":365,"line_end":365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14633512,"byte_end":14633524,"line_start":382,"line_end":382,"column_start":12,"column_end":24},"name":"same_channel","qualname":"<UnboundedSender<T>>::same_channel","value":"fn same_channel<'_, '_>(&'_ Self, &'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if senders belong to the same channel.","sig":null,"attributes":[{"value":"/ Returns `true` if senders belong to the same channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14633123,"byte_end":14633180,"line_start":370,"line_end":370,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14633185,"byte_end":14633188,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14633193,"byte_end":14633207,"line_start":372,"line_end":372,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14633212,"byte_end":14633215,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14633220,"byte_end":14633227,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14633232,"byte_end":14633296,"line_start":375,"line_end":375,"column_start":5,"column_end":69}},{"value":"/ let  tx2 = tx.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14633301,"byte_end":14633327,"line_start":376,"line_end":376,"column_start":5,"column_end":31}},{"value":"/ assert!(tx.same_channel(&tx2));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14633332,"byte_end":14633367,"line_start":377,"line_end":377,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14633372,"byte_end":14633375,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ let (tx3, rx3) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14633380,"byte_end":14633446,"line_start":379,"line_end":379,"column_start":5,"column_end":71}},{"value":"/ assert!(!tx3.same_channel(&tx2));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14633451,"byte_end":14633488,"line_start":380,"line_end":380,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14633493,"byte_end":14633500,"line_start":381,"line_end":381,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1951},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","parent":null,"children":[{"krate":0,"index":1952},{"krate":0,"index":1955},{"krate":0,"index":3431},{"krate":0,"index":3435},{"krate":0,"index":1958},{"krate":0,"index":1961},{"krate":0,"index":3438},{"krate":0,"index":3446},{"krate":0,"index":3449},{"krate":0,"index":3451},{"krate":0,"index":3454},{"krate":0,"index":3456},{"krate":0,"index":1963},{"krate":0,"index":1965},{"krate":0,"index":1968},{"krate":0,"index":3460},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3471},{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":1971},{"krate":0,"index":1973},{"krate":0,"index":3476},{"krate":0,"index":3479},{"krate":0,"index":3481},{"krate":0,"index":1974},{"krate":0,"index":1976}],"decl_id":null,"docs":" Channel error types.\n","sig":null,"attributes":[{"value":"/ Channel error types.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14633609,"byte_end":14633633,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":3431},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14633737,"byte_end":14633746,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14633673,"byte_end":14633708,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3434},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14633750,"byte_end":14633755,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":3431},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1960},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14633806,"byte_end":14633809,"line_start":11,"line_end":11,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SendError<T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3440},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14634314,"byte_end":14634318,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":3438},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14634182,"byte_end":14634250,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14634255,"byte_end":14634309,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3442},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14634319,"byte_end":14634320,"line_start":26,"line_end":26,"column_start":10,"column_end":11},"name":"0","qualname":"::sync::mpsc::error::TrySendError::Full::0","value":"T","parent":{"krate":0,"index":3440},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3443},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14634419,"byte_end":14634425,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":3438},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14634328,"byte_end":14634397,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14634402,"byte_end":14634414,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":3445},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14634426,"byte_end":14634427,"line_start":30,"line_end":30,"column_start":12,"column_end":13},"name":"0","qualname":"::sync::mpsc::error::TrySendError::Closed::0","value":"T","parent":{"krate":0,"index":3443},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3438},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14634160,"byte_end":14634172,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"enum TrySendError<T> { Full(T), Closed(T), }","parent":null,"children":[{"krate":0,"index":3440},{"krate":0,"index":3443}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14633999,"byte_end":14634070,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14634071,"byte_end":14634118,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14634533,"byte_end":14634536,"line_start":36,"line_end":36,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TrySendError<T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14634885,"byte_end":14634889,"line_start":49,"line_end":49,"column_start":8,"column_end":12},"name":"from","qualname":"<TrySendError<T> as std::convert::From>::from","value":"fn from(SendError<T>) -> TrySendError<T>","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3461},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14635247,"byte_end":14635252,"line_start":61,"line_end":61,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::mpsc::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":3460},"children":[],"decl_id":null,"docs":" This **channel** is currently empty, but the **Sender**(s) have not yet\n disconnected, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ This **channel** is currently empty, but the **Sender**(s) have not yet","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14635111,"byte_end":14635186,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ disconnected, so data may yet become available.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14635191,"byte_end":14635242,"line_start":60,"line_end":60,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3463},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14635384,"byte_end":14635396,"line_start":64,"line_end":64,"column_start":5,"column_end":17},"name":"Disconnected","qualname":"::sync::mpsc::error::TryRecvError::Disconnected","value":"TryRecvError::Disconnected","parent":{"krate":0,"index":3460},"children":[],"decl_id":null,"docs":" The **channel**'s sending half has become disconnected, and there will\n never be any more data received on it.\n","sig":null,"attributes":[{"value":"/ The **channel**'s sending half has become disconnected, and there will","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14635258,"byte_end":14635332,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ never be any more data received on it.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14635337,"byte_end":14635379,"line_start":63,"line_end":63,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":3460},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14635092,"byte_end":14635104,"line_start":58,"line_end":58,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::mpsc::error::TryRecvError","value":"enum TryRecvError { Empty, Disconnected, }","parent":null,"children":[{"krate":0,"index":3461},{"krate":0,"index":3463}],"decl_id":null,"docs":" Error returned by `try_recv`.\n","sig":null,"attributes":[{"value":"/ Error returned by `try_recv`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14635004,"byte_end":14635037,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14635445,"byte_end":14635448,"line_start":68,"line_end":68,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryRecvError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3476},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14635923,"byte_end":14635932,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14635763,"byte_end":14635796,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"deprecated(note = \"This type is unused because recv returns an Option.\")","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14635836,"byte_end":14635911,"line_start":83,"line_end":83,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1975},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14636001,"byte_end":14636004,"line_start":88,"line_end":88,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RecvError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2008},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14642108,"byte_end":14642113,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":2010},{"krate":0,"index":2011}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14637445,"byte_end":14637483,"line_start":13,"line_end":13,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14637484,"byte_end":14637487,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to [`std::sync::Mutex`], with two major","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14637488,"byte_end":14637556,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ differences: [`lock`] is an async method so does not block, and the lock","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14637557,"byte_end":14637633,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ guard is designed to be held across `.await` points.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14637634,"byte_end":14637690,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14637691,"byte_end":14637694,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14637695,"byte_end":14637736,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14637737,"byte_end":14637740,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14637741,"byte_end":14637821,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14637822,"byte_end":14637888,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14637889,"byte_end":14637892,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The feature that the async mutex offers over the blocking mutex is the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14637893,"byte_end":14637967,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ ability to keep it locked across an `.await` point. This makes the async","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14637968,"byte_end":14638044,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ mutex more expensive than the blocking mutex, so the blocking mutex should","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14638045,"byte_end":14638123,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ be preferred in the cases where it can be used. The primary use case for the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14638124,"byte_end":14638204,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ async mutex is to provide shared mutable access to IO resources such as a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14638205,"byte_end":14638282,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ database connection. If the value behind the mutex is just data, it's","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14638283,"byte_end":14638356,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ usually appropriate to use a blocking mutex such as the one in the standard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14638357,"byte_end":14638436,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ library or [`parking_lot`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14638437,"byte_end":14638468,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14638469,"byte_end":14638472,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note that, although the compiler will not prevent the std `Mutex` from holding","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14638473,"byte_end":14638555,"line_start":33,"line_end":33,"column_start":1,"column_end":83}},{"value":"/ its guard across `.await` points in situations where the task is not movable","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14638556,"byte_end":14638636,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ between threads, this virtually never leads to correct concurrent code in","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14638637,"byte_end":14638714,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ practice as it can easily lead to deadlocks.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14638715,"byte_end":14638763,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14638764,"byte_end":14638767,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14638768,"byte_end":14638847,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14638848,"byte_end":14638924,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14638925,"byte_end":14639002,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639003,"byte_end":14639036,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639037,"byte_end":14639040,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639041,"byte_end":14639116,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639117,"byte_end":14639195,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639196,"byte_end":14639238,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639239,"byte_end":14639242,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639243,"byte_end":14639270,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639271,"byte_end":14639319,"line_start":48,"line_end":48,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639320,"byte_end":14639398,"line_start":49,"line_end":49,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639399,"byte_end":14639402,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639403,"byte_end":14639418,"line_start":51,"line_end":51,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639419,"byte_end":14639422,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639423,"byte_end":14639441,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639442,"byte_end":14639469,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639470,"byte_end":14639493,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639494,"byte_end":14639497,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639498,"byte_end":14639516,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639517,"byte_end":14639538,"line_start":58,"line_end":58,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639539,"byte_end":14639583,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639584,"byte_end":14639623,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639624,"byte_end":14639627,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639628,"byte_end":14639661,"line_start":62,"line_end":62,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639662,"byte_end":14639708,"line_start":63,"line_end":63,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639709,"byte_end":14639732,"line_start":64,"line_end":64,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639733,"byte_end":14639744,"line_start":65,"line_end":65,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639745,"byte_end":14639748,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639749,"byte_end":14639791,"line_start":67,"line_end":67,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639792,"byte_end":14639811,"line_start":68,"line_end":68,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639812,"byte_end":14639817,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639818,"byte_end":14639825,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639826,"byte_end":14639829,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639830,"byte_end":14639833,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639834,"byte_end":14639852,"line_start":73,"line_end":73,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639853,"byte_end":14639880,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639881,"byte_end":14639904,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639905,"byte_end":14639908,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639909,"byte_end":14639927,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639928,"byte_end":14639949,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639950,"byte_end":14639994,"line_start":79,"line_end":79,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639995,"byte_end":14639998,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     for i in 0..5 {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14639999,"byte_end":14640022,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640023,"byte_end":14640069,"line_start":82,"line_end":82,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640070,"byte_end":14640107,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"/             for j in 0..10 {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640108,"byte_end":14640140,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640141,"byte_end":14640198,"line_start":85,"line_end":85,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640199,"byte_end":14640230,"line_start":86,"line_end":86,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{} {} {}\", i, j, lock);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640231,"byte_end":14640284,"line_start":87,"line_end":87,"column_start":1,"column_end":54}},{"value":"/             }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640285,"byte_end":14640302,"line_start":88,"line_end":88,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640303,"byte_end":14640318,"line_start":89,"line_end":89,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640319,"byte_end":14640328,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640329,"byte_end":14640332,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640333,"byte_end":14640347,"line_start":92,"line_end":92,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640348,"byte_end":14640390,"line_start":93,"line_end":93,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640391,"byte_end":14640413,"line_start":94,"line_end":94,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640414,"byte_end":14640427,"line_start":95,"line_end":95,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640428,"byte_end":14640437,"line_start":96,"line_end":96,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640438,"byte_end":14640472,"line_start":97,"line_end":97,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640473,"byte_end":14640478,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640479,"byte_end":14640486,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640487,"byte_end":14640563,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640564,"byte_end":14640637,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640638,"byte_end":14640653,"line_start":102,"line_end":102,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640654,"byte_end":14640729,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640730,"byte_end":14640806,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640807,"byte_end":14640859,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640860,"byte_end":14640863,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640864,"byte_end":14640942,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14640943,"byte_end":14641023,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14641024,"byte_end":14641100,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ data. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14641101,"byte_end":14641181,"line_start":110,"line_end":110,"column_start":1,"column_end":81}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14641182,"byte_end":14641262,"line_start":111,"line_end":111,"column_start":1,"column_end":81}},{"value":"/ Note that there's some unpredictability to the timing between when the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14641263,"byte_end":14641337,"line_start":112,"line_end":112,"column_start":1,"column_end":75}},{"value":"/ threads are started, but once they are going they alternate predictably.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14641338,"byte_end":14641414,"line_start":113,"line_end":113,"column_start":1,"column_end":77}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14641415,"byte_end":14641495,"line_start":114,"line_end":114,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14641496,"byte_end":14641565,"line_start":115,"line_end":115,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14641566,"byte_end":14641569,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14641570,"byte_end":14641649,"line_start":117,"line_end":117,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14641650,"byte_end":14641729,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14641730,"byte_end":14641808,"line_start":119,"line_end":119,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14641809,"byte_end":14641870,"line_start":120,"line_end":120,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14641871,"byte_end":14641874,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14641875,"byte_end":14641902,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14641903,"byte_end":14641940,"line_start":123,"line_end":123,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14641941,"byte_end":14641975,"line_start":124,"line_end":124,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14641976,"byte_end":14642025,"line_start":125,"line_end":125,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14642026,"byte_end":14642063,"line_start":126,"line_end":126,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14642064,"byte_end":14642096,"line_start":127,"line_end":127,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2012},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14642760,"byte_end":14642770,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":2015}],"decl_id":null,"docs":" A handle to a held `Mutex`. The guard can be held across any `.await` point\n as it is [`Send`].","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`. The guard can be held across any `.await` point","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14642268,"byte_end":14642347,"line_start":135,"line_end":135,"column_start":1,"column_end":80}},{"value":"/ as it is [`Send`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14642348,"byte_end":14642370,"line_start":136,"line_end":136,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14642371,"byte_end":14642374,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14642375,"byte_end":14642454,"line_start":138,"line_end":138,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14642455,"byte_end":14642530,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14642531,"byte_end":14642564,"line_start":140,"line_end":140,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14642565,"byte_end":14642568,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14642569,"byte_end":14642647,"line_start":142,"line_end":142,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14642648,"byte_end":14642688,"line_start":143,"line_end":143,"column_start":1,"column_end":41}},{"value":"must_use = \"if unused the Mutex will immediately unlock\"","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14642689,"byte_end":14642748,"line_start":144,"line_end":144,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2016},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14643645,"byte_end":14643660,"line_start":166,"line_end":166,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":2018}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14642902,"byte_end":14642940,"line_start":151,"line_end":151,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14642941,"byte_end":14642944,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14642945,"byte_end":14643026,"line_start":153,"line_end":153,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14643027,"byte_end":14643107,"line_start":154,"line_end":154,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14643108,"byte_end":14643182,"line_start":155,"line_end":155,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14643183,"byte_end":14643244,"line_start":156,"line_end":156,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14643245,"byte_end":14643248,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14643249,"byte_end":14643328,"line_start":158,"line_end":158,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-counted pointer to the original","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14643329,"byte_end":14643408,"line_start":159,"line_end":159,"column_start":1,"column_end":80}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14643409,"byte_end":14643477,"line_start":160,"line_end":160,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14643478,"byte_end":14643481,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14643482,"byte_end":14643560,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14643561,"byte_end":14643601,"line_start":163,"line_end":163,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14643602,"byte_end":14643605,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14643606,"byte_end":14643633,"line_start":165,"line_end":165,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2019},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14644073,"byte_end":14644089,"line_start":178,"line_end":178,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::sync::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2024}],"decl_id":null,"docs":" A handle to a held `Mutex` that has had a function applied to it via [`MutexGuard::map`].","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex` that has had a function applied to it via [`MutexGuard::map`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14643789,"byte_end":14643882,"line_start":172,"line_end":172,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14643883,"byte_end":14643886,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ This can be used to hold a subfield of the protected data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14643887,"byte_end":14643949,"line_start":174,"line_end":174,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14643950,"byte_end":14643953,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ [`MutexGuard::map`]: method@MutexGuard::map","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14643954,"byte_end":14644001,"line_start":176,"line_end":176,"column_start":1,"column_end":48}},{"value":"must_use = \"if unused the Mutex will immediately unlock\"","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14644002,"byte_end":14644061,"line_start":177,"line_end":177,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3483},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14645490,"byte_end":14645502,"line_start":210,"line_end":210,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and\n [`RwLock::try_write`] functions.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14644901,"byte_end":14644974,"line_start":195,"line_end":195,"column_start":1,"column_end":74}},{"value":"/ [`RwLock::try_write`] functions.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14644975,"byte_end":14645011,"line_start":196,"line_end":196,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14645012,"byte_end":14645015,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ `Mutex::try_lock` operation will only fail if the mutex is already locked.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14645016,"byte_end":14645094,"line_start":198,"line_end":198,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14645095,"byte_end":14645098,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_read` operation will only fail if the lock is currently held","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14645099,"byte_end":14645176,"line_start":200,"line_end":200,"column_start":1,"column_end":78}},{"value":"/ by an exclusive writer.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14645177,"byte_end":14645204,"line_start":201,"line_end":201,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14645205,"byte_end":14645208,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_write` operation will if lock is held by any reader or by an","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14645209,"byte_end":14645286,"line_start":203,"line_end":203,"column_start":1,"column_end":78}},{"value":"/ exclusive writer.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14645287,"byte_end":14645308,"line_start":204,"line_end":204,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14645309,"byte_end":14645312,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14645313,"byte_end":14645353,"line_start":206,"line_end":206,"column_start":1,"column_end":41}},{"value":"/ [`RwLock::try_read`]: fn@super::RwLock::try_read","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14645354,"byte_end":14645406,"line_start":207,"line_end":207,"column_start":1,"column_end":53}},{"value":"/ [`RwLock::try_write`]: fn@super::RwLock::try_write","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14645407,"byte_end":14645461,"line_start":208,"line_end":208,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2040},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14645564,"byte_end":14645567,"line_start":213,"line_end":213,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryLockError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2044},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14646749,"byte_end":14646752,"line_start":255,"line_end":255,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14646526,"byte_end":14646584,"line_start":245,"line_end":245,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14646589,"byte_end":14646592,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14646597,"byte_end":14646611,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14646616,"byte_end":14646619,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14646624,"byte_end":14646631,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14646636,"byte_end":14646663,"line_start":250,"line_end":250,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14646668,"byte_end":14646671,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14646676,"byte_end":14646705,"line_start":252,"line_end":252,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14646710,"byte_end":14646717,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14646722,"byte_end":14646737,"line_start":254,"line_end":254,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14649150,"byte_end":14649154,"line_start":339,"line_end":339,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"async fn lock<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired.  When the lock has been acquired, function returns a\n [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14648471,"byte_end":14648545,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ been acquired.  When the lock has been acquired, function returns a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14648550,"byte_end":14648621,"line_start":317,"line_end":317,"column_start":5,"column_end":76}},{"value":"/ [`MutexGuard`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14648626,"byte_end":14648645,"line_start":318,"line_end":318,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14648650,"byte_end":14648653,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14648658,"byte_end":14648677,"line_start":320,"line_end":320,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14648682,"byte_end":14648685,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14648690,"byte_end":14648763,"line_start":322,"line_end":322,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `lock` makes you lose your place in","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14648768,"byte_end":14648844,"line_start":323,"line_end":323,"column_start":5,"column_end":81}},{"value":"/ the queue.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14648849,"byte_end":14648863,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14648868,"byte_end":14648871,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14648876,"byte_end":14648890,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14648895,"byte_end":14648898,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14648903,"byte_end":14648910,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14648915,"byte_end":14648942,"line_start":329,"line_end":329,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14648947,"byte_end":14648950,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14648955,"byte_end":14648973,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14648978,"byte_end":14648999,"line_start":332,"line_end":332,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14649004,"byte_end":14649038,"line_start":333,"line_end":333,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14649043,"byte_end":14649046,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14649051,"byte_end":14649090,"line_start":335,"line_end":335,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14649095,"byte_end":14649110,"line_start":336,"line_end":336,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14649115,"byte_end":14649120,"line_start":337,"line_end":337,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14649125,"byte_end":14649132,"line_start":338,"line_end":338,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651668,"byte_end":14651681,"line_start":417,"line_end":417,"column_start":12,"column_end":25},"name":"blocking_lock","qualname":"<Mutex<T>>::blocking_lock","value":"fn blocking_lock<'_>(&'_ Self) -> MutexGuard","parent":null,"children":[],"decl_id":null,"docs":" Blockingly locks this `Mutex`. When the lock has been acquired, function returns a\n [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Blockingly locks this `Mutex`. When the lock has been acquired, function returns a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14649956,"byte_end":14650042,"line_start":368,"line_end":368,"column_start":5,"column_end":91}},{"value":"/ [`MutexGuard`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650047,"byte_end":14650066,"line_start":369,"line_end":369,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650071,"byte_end":14650074,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650079,"byte_end":14650130,"line_start":371,"line_end":371,"column_start":5,"column_end":56}},{"value":"/ need to use this mutex in asynchronous code as well as in synchronous code.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650135,"byte_end":14650214,"line_start":372,"line_end":372,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650219,"byte_end":14650222,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650227,"byte_end":14650239,"line_start":374,"line_end":374,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650244,"byte_end":14650247,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution context.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650252,"byte_end":14650328,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650333,"byte_end":14650336,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/   - If you find yourself in an asynchronous execution context and needing","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650341,"byte_end":14650418,"line_start":378,"line_end":378,"column_start":5,"column_end":82}},{"value":"/     to call some (synchronous) function which performs one of these","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650423,"byte_end":14650494,"line_start":379,"line_end":379,"column_start":5,"column_end":76}},{"value":"/     `blocking_` operations, then consider wrapping that call inside","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650499,"byte_end":14650570,"line_start":380,"line_end":380,"column_start":5,"column_end":76}},{"value":"/     [`spawn_blocking()`][crate::runtime::Handle::spawn_blocking]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650575,"byte_end":14650643,"line_start":381,"line_end":381,"column_start":5,"column_end":73}},{"value":"/     (or [`block_in_place()`][crate::task::block_in_place]).","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650648,"byte_end":14650711,"line_start":382,"line_end":382,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650716,"byte_end":14650719,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650724,"byte_end":14650738,"line_start":384,"line_end":384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650743,"byte_end":14650746,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650751,"byte_end":14650758,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650763,"byte_end":14650786,"line_start":387,"line_end":387,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650791,"byte_end":14650818,"line_start":388,"line_end":388,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650823,"byte_end":14650826,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650831,"byte_end":14650849,"line_start":390,"line_end":390,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650854,"byte_end":14650875,"line_start":391,"line_end":391,"column_start":5,"column_end":26}},{"value":"/     let mutex =  Arc::new(Mutex::new(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650880,"byte_end":14650925,"line_start":392,"line_end":392,"column_start":5,"column_end":50}},{"value":"/     let lock = mutex.lock().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650930,"byte_end":14650968,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650973,"byte_end":14650976,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     let mutex1 = Arc::clone(&mutex);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14650981,"byte_end":14651021,"line_start":395,"line_end":395,"column_start":5,"column_end":45}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(move || {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651026,"byte_end":14651091,"line_start":396,"line_end":396,"column_start":5,"column_end":70}},{"value":"/         // This shall block until the `lock` is released.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651096,"byte_end":14651157,"line_start":397,"line_end":397,"column_start":5,"column_end":66}},{"value":"/         let mut n = mutex1.blocking_lock();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651162,"byte_end":14651209,"line_start":398,"line_end":398,"column_start":5,"column_end":52}},{"value":"/         *n = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651214,"byte_end":14651233,"line_start":399,"line_end":399,"column_start":5,"column_end":24}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651238,"byte_end":14651249,"line_start":400,"line_end":400,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651254,"byte_end":14651257,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(*lock, 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651262,"byte_end":14651291,"line_start":402,"line_end":402,"column_start":5,"column_end":34}},{"value":"/     // Release the lock.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651296,"byte_end":14651324,"line_start":403,"line_end":403,"column_start":5,"column_end":33}},{"value":"/     drop(lock);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651329,"byte_end":14651348,"line_start":404,"line_end":404,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651353,"byte_end":14651356,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/     // Await the completion of the blocking task.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651361,"byte_end":14651414,"line_start":406,"line_end":406,"column_start":5,"column_end":58}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651419,"byte_end":14651456,"line_start":407,"line_end":407,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651461,"byte_end":14651464,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/     // Assert uncontended.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651469,"byte_end":14651499,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/     let n = mutex.try_lock().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651504,"byte_end":14651546,"line_start":410,"line_end":410,"column_start":5,"column_end":47}},{"value":"/     assert_eq!(*n, 2);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651551,"byte_end":14651577,"line_start":411,"line_end":411,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651582,"byte_end":14651587,"line_start":412,"line_end":412,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651592,"byte_end":14651595,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651600,"byte_end":14651607,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651612,"byte_end":14651627,"line_start":415,"line_end":415,"column_start":5,"column_end":20}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651632,"byte_end":14651656,"line_start":416,"line_end":416,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652913,"byte_end":14652923,"line_start":453,"line_end":453,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651768,"byte_end":14651842,"line_start":421,"line_end":421,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651847,"byte_end":14651914,"line_start":422,"line_end":422,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651919,"byte_end":14651943,"line_start":423,"line_end":423,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651948,"byte_end":14651951,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14651956,"byte_end":14652029,"line_start":425,"line_end":425,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652034,"byte_end":14652107,"line_start":426,"line_end":426,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652112,"byte_end":14652183,"line_start":427,"line_end":427,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652188,"byte_end":14652263,"line_start":428,"line_end":428,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652268,"byte_end":14652310,"line_start":429,"line_end":429,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652315,"byte_end":14652318,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652323,"byte_end":14652342,"line_start":431,"line_end":431,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652347,"byte_end":14652350,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652355,"byte_end":14652428,"line_start":433,"line_end":433,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `lock_owned` makes you lose your","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652433,"byte_end":14652506,"line_start":434,"line_end":434,"column_start":5,"column_end":78}},{"value":"/ place in the queue.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652511,"byte_end":14652534,"line_start":435,"line_end":435,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652539,"byte_end":14652542,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652547,"byte_end":14652561,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652566,"byte_end":14652569,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652574,"byte_end":14652581,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652586,"byte_end":14652613,"line_start":440,"line_end":440,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652618,"byte_end":14652641,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652646,"byte_end":14652649,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652654,"byte_end":14652672,"line_start":443,"line_end":443,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652677,"byte_end":14652698,"line_start":444,"line_end":444,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652703,"byte_end":14652747,"line_start":445,"line_end":445,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652752,"byte_end":14652755,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652760,"byte_end":14652813,"line_start":447,"line_end":447,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652818,"byte_end":14652833,"line_start":448,"line_end":448,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652838,"byte_end":14652843,"line_start":449,"line_end":449,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652848,"byte_end":14652855,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652860,"byte_end":14652863,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14652868,"byte_end":14652895,"line_start":452,"line_end":452,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2056},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14654588,"byte_end":14654596,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn try_lock<'_>(&'_ Self) -> Result<MutexGuard, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14654120,"byte_end":14654189,"line_start":493,"line_end":493,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14654194,"byte_end":14654236,"line_start":494,"line_end":494,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14654241,"byte_end":14654244,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14654249,"byte_end":14654283,"line_start":496,"line_end":496,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14654288,"byte_end":14654302,"line_start":497,"line_end":497,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14654307,"byte_end":14654310,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14654315,"byte_end":14654322,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14654327,"byte_end":14654354,"line_start":500,"line_end":500,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14654359,"byte_end":14654422,"line_start":501,"line_end":501,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14654427,"byte_end":14654430,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14654435,"byte_end":14654465,"line_start":503,"line_end":503,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14654470,"byte_end":14654473,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14654478,"byte_end":14654508,"line_start":505,"line_end":505,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14654513,"byte_end":14654535,"line_start":506,"line_end":506,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14654540,"byte_end":14654552,"line_start":507,"line_end":507,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14654557,"byte_end":14654564,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14654569,"byte_end":14654576,"line_start":509,"line_end":509,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655777,"byte_end":14655784,"line_start":548,"line_end":548,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655306,"byte_end":14655361,"line_start":531,"line_end":531,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655366,"byte_end":14655369,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655374,"byte_end":14655449,"line_start":533,"line_end":533,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655454,"byte_end":14655528,"line_start":534,"line_end":534,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655533,"byte_end":14655536,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655541,"byte_end":14655555,"line_start":536,"line_end":536,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655560,"byte_end":14655563,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655568,"byte_end":14655575,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655580,"byte_end":14655607,"line_start":539,"line_end":539,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655612,"byte_end":14655615,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655620,"byte_end":14655635,"line_start":541,"line_end":541,"column_start":5,"column_end":20}},{"value":"/     let mut mutex = Mutex::new(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655640,"byte_end":14655678,"line_start":542,"line_end":542,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655683,"byte_end":14655686,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.get_mut();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655691,"byte_end":14655723,"line_start":544,"line_end":544,"column_start":5,"column_end":37}},{"value":"/     *n = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655728,"byte_end":14655743,"line_start":545,"line_end":545,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655748,"byte_end":14655753,"line_start":546,"line_end":546,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655758,"byte_end":14655765,"line_start":547,"line_end":547,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656865,"byte_end":14656879,"line_start":579,"line_end":579,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14655953,"byte_end":14656027,"line_start":555,"line_end":555,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656032,"byte_end":14656069,"line_start":556,"line_end":556,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656074,"byte_end":14656077,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656082,"byte_end":14656150,"line_start":558,"line_end":558,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656155,"byte_end":14656228,"line_start":559,"line_end":559,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656233,"byte_end":14656309,"line_start":560,"line_end":560,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656314,"byte_end":14656388,"line_start":561,"line_end":561,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656393,"byte_end":14656441,"line_start":562,"line_end":562,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656446,"byte_end":14656449,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656454,"byte_end":14656488,"line_start":564,"line_end":564,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656493,"byte_end":14656520,"line_start":565,"line_end":565,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656525,"byte_end":14656539,"line_start":566,"line_end":566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656544,"byte_end":14656547,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656552,"byte_end":14656559,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656564,"byte_end":14656591,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656596,"byte_end":14656619,"line_start":570,"line_end":570,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656624,"byte_end":14656687,"line_start":571,"line_end":571,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656692,"byte_end":14656695,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656700,"byte_end":14656740,"line_start":573,"line_end":573,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656745,"byte_end":14656748,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656753,"byte_end":14656797,"line_start":575,"line_end":575,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656802,"byte_end":14656824,"line_start":576,"line_end":576,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656829,"byte_end":14656841,"line_start":577,"line_end":577,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14656846,"byte_end":14656853,"line_start":578,"line_end":578,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658040,"byte_end":14658050,"line_start":617,"line_end":617,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14657707,"byte_end":14657761,"line_start":603,"line_end":603,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14657766,"byte_end":14657780,"line_start":604,"line_end":604,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14657785,"byte_end":14657788,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14657793,"byte_end":14657800,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14657805,"byte_end":14657832,"line_start":607,"line_end":607,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14657837,"byte_end":14657840,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14657845,"byte_end":14657863,"line_start":609,"line_end":609,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14657868,"byte_end":14657889,"line_start":610,"line_end":610,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14657894,"byte_end":14657928,"line_start":611,"line_end":611,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14657933,"byte_end":14657936,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14657941,"byte_end":14657976,"line_start":613,"line_end":613,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14657981,"byte_end":14658006,"line_start":614,"line_end":614,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658011,"byte_end":14658016,"line_start":615,"line_end":615,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658021,"byte_end":14658028,"line_start":616,"line_end":616,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658171,"byte_end":14658175,"line_start":626,"line_end":626,"column_start":8,"column_end":12},"name":"from","qualname":"<Mutex<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658282,"byte_end":14658289,"line_start":635,"line_end":635,"column_start":8,"column_end":15},"name":"default","qualname":"<Mutex<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658427,"byte_end":14658430,"line_start":644,"line_end":644,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Mutex<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut std::fmt::Formatter) -> std::fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659785,"byte_end":14659788,"line_start":688,"line_end":688,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"fn map<U, F>(Self, F) -> MappedMutexGuard where F: for<'_> FnOnce(&'_ mut T)\n-> &'_ mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`MappedMutexGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new [`MappedMutexGuard`] for a component of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658799,"byte_end":14658871,"line_start":657,"line_end":657,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658876,"byte_end":14658879,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MutexGuard`] passed in already locked the mutex.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658884,"byte_end":14658972,"line_start":659,"line_end":659,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658977,"byte_end":14658980,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MutexGuard::map(...)`. A method","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658985,"byte_end":14659077,"line_start":661,"line_end":661,"column_start":5,"column_end":97}},{"value":"/ would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659082,"byte_end":14659167,"line_start":662,"line_end":662,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659172,"byte_end":14659175,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659180,"byte_end":14659194,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659199,"byte_end":14659202,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659207,"byte_end":14659214,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Mutex, MutexGuard};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659219,"byte_end":14659260,"line_start":667,"line_end":667,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659265,"byte_end":14659268,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659273,"byte_end":14659321,"line_start":669,"line_end":669,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659326,"byte_end":14659346,"line_start":670,"line_end":670,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659351,"byte_end":14659354,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659359,"byte_end":14659379,"line_start":672,"line_end":672,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659384,"byte_end":14659407,"line_start":673,"line_end":673,"column_start":5,"column_end":28}},{"value":"/ let foo = Mutex::new(Foo(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659412,"byte_end":14659445,"line_start":674,"line_end":674,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659450,"byte_end":14659453,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659458,"byte_end":14659463,"line_start":676,"line_end":676,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = MutexGuard::map(foo.lock().await, |f| &mut f.0);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659468,"byte_end":14659541,"line_start":677,"line_end":677,"column_start":5,"column_end":78}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659546,"byte_end":14659566,"line_start":678,"line_end":678,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659571,"byte_end":14659576,"line_start":679,"line_end":679,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659581,"byte_end":14659584,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *foo.lock().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659589,"byte_end":14659631,"line_start":681,"line_end":681,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659636,"byte_end":14659643,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659648,"byte_end":14659655,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659660,"byte_end":14659663,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659668,"byte_end":14659705,"line_start":685,"line_end":685,"column_start":5,"column_end":42}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659710,"byte_end":14659759,"line_start":686,"line_end":686,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14659764,"byte_end":14659773,"line_start":687,"line_end":687,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661244,"byte_end":14661251,"line_start":735,"line_end":735,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MutexGuard>::try_map","value":"fn try_map<U, F>(Self, F) -> Result<MappedMutexGuard, Self> where\nF: for<'_> FnOnce(&'_ mut T) -> Option<&'_ mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The\n original guard is returned if the closure returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660120,"byte_end":14660207,"line_start":702,"line_end":702,"column_start":5,"column_end":92}},{"value":"/ original guard is returned if the closure returns `None`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660212,"byte_end":14660273,"line_start":703,"line_end":703,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660278,"byte_end":14660281,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MutexGuard`] passed in already locked the mutex.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660286,"byte_end":14660374,"line_start":705,"line_end":705,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660379,"byte_end":14660382,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MutexGuard::try_map(...)`. A","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660387,"byte_end":14660476,"line_start":707,"line_end":707,"column_start":5,"column_end":94}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660481,"byte_end":14660573,"line_start":708,"line_end":708,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660578,"byte_end":14660581,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660586,"byte_end":14660600,"line_start":710,"line_end":710,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660605,"byte_end":14660608,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660613,"byte_end":14660620,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Mutex, MutexGuard};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660625,"byte_end":14660666,"line_start":713,"line_end":713,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660671,"byte_end":14660674,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660679,"byte_end":14660727,"line_start":715,"line_end":715,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660732,"byte_end":14660752,"line_start":716,"line_end":716,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660757,"byte_end":14660760,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660765,"byte_end":14660785,"line_start":718,"line_end":718,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660790,"byte_end":14660813,"line_start":719,"line_end":719,"column_start":5,"column_end":28}},{"value":"/ let foo = Mutex::new(Foo(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660818,"byte_end":14660851,"line_start":720,"line_end":720,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660856,"byte_end":14660859,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660864,"byte_end":14660869,"line_start":722,"line_end":722,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = MutexGuard::try_map(foo.lock().await, |f| Some(&mut f.0))","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660874,"byte_end":14660956,"line_start":723,"line_end":723,"column_start":5,"column_end":87}},{"value":"/         .expect(\"should not fail\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14660961,"byte_end":14661000,"line_start":724,"line_end":724,"column_start":5,"column_end":44}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661005,"byte_end":14661025,"line_start":725,"line_end":725,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661030,"byte_end":14661035,"line_start":726,"line_end":726,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661040,"byte_end":14661043,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *foo.lock().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661048,"byte_end":14661090,"line_start":728,"line_end":728,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661095,"byte_end":14661102,"line_start":729,"line_end":729,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661107,"byte_end":14661114,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661119,"byte_end":14661122,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661127,"byte_end":14661164,"line_start":732,"line_end":732,"column_start":5,"column_end":42}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661169,"byte_end":14661218,"line_start":733,"line_end":733,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661223,"byte_end":14661232,"line_start":734,"line_end":734,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662423,"byte_end":14662428,"line_start":774,"line_end":774,"column_start":12,"column_end":17},"name":"mutex","qualname":"<MutexGuard>::mutex","value":"fn mutex<'_>(&'_ Self) -> &'a Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the original `Mutex`.","sig":null,"attributes":[{"value":"/ Returns a reference to the original `Mutex`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661697,"byte_end":14661745,"line_start":752,"line_end":752,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661750,"byte_end":14661753,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661758,"byte_end":14661765,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Mutex, MutexGuard};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661770,"byte_end":14661811,"line_start":755,"line_end":755,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661816,"byte_end":14661819,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ async fn unlock_and_relock<'l>(guard: MutexGuard<'l, u32>) -> MutexGuard<'l, u32> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661824,"byte_end":14661911,"line_start":757,"line_end":757,"column_start":5,"column_end":92}},{"value":"/     println!(\"1. contains: {:?}\", *guard);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661916,"byte_end":14661962,"line_start":758,"line_end":758,"column_start":5,"column_end":51}},{"value":"/     let mutex = MutexGuard::mutex(&guard);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14661967,"byte_end":14662013,"line_start":759,"line_end":759,"column_start":5,"column_end":51}},{"value":"/     drop(guard);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662018,"byte_end":14662038,"line_start":760,"line_end":760,"column_start":5,"column_end":25}},{"value":"/     let guard = mutex.lock().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662043,"byte_end":14662082,"line_start":761,"line_end":761,"column_start":5,"column_end":44}},{"value":"/     println!(\"2. contains: {:?}\", *guard);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662087,"byte_end":14662133,"line_start":762,"line_end":762,"column_start":5,"column_end":51}},{"value":"/     guard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662138,"byte_end":14662151,"line_start":763,"line_end":763,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662156,"byte_end":14662161,"line_start":764,"line_end":764,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662166,"byte_end":14662171,"line_start":765,"line_end":765,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662176,"byte_end":14662196,"line_start":766,"line_end":766,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662201,"byte_end":14662224,"line_start":767,"line_end":767,"column_start":5,"column_end":28}},{"value":"/ #     let mutex = Mutex::new(0u32);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662229,"byte_end":14662268,"line_start":768,"line_end":768,"column_start":5,"column_end":44}},{"value":"/ #     let guard = mutex.lock().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662273,"byte_end":14662314,"line_start":769,"line_end":769,"column_start":5,"column_end":46}},{"value":"/ #     let _guard = unlock_and_relock(guard).await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662319,"byte_end":14662373,"line_start":770,"line_end":770,"column_start":5,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662378,"byte_end":14662385,"line_start":771,"line_end":771,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662390,"byte_end":14662397,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662402,"byte_end":14662411,"line_start":773,"line_end":773,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662539,"byte_end":14662543,"line_start":780,"line_end":780,"column_start":8,"column_end":12},"name":"drop","qualname":"<MutexGuard as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662917,"byte_end":14662922,"line_start":794,"line_end":794,"column_start":8,"column_end":13},"name":"deref","qualname":"<MutexGuard as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ Self::Target","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663053,"byte_end":14663062,"line_start":800,"line_end":800,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<MutexGuard as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut Self::Target","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663220,"byte_end":14663223,"line_start":806,"line_end":806,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MutexGuard as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663396,"byte_end":14663399,"line_start":812,"line_end":812,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MutexGuard as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664374,"byte_end":14664379,"line_start":843,"line_end":843,"column_start":12,"column_end":17},"name":"mutex","qualname":"<OwnedMutexGuard<T>>::mutex","value":"fn mutex<'_>(&'_ Self) -> &'_ Arc<Mutex<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the original `Arc<Mutex>`.","sig":null,"attributes":[{"value":"/ Returns a reference to the original `Arc<Mutex>`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663573,"byte_end":14663626,"line_start":820,"line_end":820,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663631,"byte_end":14663634,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663639,"byte_end":14663646,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663651,"byte_end":14663674,"line_start":823,"line_end":823,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{Mutex, OwnedMutexGuard};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663679,"byte_end":14663725,"line_start":824,"line_end":824,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663730,"byte_end":14663733,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ async fn unlock_and_relock(guard: OwnedMutexGuard<u32>) -> OwnedMutexGuard<u32> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663738,"byte_end":14663823,"line_start":826,"line_end":826,"column_start":5,"column_end":90}},{"value":"/     println!(\"1. contains: {:?}\", *guard);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663828,"byte_end":14663874,"line_start":827,"line_end":827,"column_start":5,"column_end":51}},{"value":"/     let mutex: Arc<Mutex<u32>> = OwnedMutexGuard::mutex(&guard).clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663879,"byte_end":14663955,"line_start":828,"line_end":828,"column_start":5,"column_end":81}},{"value":"/     drop(guard);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663960,"byte_end":14663980,"line_start":829,"line_end":829,"column_start":5,"column_end":25}},{"value":"/     let guard = mutex.lock_owned().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663985,"byte_end":14664030,"line_start":830,"line_end":830,"column_start":5,"column_end":50}},{"value":"/     println!(\"2. contains: {:?}\", *guard);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664035,"byte_end":14664081,"line_start":831,"line_end":831,"column_start":5,"column_end":51}},{"value":"/     guard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664086,"byte_end":14664099,"line_start":832,"line_end":832,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664104,"byte_end":14664109,"line_start":833,"line_end":833,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664114,"byte_end":14664119,"line_start":834,"line_end":834,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664124,"byte_end":14664144,"line_start":835,"line_end":835,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664149,"byte_end":14664172,"line_start":836,"line_end":836,"column_start":5,"column_end":28}},{"value":"/ #     let mutex = Arc::new(Mutex::new(0u32));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664177,"byte_end":14664226,"line_start":837,"line_end":837,"column_start":5,"column_end":54}},{"value":"/ #     let guard = mutex.lock_owned().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664231,"byte_end":14664278,"line_start":838,"line_end":838,"column_start":5,"column_end":52}},{"value":"/ #     unlock_and_relock(guard).await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664283,"byte_end":14664324,"line_start":839,"line_end":839,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664329,"byte_end":14664336,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664341,"byte_end":14664348,"line_start":841,"line_end":841,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664353,"byte_end":14664362,"line_start":842,"line_end":842,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664494,"byte_end":14664498,"line_start":849,"line_end":849,"column_start":8,"column_end":12},"name":"drop","qualname":"<OwnedMutexGuard<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664872,"byte_end":14664877,"line_start":863,"line_end":863,"column_start":8,"column_end":13},"name":"deref","qualname":"<OwnedMutexGuard<T> as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ Self::Target","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14665009,"byte_end":14665018,"line_start":869,"line_end":869,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<OwnedMutexGuard<T> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut Self::Target","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14665177,"byte_end":14665180,"line_start":875,"line_end":875,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OwnedMutexGuard<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14665354,"byte_end":14665357,"line_start":881,"line_end":881,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OwnedMutexGuard<T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14666009,"byte_end":14666012,"line_start":898,"line_end":898,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"fn map<U, F>(Self, F) -> MappedMutexGuard where F: for<'_> FnOnce(&'_ mut T)\n-> &'_ mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`MappedMutexGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new [`MappedMutexGuard`] for a component of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14665541,"byte_end":14665613,"line_start":889,"line_end":889,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14665618,"byte_end":14665621,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MappedMutexGuard`] passed in already locked the mutex.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14665626,"byte_end":14665720,"line_start":891,"line_end":891,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14665725,"byte_end":14665728,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MappedMutexGuard::map(...)`. A","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14665733,"byte_end":14665824,"line_start":893,"line_end":893,"column_start":5,"column_end":96}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14665829,"byte_end":14665921,"line_start":894,"line_end":894,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14665926,"byte_end":14665929,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14665934,"byte_end":14665983,"line_start":896,"line_end":896,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14665988,"byte_end":14665997,"line_start":897,"line_end":897,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14666891,"byte_end":14666898,"line_start":922,"line_end":922,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MappedMutexGuard>::try_map","value":"fn try_map<U, F>(Self, F) -> Result<MappedMutexGuard, Self> where\nF: for<'_> FnOnce(&'_ mut T) -> Option<&'_ mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The\n original guard is returned if the closure returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14666338,"byte_end":14666425,"line_start":912,"line_end":912,"column_start":5,"column_end":92}},{"value":"/ original guard is returned if the closure returns `None`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14666430,"byte_end":14666491,"line_start":913,"line_end":913,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14666496,"byte_end":14666499,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MappedMutexGuard`] passed in already locked the mutex.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14666504,"byte_end":14666598,"line_start":915,"line_end":915,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14666603,"byte_end":14666606,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MappedMutexGuard::try_map(...)`. A","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14666611,"byte_end":14666706,"line_start":917,"line_end":917,"column_start":5,"column_end":100}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14666711,"byte_end":14666803,"line_start":918,"line_end":918,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14666808,"byte_end":14666811,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14666816,"byte_end":14666865,"line_start":920,"line_end":920,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14666870,"byte_end":14666879,"line_start":921,"line_end":921,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14667398,"byte_end":14667402,"line_start":941,"line_end":941,"column_start":8,"column_end":12},"name":"drop","qualname":"<MappedMutexGuard as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14667535,"byte_end":14667540,"line_start":948,"line_end":948,"column_start":8,"column_end":13},"name":"deref","qualname":"<MappedMutexGuard as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ Self::Target","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14667673,"byte_end":14667682,"line_start":954,"line_end":954,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<MappedMutexGuard as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut Self::Target","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2139},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14667842,"byte_end":14667845,"line_start":960,"line_end":960,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MappedMutexGuard as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2143},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14668028,"byte_end":14668031,"line_start":966,"line_end":966,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MappedMutexGuard as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3488},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674929,"byte_end":14674935,"line_start":199,"line_end":199,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":3489},{"krate":0,"index":3490}],"decl_id":null,"docs":" Notifies a single task to wake up.","sig":null,"attributes":[{"value":"/ Notifies a single task to wake up.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14668953,"byte_end":14668991,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14668992,"byte_end":14668995,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14668996,"byte_end":14669072,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14669073,"byte_end":14669153,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14669154,"byte_end":14669195,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14669196,"byte_end":14669199,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A `Notify` can be thought of as a [`Semaphore`] starting with 0 permits. The","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14669200,"byte_end":14669280,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ [`notified().await`] method waits for a permit to become available, and","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14669281,"byte_end":14669356,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ [`notify_one()`] sets a permit **if there currently are no available","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14669357,"byte_end":14669429,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ permits**.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14669430,"byte_end":14669444,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14669445,"byte_end":14669448,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14669449,"byte_end":14669507,"line_start":34,"line_end":34,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14669508,"byte_end":14669588,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14669589,"byte_end":14669669,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify_one()`] sets","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14669670,"byte_end":14669749,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ the permit, waking a pending task if there is one.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14669750,"byte_end":14669804,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14669805,"byte_end":14669808,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **before** `notified().await`, then the next","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14669809,"byte_end":14669885,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ call to `notified().await` will complete immediately, consuming the permit.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14669886,"byte_end":14669965,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ Any subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14669966,"byte_end":14670040,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670041,"byte_end":14670044,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **multiple** times before `notified().await`,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670045,"byte_end":14670122,"line_start":44,"line_end":44,"column_start":1,"column_end":78}},{"value":"/ only a **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670123,"byte_end":14670203,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670204,"byte_end":14670275,"line_start":46,"line_end":46,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670276,"byte_end":14670279,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670280,"byte_end":14670294,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670295,"byte_end":14670298,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670299,"byte_end":14670315,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670316,"byte_end":14670319,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670320,"byte_end":14670327,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670328,"byte_end":14670356,"line_start":53,"line_end":53,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670357,"byte_end":14670380,"line_start":54,"line_end":54,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670381,"byte_end":14670384,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670385,"byte_end":14670403,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670404,"byte_end":14670425,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670426,"byte_end":14670471,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670472,"byte_end":14670509,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670510,"byte_end":14670513,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670514,"byte_end":14670560,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670561,"byte_end":14670598,"line_start":62,"line_end":62,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670599,"byte_end":14670645,"line_start":63,"line_end":63,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670646,"byte_end":14670657,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670658,"byte_end":14670661,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670662,"byte_end":14670703,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/     notify.notify_one();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670704,"byte_end":14670732,"line_start":67,"line_end":67,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670733,"byte_end":14670736,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     // Wait for task to receive notification.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670737,"byte_end":14670786,"line_start":69,"line_end":69,"column_start":1,"column_end":50}},{"value":"/     handle.await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670787,"byte_end":14670817,"line_start":70,"line_end":70,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670818,"byte_end":14670823,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670824,"byte_end":14670831,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670832,"byte_end":14670835,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Unbound multi-producer single-consumer (mpsc) channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670836,"byte_end":14670894,"line_start":74,"line_end":74,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670895,"byte_end":14670898,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ No wakeups can be lost when using this channel because the call to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670899,"byte_end":14670969,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"/ `notify_one()` will store a permit in the `Notify`, which the following call","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14670970,"byte_end":14671050,"line_start":77,"line_end":77,"column_start":1,"column_end":81}},{"value":"/ to `notified()` will consume.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671051,"byte_end":14671084,"line_start":78,"line_end":78,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671085,"byte_end":14671088,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671089,"byte_end":14671096,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671097,"byte_end":14671125,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671126,"byte_end":14671129,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671130,"byte_end":14671165,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671166,"byte_end":14671191,"line_start":84,"line_end":84,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671192,"byte_end":14671195,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671196,"byte_end":14671219,"line_start":86,"line_end":86,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671220,"byte_end":14671255,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671256,"byte_end":14671279,"line_start":88,"line_end":88,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671280,"byte_end":14671285,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671286,"byte_end":14671289,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671290,"byte_end":14671314,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671315,"byte_end":14671353,"line_start":92,"line_end":92,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671354,"byte_end":14671393,"line_start":93,"line_end":93,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671394,"byte_end":14671428,"line_start":94,"line_end":94,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671429,"byte_end":14671432,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671433,"byte_end":14671488,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify_one();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671489,"byte_end":14671526,"line_start":97,"line_end":97,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671527,"byte_end":14671536,"line_start":98,"line_end":98,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671537,"byte_end":14671540,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/     // This is a single-consumer channel, so several concurrent calls to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671541,"byte_end":14671617,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/     // `recv` are not allowed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671618,"byte_end":14671652,"line_start":101,"line_end":101,"column_start":1,"column_end":35}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671653,"byte_end":14671692,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671693,"byte_end":14671711,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671712,"byte_end":14671743,"line_start":104,"line_end":104,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671744,"byte_end":14671822,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671823,"byte_end":14671856,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671857,"byte_end":14671874,"line_start":107,"line_end":107,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671875,"byte_end":14671878,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671879,"byte_end":14671929,"line_start":109,"line_end":109,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671930,"byte_end":14671975,"line_start":110,"line_end":110,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671976,"byte_end":14671989,"line_start":111,"line_end":111,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14671990,"byte_end":14671999,"line_start":112,"line_end":112,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672000,"byte_end":14672005,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672006,"byte_end":14672013,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672014,"byte_end":14672017,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Unbound multi-producer multi-consumer (mpmc) channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672018,"byte_end":14672075,"line_start":116,"line_end":116,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672076,"byte_end":14672079,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ The call to [`enable`] is important because otherwise if you have two","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672080,"byte_end":14672153,"line_start":118,"line_end":118,"column_start":1,"column_end":74}},{"value":"/ calls to `recv` and two calls to `send` in parallel, the following could","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672154,"byte_end":14672230,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ happen:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672231,"byte_end":14672242,"line_start":120,"line_end":120,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672243,"byte_end":14672246,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/  1. Both calls to `try_recv` return `None`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672247,"byte_end":14672294,"line_start":122,"line_end":122,"column_start":1,"column_end":48}},{"value":"/  2. Both new elements are added to the vector.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672295,"byte_end":14672345,"line_start":123,"line_end":123,"column_start":1,"column_end":51}},{"value":"/  3. The `notify_one` method is called twice, adding only a single","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672346,"byte_end":14672415,"line_start":124,"line_end":124,"column_start":1,"column_end":70}},{"value":"/     permit to the `Notify`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672416,"byte_end":14672447,"line_start":125,"line_end":125,"column_start":1,"column_end":32}},{"value":"/  4. Both calls to `recv` reach the `Notified` future. One of them","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672448,"byte_end":14672517,"line_start":126,"line_end":126,"column_start":1,"column_end":70}},{"value":"/     consumes the permit, and the other sleeps forever.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672518,"byte_end":14672576,"line_start":127,"line_end":127,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672577,"byte_end":14672580,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ By adding the `Notified` futures to the list by calling `enable` before","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672581,"byte_end":14672656,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/ `try_recv`, the `notify_one` calls in step three would remove the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672657,"byte_end":14672726,"line_start":130,"line_end":130,"column_start":1,"column_end":70}},{"value":"/ futures from the list and mark them notified instead of adding a permit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672727,"byte_end":14672802,"line_start":131,"line_end":131,"column_start":1,"column_end":76}},{"value":"/ to the `Notify`. This ensures that both futures are woken.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672803,"byte_end":14672865,"line_start":132,"line_end":132,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672866,"byte_end":14672869,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ Notice that this failure can only happen if there are two concurrent calls","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672870,"byte_end":14672948,"line_start":134,"line_end":134,"column_start":1,"column_end":79}},{"value":"/ to `recv`. This is why the mpsc example above does not require a call to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14672949,"byte_end":14673025,"line_start":135,"line_end":135,"column_start":1,"column_end":77}},{"value":"/ `enable`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673026,"byte_end":14673039,"line_start":136,"line_end":136,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673040,"byte_end":14673043,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673044,"byte_end":14673051,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673052,"byte_end":14673080,"line_start":139,"line_end":139,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673081,"byte_end":14673084,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673085,"byte_end":14673120,"line_start":141,"line_end":141,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673121,"byte_end":14673146,"line_start":142,"line_end":142,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673147,"byte_end":14673150,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673151,"byte_end":14673174,"line_start":144,"line_end":144,"column_start":1,"column_end":24}},{"value":"/     messages: Mutex<VecDeque<T>>,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673175,"byte_end":14673212,"line_start":145,"line_end":145,"column_start":1,"column_end":38}},{"value":"/     notify_on_sent: Notify,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673213,"byte_end":14673244,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673245,"byte_end":14673250,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673251,"byte_end":14673254,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673255,"byte_end":14673279,"line_start":149,"line_end":149,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, msg: T) {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673280,"byte_end":14673316,"line_start":150,"line_end":150,"column_start":1,"column_end":37}},{"value":"/         let mut locked_queue = self.messages.lock().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673317,"byte_end":14673382,"line_start":151,"line_end":151,"column_start":1,"column_end":66}},{"value":"/         locked_queue.push_back(msg);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673383,"byte_end":14673423,"line_start":152,"line_end":152,"column_start":1,"column_end":41}},{"value":"/         drop(locked_queue);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673424,"byte_end":14673455,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673456,"byte_end":14673459,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         // Send a notification to one of the calls currently","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673460,"byte_end":14673524,"line_start":155,"line_end":155,"column_start":1,"column_end":65}},{"value":"/         // waiting in a call to `recv`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673525,"byte_end":14673568,"line_start":156,"line_end":156,"column_start":1,"column_end":44}},{"value":"/         self.notify_on_sent.notify_one();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673569,"byte_end":14673614,"line_start":157,"line_end":157,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673615,"byte_end":14673624,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673625,"byte_end":14673628,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     pub fn try_recv(&self) -> Option<T> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673629,"byte_end":14673674,"line_start":160,"line_end":160,"column_start":1,"column_end":46}},{"value":"/         let mut locked_queue = self.messages.lock().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673675,"byte_end":14673740,"line_start":161,"line_end":161,"column_start":1,"column_end":66}},{"value":"/         locked_queue.pop_front()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673741,"byte_end":14673777,"line_start":162,"line_end":162,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673778,"byte_end":14673787,"line_start":163,"line_end":163,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673788,"byte_end":14673791,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673792,"byte_end":14673831,"line_start":165,"line_end":165,"column_start":1,"column_end":40}},{"value":"/         let future = self.notify_on_sent.notified();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673832,"byte_end":14673888,"line_start":166,"line_end":166,"column_start":1,"column_end":57}},{"value":"/         tokio::pin!(future);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673889,"byte_end":14673921,"line_start":167,"line_end":167,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673922,"byte_end":14673925,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673926,"byte_end":14673944,"line_start":169,"line_end":169,"column_start":1,"column_end":19}},{"value":"/             // Make sure that no wakeup is lost if we get","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14673945,"byte_end":14674006,"line_start":170,"line_end":170,"column_start":1,"column_end":62}},{"value":"/             // `None` from `try_recv`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674007,"byte_end":14674049,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/             future.as_mut().enable();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674050,"byte_end":14674091,"line_start":172,"line_end":172,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674092,"byte_end":14674095,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/             if let Some(msg) = self.try_recv() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674096,"byte_end":14674148,"line_start":174,"line_end":174,"column_start":1,"column_end":53}},{"value":"/                 return msg;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674149,"byte_end":14674180,"line_start":175,"line_end":175,"column_start":1,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674181,"byte_end":14674198,"line_start":176,"line_end":176,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674199,"byte_end":14674202,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/             // Wait for a call to `notify_one`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674203,"byte_end":14674254,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"/             //","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674255,"byte_end":14674273,"line_start":179,"line_end":179,"column_start":1,"column_end":19}},{"value":"/             // This uses `.as_mut()` to avoid consuming the future,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674274,"byte_end":14674345,"line_start":180,"line_end":180,"column_start":1,"column_end":72}},{"value":"/             // which lets us call `Pin::set` below.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674346,"byte_end":14674401,"line_start":181,"line_end":181,"column_start":1,"column_end":56}},{"value":"/             future.as_mut().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674402,"byte_end":14674440,"line_start":182,"line_end":182,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674441,"byte_end":14674444,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/             // Reset the future in case another call to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674445,"byte_end":14674504,"line_start":184,"line_end":184,"column_start":1,"column_end":60}},{"value":"/             // `try_recv` got the message before us.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674505,"byte_end":14674561,"line_start":185,"line_end":185,"column_start":1,"column_end":57}},{"value":"/             future.set(self.notify_on_sent.notified());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674562,"byte_end":14674621,"line_start":186,"line_end":186,"column_start":1,"column_end":60}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674622,"byte_end":14674635,"line_start":187,"line_end":187,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674636,"byte_end":14674645,"line_start":188,"line_end":188,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674646,"byte_end":14674651,"line_start":189,"line_end":189,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674652,"byte_end":14674659,"line_start":190,"line_end":190,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674660,"byte_end":14674663,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674664,"byte_end":14674693,"line_start":192,"line_end":192,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674694,"byte_end":14674735,"line_start":193,"line_end":193,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674736,"byte_end":14674780,"line_start":194,"line_end":194,"column_start":1,"column_end":45}},{"value":"/ [`notify_one()`]: Notify::notify_one()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674781,"byte_end":14674823,"line_start":195,"line_end":195,"column_start":1,"column_end":43}},{"value":"/ [`enable`]: Notified::enable()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674824,"byte_end":14674858,"line_start":196,"line_end":196,"column_start":1,"column_end":35}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14674859,"byte_end":14674900,"line_start":197,"line_end":197,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":3512},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14676116,"byte_end":14676124,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"Notified","qualname":"::sync::notify::Notified","value":"Notified {  }","parent":null,"children":[{"krate":0,"index":3514},{"krate":0,"index":3515},{"krate":0,"index":3516}],"decl_id":null,"docs":" Future returned from [`Notify::notified()`].","sig":null,"attributes":[{"value":"/ Future returned from [`Notify::notified()`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14675915,"byte_end":14675963,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14675964,"byte_end":14675967,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ This future is fused, so once it has completed, any future calls to poll","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14675968,"byte_end":14676044,"line_start":241,"line_end":241,"column_start":1,"column_end":77}},{"value":"/ will immediately return `Poll::Ready`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14676045,"byte_end":14676087,"line_start":242,"line_end":242,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14677586,"byte_end":14677589,"line_start":308,"line_end":308,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14677382,"byte_end":14677438,"line_start":299,"line_end":299,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14677443,"byte_end":14677446,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14677451,"byte_end":14677465,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14677470,"byte_end":14677473,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14677478,"byte_end":14677485,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14677490,"byte_end":14677518,"line_start":304,"line_end":304,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14677523,"byte_end":14677526,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14677531,"byte_end":14677562,"line_start":306,"line_end":306,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14677567,"byte_end":14677574,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679966,"byte_end":14679974,"line_start":383,"line_end":383,"column_start":12,"column_end":20},"name":"notified","qualname":"<Notify>::notified","value":"fn notified<'_>(&'_ Self) -> Notified","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14678243,"byte_end":14678271,"line_start":333,"line_end":333,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14678276,"byte_end":14678279,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14678284,"byte_end":14678302,"line_start":335,"line_end":335,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14678307,"byte_end":14678310,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14678315,"byte_end":14678328,"line_start":337,"line_end":337,"column_start":5,"column_end":18}},{"value":"/ async fn notified(&self);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14678333,"byte_end":14678362,"line_start":338,"line_end":338,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14678367,"byte_end":14678374,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14678379,"byte_end":14678382,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14678387,"byte_end":14678463,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify_one()`], then `notified().await` will complete","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14678468,"byte_end":14678546,"line_start":342,"line_end":342,"column_start":5,"column_end":83}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14678551,"byte_end":14678626,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify_one()`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14678631,"byte_end":14678704,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14678709,"byte_end":14678712,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ The `Notified` future is not guaranteed to receive wakeups from calls to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14678717,"byte_end":14678793,"line_start":346,"line_end":346,"column_start":5,"column_end":81}},{"value":"/ `notify_one()` if it has not yet been polled. See the documentation for","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14678798,"byte_end":14678873,"line_start":347,"line_end":347,"column_start":5,"column_end":80}},{"value":"/ [`Notified::enable()`] for more details.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14678878,"byte_end":14678922,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14678927,"byte_end":14678930,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The `Notified` future is guaranteed to receive wakeups from","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14678935,"byte_end":14678998,"line_start":350,"line_end":350,"column_start":5,"column_end":68}},{"value":"/ `notify_waiters()` as soon as it has been created, even if it has not","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679003,"byte_end":14679076,"line_start":351,"line_end":351,"column_start":5,"column_end":78}},{"value":"/ yet been polled.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679081,"byte_end":14679101,"line_start":352,"line_end":352,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679106,"byte_end":14679109,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ [`notify_one()`]: Notify::notify_one","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679114,"byte_end":14679154,"line_start":354,"line_end":354,"column_start":5,"column_end":45}},{"value":"/ [`Notified::enable()`]: Notified::enable","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679159,"byte_end":14679203,"line_start":355,"line_end":355,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679208,"byte_end":14679211,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679216,"byte_end":14679235,"line_start":357,"line_end":357,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679240,"byte_end":14679243,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute notifications in the order","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679248,"byte_end":14679324,"line_start":359,"line_end":359,"column_start":5,"column_end":81}},{"value":"/ they were requested. Cancelling a call to `notified` makes you lose your","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679329,"byte_end":14679405,"line_start":360,"line_end":360,"column_start":5,"column_end":81}},{"value":"/ place in the queue.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679410,"byte_end":14679433,"line_start":361,"line_end":361,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679438,"byte_end":14679441,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679446,"byte_end":14679460,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679465,"byte_end":14679468,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679473,"byte_end":14679480,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679485,"byte_end":14679513,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679518,"byte_end":14679541,"line_start":367,"line_end":367,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679546,"byte_end":14679549,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679554,"byte_end":14679572,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679577,"byte_end":14679598,"line_start":370,"line_end":370,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679603,"byte_end":14679648,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679653,"byte_end":14679690,"line_start":372,"line_end":372,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679695,"byte_end":14679698,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679703,"byte_end":14679736,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679741,"byte_end":14679778,"line_start":375,"line_end":375,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679783,"byte_end":14679829,"line_start":376,"line_end":376,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679834,"byte_end":14679845,"line_start":377,"line_end":377,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679850,"byte_end":14679853,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679858,"byte_end":14679899,"line_start":379,"line_end":379,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679904,"byte_end":14679932,"line_start":380,"line_end":380,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679937,"byte_end":14679942,"line_start":381,"line_end":381,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14679947,"byte_end":14679954,"line_start":382,"line_end":382,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2224},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681751,"byte_end":14681761,"line_start":435,"line_end":435,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Notify>::notify_one","value":"fn notify_one<'_>(&'_ Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task.","sig":null,"attributes":[{"value":"/ Notifies a waiting task.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14680499,"byte_end":14680527,"line_start":399,"line_end":399,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14680532,"byte_end":14680535,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14680540,"byte_end":14680611,"line_start":401,"line_end":401,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14680616,"byte_end":14680684,"line_start":402,"line_end":402,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14680689,"byte_end":14680765,"line_start":403,"line_end":403,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify_one()`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14680770,"byte_end":14680815,"line_start":404,"line_end":404,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14680820,"byte_end":14680823,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14680828,"byte_end":14680902,"line_start":406,"line_end":406,"column_start":5,"column_end":79}},{"value":"/ `notify_one` will result in a single permit being stored. The next call to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14680907,"byte_end":14680985,"line_start":407,"line_end":407,"column_start":5,"column_end":83}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14680990,"byte_end":14681062,"line_start":408,"line_end":408,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681067,"byte_end":14681081,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681086,"byte_end":14681089,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681094,"byte_end":14681138,"line_start":411,"line_end":411,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681143,"byte_end":14681146,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681151,"byte_end":14681165,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681170,"byte_end":14681173,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681178,"byte_end":14681185,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681190,"byte_end":14681218,"line_start":416,"line_end":416,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681223,"byte_end":14681246,"line_start":417,"line_end":417,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681251,"byte_end":14681254,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681259,"byte_end":14681277,"line_start":419,"line_end":419,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681282,"byte_end":14681303,"line_start":420,"line_end":420,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681308,"byte_end":14681353,"line_start":421,"line_end":421,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681358,"byte_end":14681395,"line_start":422,"line_end":422,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681400,"byte_end":14681403,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681408,"byte_end":14681441,"line_start":424,"line_end":424,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681446,"byte_end":14681483,"line_start":425,"line_end":425,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681488,"byte_end":14681534,"line_start":426,"line_end":426,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681539,"byte_end":14681550,"line_start":427,"line_end":427,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681555,"byte_end":14681558,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681563,"byte_end":14681604,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681609,"byte_end":14681637,"line_start":430,"line_end":430,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681642,"byte_end":14681647,"line_start":431,"line_end":431,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14681652,"byte_end":14681659,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14684097,"byte_end":14684111,"line_start":501,"line_end":501,"column_start":12,"column_end":26},"name":"notify_waiters","qualname":"<Notify>::notify_waiters","value":"fn notify_waiters<'_>(&'_ Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies all waiting tasks.","sig":null,"attributes":[{"value":"/ Notifies all waiting tasks.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683004,"byte_end":14683035,"line_start":469,"line_end":469,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683040,"byte_end":14683043,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Unlike with","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683048,"byte_end":14683118,"line_start":471,"line_end":471,"column_start":5,"column_end":75}},{"value":"/ `notify_one()`, no permit is stored to be used by the next call to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683123,"byte_end":14683193,"line_start":472,"line_end":472,"column_start":5,"column_end":75}},{"value":"/ `notified().await`. The purpose of this method is to notify all","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683198,"byte_end":14683265,"line_start":473,"line_end":473,"column_start":5,"column_end":72}},{"value":"/ already registered waiters. Registering for notification is done by","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683270,"byte_end":14683341,"line_start":474,"line_end":474,"column_start":5,"column_end":76}},{"value":"/ acquiring an instance of the `Notified` future via calling `notified()`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683346,"byte_end":14683422,"line_start":475,"line_end":475,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683427,"byte_end":14683430,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683435,"byte_end":14683449,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683454,"byte_end":14683457,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683462,"byte_end":14683469,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683474,"byte_end":14683502,"line_start":480,"line_end":480,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683507,"byte_end":14683530,"line_start":481,"line_end":481,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683535,"byte_end":14683538,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683543,"byte_end":14683561,"line_start":483,"line_end":483,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683566,"byte_end":14683587,"line_start":484,"line_end":484,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683592,"byte_end":14683637,"line_start":485,"line_end":485,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683642,"byte_end":14683679,"line_start":486,"line_end":486,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683684,"byte_end":14683687,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/     let notified1 = notify.notified();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683692,"byte_end":14683734,"line_start":488,"line_end":488,"column_start":5,"column_end":47}},{"value":"/     let notified2 = notify.notified();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683739,"byte_end":14683781,"line_start":489,"line_end":489,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683786,"byte_end":14683789,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683794,"byte_end":14683840,"line_start":491,"line_end":491,"column_start":5,"column_end":51}},{"value":"/         println!(\"sending notifications\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683845,"byte_end":14683891,"line_start":492,"line_end":492,"column_start":5,"column_end":51}},{"value":"/         notify2.notify_waiters();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683896,"byte_end":14683933,"line_start":493,"line_end":493,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683938,"byte_end":14683949,"line_start":494,"line_end":494,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683954,"byte_end":14683957,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/     notified1.await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683962,"byte_end":14683986,"line_start":496,"line_end":496,"column_start":5,"column_end":29}},{"value":"/     notified2.await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14683991,"byte_end":14684015,"line_start":497,"line_end":497,"column_start":5,"column_end":29}},{"value":"/     println!(\"received notifications\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14684020,"byte_end":14684063,"line_start":498,"line_end":498,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14684068,"byte_end":14684073,"line_start":499,"line_end":499,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14684078,"byte_end":14684085,"line_start":500,"line_end":500,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14686230,"byte_end":14686237,"line_start":564,"line_end":564,"column_start":8,"column_end":15},"name":"default","qualname":"<Notify as std::default::Default>::default","value":"fn default() -> Notify","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14692603,"byte_end":14692609,"line_start":723,"line_end":723,"column_start":12,"column_end":18},"name":"enable","qualname":"<Notified>::enable","value":"fn enable<'_>(Pin<&'_ mut Self>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds this future to the list of futures that are ready to receive\n wakeups from calls to [`notify_one`].","sig":null,"attributes":[{"value":"/ Adds this future to the list of futures that are ready to receive","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688149,"byte_end":14688218,"line_start":619,"line_end":619,"column_start":5,"column_end":74}},{"value":"/ wakeups from calls to [`notify_one`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688223,"byte_end":14688264,"line_start":620,"line_end":620,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688269,"byte_end":14688272,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ Polling the future also adds it to the list, so this method should only","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688277,"byte_end":14688352,"line_start":622,"line_end":622,"column_start":5,"column_end":80}},{"value":"/ be used if you want to add the future to the list before the first call","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688357,"byte_end":14688432,"line_start":623,"line_end":623,"column_start":5,"column_end":80}},{"value":"/ to `poll`. (In fact, this method is equivalent to calling `poll` except","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688437,"byte_end":14688512,"line_start":624,"line_end":624,"column_start":5,"column_end":80}},{"value":"/ that no `Waker` is registered.)","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688517,"byte_end":14688552,"line_start":625,"line_end":625,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688557,"byte_end":14688560,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ This has no effect on notifications sent using [`notify_waiters`], which","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688565,"byte_end":14688641,"line_start":627,"line_end":627,"column_start":5,"column_end":81}},{"value":"/ are received as long as they happen after the creation of the `Notified`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688646,"byte_end":14688722,"line_start":628,"line_end":628,"column_start":5,"column_end":81}},{"value":"/ regardless of whether `enable` or `poll` has been called.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688727,"byte_end":14688788,"line_start":629,"line_end":629,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688793,"byte_end":14688796,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ This method returns true if the `Notified` is ready. This happens in the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688801,"byte_end":14688877,"line_start":631,"line_end":631,"column_start":5,"column_end":81}},{"value":"/ following situations:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688882,"byte_end":14688907,"line_start":632,"line_end":632,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688912,"byte_end":14688915,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/  1. The `notify_waiters` method was called between the creation of the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688920,"byte_end":14688994,"line_start":634,"line_end":634,"column_start":5,"column_end":79}},{"value":"/     `Notified` and the call to this method.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688999,"byte_end":14689046,"line_start":635,"line_end":635,"column_start":5,"column_end":52}},{"value":"/  2. This is the first call to `enable` or `poll` on this future, and the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689051,"byte_end":14689127,"line_start":636,"line_end":636,"column_start":5,"column_end":81}},{"value":"/     `Notify` was holding a permit from a previous call to `notify_one`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689132,"byte_end":14689207,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/     The call consumes the permit in that case.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689212,"byte_end":14689262,"line_start":638,"line_end":638,"column_start":5,"column_end":55}},{"value":"/  3. The future has previously been enabled or polled, and it has since","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689267,"byte_end":14689341,"line_start":639,"line_end":639,"column_start":5,"column_end":79}},{"value":"/     then been marked ready by either consuming a permit from the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689346,"byte_end":14689414,"line_start":640,"line_end":640,"column_start":5,"column_end":73}},{"value":"/     `Notify`, or by a call to `notify_one` or `notify_waiters` that","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689419,"byte_end":14689490,"line_start":641,"line_end":641,"column_start":5,"column_end":76}},{"value":"/     removed it from the list of futures ready to receive wakeups.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689495,"byte_end":14689564,"line_start":642,"line_end":642,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689569,"byte_end":14689572,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ If this method returns true, any future calls to poll on the same future","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689577,"byte_end":14689653,"line_start":644,"line_end":644,"column_start":5,"column_end":81}},{"value":"/ will immediately return `Poll::Ready`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689658,"byte_end":14689700,"line_start":645,"line_end":645,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689705,"byte_end":14689708,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689713,"byte_end":14689727,"line_start":647,"line_end":647,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689732,"byte_end":14689735,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ Unbound multi-producer multi-consumer (mpmc) channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689740,"byte_end":14689797,"line_start":649,"line_end":649,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689802,"byte_end":14689805,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ The call to `enable` is important because otherwise if you have two","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689810,"byte_end":14689881,"line_start":651,"line_end":651,"column_start":5,"column_end":76}},{"value":"/ calls to `recv` and two calls to `send` in parallel, the following could","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689886,"byte_end":14689962,"line_start":652,"line_end":652,"column_start":5,"column_end":81}},{"value":"/ happen:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689967,"byte_end":14689978,"line_start":653,"line_end":653,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689983,"byte_end":14689986,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/  1. Both calls to `try_recv` return `None`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14689991,"byte_end":14690038,"line_start":655,"line_end":655,"column_start":5,"column_end":52}},{"value":"/  2. Both new elements are added to the vector.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690043,"byte_end":14690093,"line_start":656,"line_end":656,"column_start":5,"column_end":55}},{"value":"/  3. The `notify_one` method is called twice, adding only a single","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690098,"byte_end":14690167,"line_start":657,"line_end":657,"column_start":5,"column_end":74}},{"value":"/     permit to the `Notify`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690172,"byte_end":14690203,"line_start":658,"line_end":658,"column_start":5,"column_end":36}},{"value":"/  4. Both calls to `recv` reach the `Notified` future. One of them","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690208,"byte_end":14690277,"line_start":659,"line_end":659,"column_start":5,"column_end":74}},{"value":"/     consumes the permit, and the other sleeps forever.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690282,"byte_end":14690340,"line_start":660,"line_end":660,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690345,"byte_end":14690348,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ By adding the `Notified` futures to the list by calling `enable` before","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690353,"byte_end":14690428,"line_start":662,"line_end":662,"column_start":5,"column_end":80}},{"value":"/ `try_recv`, the `notify_one` calls in step three would remove the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690433,"byte_end":14690502,"line_start":663,"line_end":663,"column_start":5,"column_end":74}},{"value":"/ futures from the list and mark them notified instead of adding a permit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690507,"byte_end":14690582,"line_start":664,"line_end":664,"column_start":5,"column_end":80}},{"value":"/ to the `Notify`. This ensures that both futures are woken.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690587,"byte_end":14690649,"line_start":665,"line_end":665,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690654,"byte_end":14690657,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690662,"byte_end":14690669,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690674,"byte_end":14690702,"line_start":668,"line_end":668,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690707,"byte_end":14690710,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690715,"byte_end":14690750,"line_start":670,"line_end":670,"column_start":5,"column_end":40}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690755,"byte_end":14690780,"line_start":671,"line_end":671,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690785,"byte_end":14690788,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ struct Channel<T> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690793,"byte_end":14690816,"line_start":673,"line_end":673,"column_start":5,"column_end":28}},{"value":"/     messages: Mutex<VecDeque<T>>,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690821,"byte_end":14690858,"line_start":674,"line_end":674,"column_start":5,"column_end":42}},{"value":"/     notify_on_sent: Notify,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690863,"byte_end":14690894,"line_start":675,"line_end":675,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690899,"byte_end":14690904,"line_start":676,"line_end":676,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690909,"byte_end":14690912,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690917,"byte_end":14690941,"line_start":678,"line_end":678,"column_start":5,"column_end":29}},{"value":"/     pub fn send(&self, msg: T) {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690946,"byte_end":14690982,"line_start":679,"line_end":679,"column_start":5,"column_end":41}},{"value":"/         let mut locked_queue = self.messages.lock().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14690987,"byte_end":14691052,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/         locked_queue.push_back(msg);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691057,"byte_end":14691097,"line_start":681,"line_end":681,"column_start":5,"column_end":45}},{"value":"/         drop(locked_queue);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691102,"byte_end":14691133,"line_start":682,"line_end":682,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691138,"byte_end":14691141,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/         // Send a notification to one of the calls currently","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691146,"byte_end":14691210,"line_start":684,"line_end":684,"column_start":5,"column_end":69}},{"value":"/         // waiting in a call to `recv`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691215,"byte_end":14691258,"line_start":685,"line_end":685,"column_start":5,"column_end":48}},{"value":"/         self.notify_on_sent.notify_one();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691263,"byte_end":14691308,"line_start":686,"line_end":686,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691313,"byte_end":14691322,"line_start":687,"line_end":687,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691327,"byte_end":14691330,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/     pub fn try_recv(&self) -> Option<T> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691335,"byte_end":14691380,"line_start":689,"line_end":689,"column_start":5,"column_end":50}},{"value":"/         let mut locked_queue = self.messages.lock().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691385,"byte_end":14691450,"line_start":690,"line_end":690,"column_start":5,"column_end":70}},{"value":"/         locked_queue.pop_front()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691455,"byte_end":14691491,"line_start":691,"line_end":691,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691496,"byte_end":14691505,"line_start":692,"line_end":692,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691510,"byte_end":14691513,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691518,"byte_end":14691557,"line_start":694,"line_end":694,"column_start":5,"column_end":44}},{"value":"/         let future = self.notify_on_sent.notified();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691562,"byte_end":14691618,"line_start":695,"line_end":695,"column_start":5,"column_end":61}},{"value":"/         tokio::pin!(future);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691623,"byte_end":14691655,"line_start":696,"line_end":696,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691660,"byte_end":14691663,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/         loop {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691668,"byte_end":14691686,"line_start":698,"line_end":698,"column_start":5,"column_end":23}},{"value":"/             // Make sure that no wakeup is lost if we get","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691691,"byte_end":14691752,"line_start":699,"line_end":699,"column_start":5,"column_end":66}},{"value":"/             // `None` from `try_recv`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691757,"byte_end":14691799,"line_start":700,"line_end":700,"column_start":5,"column_end":47}},{"value":"/             future.as_mut().enable();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691804,"byte_end":14691845,"line_start":701,"line_end":701,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691850,"byte_end":14691853,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/             if let Some(msg) = self.try_recv() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691858,"byte_end":14691910,"line_start":703,"line_end":703,"column_start":5,"column_end":57}},{"value":"/                 return msg;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691915,"byte_end":14691946,"line_start":704,"line_end":704,"column_start":5,"column_end":36}},{"value":"/             }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691951,"byte_end":14691968,"line_start":705,"line_end":705,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691973,"byte_end":14691976,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/             // Wait for a call to `notify_one`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14691981,"byte_end":14692032,"line_start":707,"line_end":707,"column_start":5,"column_end":56}},{"value":"/             //","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14692037,"byte_end":14692055,"line_start":708,"line_end":708,"column_start":5,"column_end":23}},{"value":"/             // This uses `.as_mut()` to avoid consuming the future,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14692060,"byte_end":14692131,"line_start":709,"line_end":709,"column_start":5,"column_end":76}},{"value":"/             // which lets us call `Pin::set` below.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14692136,"byte_end":14692191,"line_start":710,"line_end":710,"column_start":5,"column_end":60}},{"value":"/             future.as_mut().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14692196,"byte_end":14692234,"line_start":711,"line_end":711,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14692239,"byte_end":14692242,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/             // Reset the future in case another call to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14692247,"byte_end":14692306,"line_start":713,"line_end":713,"column_start":5,"column_end":64}},{"value":"/             // `try_recv` got the message before us.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14692311,"byte_end":14692367,"line_start":714,"line_end":714,"column_start":5,"column_end":61}},{"value":"/             future.set(self.notify_on_sent.notified());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14692372,"byte_end":14692431,"line_start":715,"line_end":715,"column_start":5,"column_end":64}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14692436,"byte_end":14692449,"line_start":716,"line_end":716,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14692454,"byte_end":14692463,"line_start":717,"line_end":717,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14692468,"byte_end":14692473,"line_start":718,"line_end":718,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14692478,"byte_end":14692485,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14692490,"byte_end":14692493,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ [`notify_one`]: Notify::notify_one()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14692498,"byte_end":14692538,"line_start":721,"line_end":721,"column_start":5,"column_end":45}},{"value":"/ [`notify_waiters`]: Notify::notify_waiters()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14692543,"byte_end":14692591,"line_start":722,"line_end":722,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14699427,"byte_end":14699431,"line_start":895,"line_end":895,"column_start":8,"column_end":12},"name":"poll","qualname":"<Notified as std::future::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<()>","parent":{"krate":2,"index":13761},"children":[],"decl_id":{"krate":2,"index":13763},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14699580,"byte_end":14699584,"line_start":901,"line_end":901,"column_start":8,"column_end":12},"name":"drop","qualname":"<Notified as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2251},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":2252},{"krate":0,"index":2255},{"krate":0,"index":2258},{"krate":0,"index":2261},{"krate":0,"index":2264},{"krate":0,"index":2267},{"krate":0,"index":2270},{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2294},{"krate":0,"index":2297},{"krate":0,"index":3530},{"krate":0,"index":3533},{"krate":0,"index":3536},{"krate":0,"index":3539},{"krate":0,"index":2300},{"krate":0,"index":2310},{"krate":0,"index":2311},{"krate":0,"index":2317},{"krate":0,"index":2320},{"krate":0,"index":3571},{"krate":0,"index":3574},{"krate":0,"index":3576},{"krate":0,"index":2331},{"krate":0,"index":2333},{"krate":0,"index":2346},{"krate":0,"index":2349},{"krate":0,"index":2354},{"krate":0,"index":2357},{"krate":0,"index":2361},{"krate":0,"index":2368},{"krate":0,"index":2370},{"krate":0,"index":2372},{"krate":0,"index":2374},{"krate":0,"index":2377},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2401}],"decl_id":null,"docs":" A one-shot channel is used for sending a single message between\n asynchronous tasks. The [`channel`] function is used to create a\n [`Sender`] and [`Receiver`] handle pair that form the channel.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/macros/cfg.rs","byte_start":30078,"byte_end":30102,"line_start":312,"line_end":312,"column_start":13,"column_end":37}},{"value":"/ A one-shot channel is used for sending a single message between","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14701920,"byte_end":14701987,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/ asynchronous tasks. The [`channel`] function is used to create a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14701988,"byte_end":14702056,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ [`Sender`] and [`Receiver`] handle pair that form the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702057,"byte_end":14702123,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702124,"byte_end":14702127,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The `Sender` handle is used by the producer to send the value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702128,"byte_end":14702194,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/ The `Receiver` handle is used by the consumer to receive the value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702195,"byte_end":14702266,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702267,"byte_end":14702270,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702271,"byte_end":14702317,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702318,"byte_end":14702321,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Since the `send` method is not async, it can be used anywhere. This includes","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702322,"byte_end":14702402,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ sending between two runtimes, and using it from non-async code.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702403,"byte_end":14702470,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702471,"byte_end":14702474,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702475,"byte_end":14702489,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702490,"byte_end":14702493,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702494,"byte_end":14702501,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702502,"byte_end":14702531,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702532,"byte_end":14702535,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702536,"byte_end":14702554,"line_start":20,"line_end":20,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702555,"byte_end":14702576,"line_start":21,"line_end":21,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702577,"byte_end":14702619,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702620,"byte_end":14702623,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702624,"byte_end":14702657,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702658,"byte_end":14702698,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702699,"byte_end":14702748,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702749,"byte_end":14702762,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702763,"byte_end":14702774,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702775,"byte_end":14702778,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702779,"byte_end":14702803,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702804,"byte_end":14702851,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702852,"byte_end":14702905,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702906,"byte_end":14702915,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702916,"byte_end":14702921,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702922,"byte_end":14702929,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702930,"byte_end":14702933,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14702934,"byte_end":14703007,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703008,"byte_end":14703033,"line_start":38,"line_end":38,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703034,"byte_end":14703037,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703038,"byte_end":14703045,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703046,"byte_end":14703075,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703076,"byte_end":14703079,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703080,"byte_end":14703098,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703099,"byte_end":14703120,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703121,"byte_end":14703170,"line_start":45,"line_end":45,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703171,"byte_end":14703174,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703175,"byte_end":14703208,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703209,"byte_end":14703230,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703231,"byte_end":14703242,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703243,"byte_end":14703246,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703247,"byte_end":14703271,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703272,"byte_end":14703323,"line_start":52,"line_end":52,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703324,"byte_end":14703377,"line_start":53,"line_end":53,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703378,"byte_end":14703387,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703388,"byte_end":14703393,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703394,"byte_end":14703401,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703402,"byte_end":14703405,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ To use a oneshot channel in a `tokio::select!` loop, add `&mut` in front of","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703406,"byte_end":14703485,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703486,"byte_end":14703502,"line_start":59,"line_end":59,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703503,"byte_end":14703506,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703507,"byte_end":14703514,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703515,"byte_end":14703544,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/ use tokio::time::{interval, sleep, Duration};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703545,"byte_end":14703594,"line_start":63,"line_end":63,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703595,"byte_end":14703598,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703599,"byte_end":14703617,"line_start":65,"line_end":65,"column_start":1,"column_end":19}},{"value":"/ # async fn _doc() {}","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703618,"byte_end":14703642,"line_start":66,"line_end":66,"column_start":1,"column_end":25}},{"value":"/ # #[tokio::main(flavor = \"current_thread\", start_paused = true)]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703643,"byte_end":14703711,"line_start":67,"line_end":67,"column_start":1,"column_end":69}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703712,"byte_end":14703733,"line_start":68,"line_end":68,"column_start":1,"column_end":22}},{"value":"/     let (send, mut recv) = oneshot::channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703734,"byte_end":14703784,"line_start":69,"line_end":69,"column_start":1,"column_end":51}},{"value":"/     let mut interval = interval(Duration::from_millis(100));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703785,"byte_end":14703849,"line_start":70,"line_end":70,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703850,"byte_end":14703853,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     # let handle =","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703854,"byte_end":14703876,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703877,"byte_end":14703910,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/         sleep(Duration::from_secs(1)).await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703911,"byte_end":14703959,"line_start":74,"line_end":74,"column_start":1,"column_end":49}},{"value":"/         send.send(\"shut down\").unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14703960,"byte_end":14704004,"line_start":75,"line_end":75,"column_start":1,"column_end":45}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704005,"byte_end":14704016,"line_start":76,"line_end":76,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704017,"byte_end":14704020,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704021,"byte_end":14704035,"line_start":78,"line_end":78,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704036,"byte_end":14704064,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"/             _ = interval.tick() => println!(\"Another 100ms\"),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704065,"byte_end":14704130,"line_start":80,"line_end":80,"column_start":1,"column_end":66}},{"value":"/             msg = &mut recv => {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704131,"byte_end":14704167,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/                 println!(\"Got message: {}\", msg.unwrap());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704168,"byte_end":14704230,"line_start":82,"line_end":82,"column_start":1,"column_end":63}},{"value":"/                 break;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704231,"byte_end":14704257,"line_start":83,"line_end":83,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704258,"byte_end":14704275,"line_start":84,"line_end":84,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704276,"byte_end":14704289,"line_start":85,"line_end":85,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704290,"byte_end":14704299,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/     # handle.await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704300,"byte_end":14704332,"line_start":87,"line_end":87,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704333,"byte_end":14704338,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704339,"byte_end":14704346,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704347,"byte_end":14704350,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ To use a `Sender` from a destructor, put it in an [`Option`] and call","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704351,"byte_end":14704424,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/ [`Option::take`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704425,"byte_end":14704446,"line_start":92,"line_end":92,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704447,"byte_end":14704450,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704451,"byte_end":14704458,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704459,"byte_end":14704488,"line_start":95,"line_end":95,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704489,"byte_end":14704492,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ struct SendOnDrop {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704493,"byte_end":14704516,"line_start":97,"line_end":97,"column_start":1,"column_end":24}},{"value":"/     sender: Option<oneshot::Sender<&'static str>>,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704517,"byte_end":14704571,"line_start":98,"line_end":98,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704572,"byte_end":14704577,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/ impl Drop for SendOnDrop {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704578,"byte_end":14704608,"line_start":100,"line_end":100,"column_start":1,"column_end":31}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704609,"byte_end":14704637,"line_start":101,"line_end":101,"column_start":1,"column_end":29}},{"value":"/         if let Some(sender) = self.sender.take() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704638,"byte_end":14704692,"line_start":102,"line_end":102,"column_start":1,"column_end":55}},{"value":"/             // Using `let _ =` to ignore send errors.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704693,"byte_end":14704750,"line_start":103,"line_end":103,"column_start":1,"column_end":58}},{"value":"/             let _ = sender.send(\"I got dropped!\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704751,"byte_end":14704805,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704806,"byte_end":14704819,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704820,"byte_end":14704829,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704830,"byte_end":14704835,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704836,"byte_end":14704839,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704840,"byte_end":14704858,"line_start":109,"line_end":109,"column_start":1,"column_end":19}},{"value":"/ # async fn _doc() {}","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704859,"byte_end":14704883,"line_start":110,"line_end":110,"column_start":1,"column_end":25}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704884,"byte_end":14704931,"line_start":111,"line_end":111,"column_start":1,"column_end":48}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704932,"byte_end":14704953,"line_start":112,"line_end":112,"column_start":1,"column_end":22}},{"value":"/     let (send, recv) = oneshot::channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14704954,"byte_end":14705000,"line_start":113,"line_end":113,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705001,"byte_end":14705004,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     let send_on_drop = SendOnDrop { sender: Some(send) };","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705005,"byte_end":14705066,"line_start":115,"line_end":115,"column_start":1,"column_end":62}},{"value":"/     drop(send_on_drop);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705067,"byte_end":14705094,"line_start":116,"line_end":116,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705095,"byte_end":14705098,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(recv.await, Ok(\"I got dropped!\"));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705099,"byte_end":14705152,"line_start":118,"line_end":118,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705153,"byte_end":14705158,"line_start":119,"line_end":119,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705159,"byte_end":14705166,"line_start":120,"line_end":120,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3530},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707601,"byte_end":14707607,"line_start":218,"line_end":218,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":3532}],"decl_id":null,"docs":" Sends a value to the associated [`Receiver`].","sig":null,"attributes":[{"value":"/ Sends a value to the associated [`Receiver`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705571,"byte_end":14705620,"line_start":136,"line_end":136,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705621,"byte_end":14705624,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ A pair of both a [`Sender`] and a [`Receiver`]  are created by the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705625,"byte_end":14705695,"line_start":138,"line_end":138,"column_start":1,"column_end":71}},{"value":"/ [`channel`](fn@channel) function.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705696,"byte_end":14705733,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705734,"byte_end":14705737,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705738,"byte_end":14705752,"line_start":141,"line_end":141,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705753,"byte_end":14705756,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705757,"byte_end":14705764,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705765,"byte_end":14705794,"line_start":144,"line_end":144,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705795,"byte_end":14705798,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705799,"byte_end":14705817,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705818,"byte_end":14705839,"line_start":147,"line_end":147,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705840,"byte_end":14705882,"line_start":148,"line_end":148,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705883,"byte_end":14705886,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705887,"byte_end":14705920,"line_start":150,"line_end":150,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705921,"byte_end":14705961,"line_start":151,"line_end":151,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14705962,"byte_end":14706011,"line_start":152,"line_end":152,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706012,"byte_end":14706025,"line_start":153,"line_end":153,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706026,"byte_end":14706037,"line_start":154,"line_end":154,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706038,"byte_end":14706041,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706042,"byte_end":14706066,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706067,"byte_end":14706114,"line_start":157,"line_end":157,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706115,"byte_end":14706168,"line_start":158,"line_end":158,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706169,"byte_end":14706178,"line_start":159,"line_end":159,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706179,"byte_end":14706184,"line_start":160,"line_end":160,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706185,"byte_end":14706192,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706193,"byte_end":14706196,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706197,"byte_end":14706270,"line_start":163,"line_end":163,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706271,"byte_end":14706296,"line_start":164,"line_end":164,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706297,"byte_end":14706300,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706301,"byte_end":14706308,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706309,"byte_end":14706338,"line_start":167,"line_end":167,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706339,"byte_end":14706342,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706343,"byte_end":14706361,"line_start":169,"line_end":169,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706362,"byte_end":14706383,"line_start":170,"line_end":170,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706384,"byte_end":14706433,"line_start":171,"line_end":171,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706434,"byte_end":14706437,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706438,"byte_end":14706471,"line_start":173,"line_end":173,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706472,"byte_end":14706493,"line_start":174,"line_end":174,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706494,"byte_end":14706505,"line_start":175,"line_end":175,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706506,"byte_end":14706509,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706510,"byte_end":14706534,"line_start":177,"line_end":177,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706535,"byte_end":14706586,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706587,"byte_end":14706640,"line_start":179,"line_end":179,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706641,"byte_end":14706650,"line_start":180,"line_end":180,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706651,"byte_end":14706656,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706657,"byte_end":14706664,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706665,"byte_end":14706668,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ To use a `Sender` from a destructor, put it in an [`Option`] and call","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706669,"byte_end":14706742,"line_start":184,"line_end":184,"column_start":1,"column_end":74}},{"value":"/ [`Option::take`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706743,"byte_end":14706764,"line_start":185,"line_end":185,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706765,"byte_end":14706768,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706769,"byte_end":14706776,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706777,"byte_end":14706806,"line_start":188,"line_end":188,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706807,"byte_end":14706810,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ struct SendOnDrop {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706811,"byte_end":14706834,"line_start":190,"line_end":190,"column_start":1,"column_end":24}},{"value":"/     sender: Option<oneshot::Sender<&'static str>>,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706835,"byte_end":14706889,"line_start":191,"line_end":191,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706890,"byte_end":14706895,"line_start":192,"line_end":192,"column_start":1,"column_end":6}},{"value":"/ impl Drop for SendOnDrop {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706896,"byte_end":14706926,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706927,"byte_end":14706955,"line_start":194,"line_end":194,"column_start":1,"column_end":29}},{"value":"/         if let Some(sender) = self.sender.take() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14706956,"byte_end":14707010,"line_start":195,"line_end":195,"column_start":1,"column_end":55}},{"value":"/             // Using `let _ =` to ignore send errors.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707011,"byte_end":14707068,"line_start":196,"line_end":196,"column_start":1,"column_end":58}},{"value":"/             let _ = sender.send(\"I got dropped!\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707069,"byte_end":14707123,"line_start":197,"line_end":197,"column_start":1,"column_end":55}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707124,"byte_end":14707137,"line_start":198,"line_end":198,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707138,"byte_end":14707147,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707148,"byte_end":14707153,"line_start":200,"line_end":200,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707154,"byte_end":14707157,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707158,"byte_end":14707176,"line_start":202,"line_end":202,"column_start":1,"column_end":19}},{"value":"/ # async fn _doc() {}","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707177,"byte_end":14707201,"line_start":203,"line_end":203,"column_start":1,"column_end":25}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707202,"byte_end":14707249,"line_start":204,"line_end":204,"column_start":1,"column_end":48}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707250,"byte_end":14707271,"line_start":205,"line_end":205,"column_start":1,"column_end":22}},{"value":"/     let (send, recv) = oneshot::channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707272,"byte_end":14707318,"line_start":206,"line_end":206,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707319,"byte_end":14707322,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/     let send_on_drop = SendOnDrop { sender: Some(send) };","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707323,"byte_end":14707384,"line_start":208,"line_end":208,"column_start":1,"column_end":62}},{"value":"/     drop(send_on_drop);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707385,"byte_end":14707412,"line_start":209,"line_end":209,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707413,"byte_end":14707416,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(recv.await, Ok(\"I got dropped!\"));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707417,"byte_end":14707470,"line_start":211,"line_end":211,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707471,"byte_end":14707476,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707477,"byte_end":14707484,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707485,"byte_end":14707488,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ [`Option`]: std::option::Option","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707489,"byte_end":14707524,"line_start":215,"line_end":215,"column_start":1,"column_end":36}},{"value":"/ [`Option::take`]: std::option::Option::take","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707525,"byte_end":14707572,"line_start":216,"line_end":216,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":3536},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710557,"byte_end":14710565,"line_start":318,"line_end":318,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":3538}],"decl_id":null,"docs":" Receives a value from the associated [`Sender`].","sig":null,"attributes":[{"value":"/ Receives a value from the associated [`Sender`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707737,"byte_end":14707789,"line_start":224,"line_end":224,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707790,"byte_end":14707793,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ A pair of both a [`Sender`] and a [`Receiver`]  are created by the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707794,"byte_end":14707864,"line_start":226,"line_end":226,"column_start":1,"column_end":71}},{"value":"/ [`channel`](fn@channel) function.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707865,"byte_end":14707902,"line_start":227,"line_end":227,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707903,"byte_end":14707906,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ This channel has no `recv` method because the receiver itself implements the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707907,"byte_end":14707987,"line_start":229,"line_end":229,"column_start":1,"column_end":81}},{"value":"/ [`Future`] trait. To receive a value, `.await` the `Receiver` object directly.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14707988,"byte_end":14708070,"line_start":230,"line_end":230,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708071,"byte_end":14708074,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ The `poll` method on the `Future` trait is allowed to spuriously return","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708075,"byte_end":14708150,"line_start":232,"line_end":232,"column_start":1,"column_end":76}},{"value":"/ `Poll::Pending` even if the message has been sent. If such a spurious","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708151,"byte_end":14708224,"line_start":233,"line_end":233,"column_start":1,"column_end":74}},{"value":"/ failure happens, then the caller will be woken when the spurious failure has","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708225,"byte_end":14708305,"line_start":234,"line_end":234,"column_start":1,"column_end":81}},{"value":"/ been resolved so that the caller can attempt to receive the message again.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708306,"byte_end":14708384,"line_start":235,"line_end":235,"column_start":1,"column_end":79}},{"value":"/ Note that receiving such a wakeup does not guarantee that the next call will","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708385,"byte_end":14708465,"line_start":236,"line_end":236,"column_start":1,"column_end":81}},{"value":"/ succeed — it could fail with another spurious failure. (A spurious failure","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708466,"byte_end":14708546,"line_start":237,"line_end":237,"column_start":1,"column_end":79}},{"value":"/ does not mean that the message is lost. It is just delayed.)","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708547,"byte_end":14708611,"line_start":238,"line_end":238,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708612,"byte_end":14708615,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: trait@std::future::Future","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708616,"byte_end":14708657,"line_start":240,"line_end":240,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708658,"byte_end":14708661,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708662,"byte_end":14708676,"line_start":242,"line_end":242,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708677,"byte_end":14708680,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708681,"byte_end":14708688,"line_start":244,"line_end":244,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708689,"byte_end":14708718,"line_start":245,"line_end":245,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708719,"byte_end":14708722,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708723,"byte_end":14708741,"line_start":247,"line_end":247,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708742,"byte_end":14708763,"line_start":248,"line_end":248,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708764,"byte_end":14708806,"line_start":249,"line_end":249,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708807,"byte_end":14708810,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708811,"byte_end":14708844,"line_start":251,"line_end":251,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708845,"byte_end":14708885,"line_start":252,"line_end":252,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708886,"byte_end":14708935,"line_start":253,"line_end":253,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708936,"byte_end":14708949,"line_start":254,"line_end":254,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708950,"byte_end":14708961,"line_start":255,"line_end":255,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708962,"byte_end":14708965,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708966,"byte_end":14708990,"line_start":257,"line_end":257,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14708991,"byte_end":14709038,"line_start":258,"line_end":258,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709039,"byte_end":14709092,"line_start":259,"line_end":259,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709093,"byte_end":14709102,"line_start":260,"line_end":260,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709103,"byte_end":14709108,"line_start":261,"line_end":261,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709109,"byte_end":14709116,"line_start":262,"line_end":262,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709117,"byte_end":14709120,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709121,"byte_end":14709194,"line_start":264,"line_end":264,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709195,"byte_end":14709220,"line_start":265,"line_end":265,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709221,"byte_end":14709224,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709225,"byte_end":14709232,"line_start":267,"line_end":267,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709233,"byte_end":14709262,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709263,"byte_end":14709266,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709267,"byte_end":14709285,"line_start":270,"line_end":270,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709286,"byte_end":14709307,"line_start":271,"line_end":271,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709308,"byte_end":14709357,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709358,"byte_end":14709361,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709362,"byte_end":14709395,"line_start":274,"line_end":274,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709396,"byte_end":14709417,"line_start":275,"line_end":275,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709418,"byte_end":14709429,"line_start":276,"line_end":276,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709430,"byte_end":14709433,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709434,"byte_end":14709458,"line_start":278,"line_end":278,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709459,"byte_end":14709510,"line_start":279,"line_end":279,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709511,"byte_end":14709564,"line_start":280,"line_end":280,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709565,"byte_end":14709574,"line_start":281,"line_end":281,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709575,"byte_end":14709580,"line_start":282,"line_end":282,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709581,"byte_end":14709588,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709589,"byte_end":14709592,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ To use a `Receiver` in a `tokio::select!` loop, add `&mut` in front of the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709593,"byte_end":14709671,"line_start":285,"line_end":285,"column_start":1,"column_end":79}},{"value":"/ channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709672,"byte_end":14709684,"line_start":286,"line_end":286,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709685,"byte_end":14709688,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709689,"byte_end":14709696,"line_start":288,"line_end":288,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709697,"byte_end":14709726,"line_start":289,"line_end":289,"column_start":1,"column_end":30}},{"value":"/ use tokio::time::{interval, sleep, Duration};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709727,"byte_end":14709776,"line_start":290,"line_end":290,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709777,"byte_end":14709780,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709781,"byte_end":14709799,"line_start":292,"line_end":292,"column_start":1,"column_end":19}},{"value":"/ # async fn _doc() {}","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709800,"byte_end":14709824,"line_start":293,"line_end":293,"column_start":1,"column_end":25}},{"value":"/ # #[tokio::main(flavor = \"current_thread\", start_paused = true)]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709825,"byte_end":14709893,"line_start":294,"line_end":294,"column_start":1,"column_end":69}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709894,"byte_end":14709915,"line_start":295,"line_end":295,"column_start":1,"column_end":22}},{"value":"/     let (send, mut recv) = oneshot::channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709916,"byte_end":14709966,"line_start":296,"line_end":296,"column_start":1,"column_end":51}},{"value":"/     let mut interval = interval(Duration::from_millis(100));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14709967,"byte_end":14710031,"line_start":297,"line_end":297,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710032,"byte_end":14710035,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/     # let handle =","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710036,"byte_end":14710058,"line_start":299,"line_end":299,"column_start":1,"column_end":23}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710059,"byte_end":14710092,"line_start":300,"line_end":300,"column_start":1,"column_end":34}},{"value":"/         sleep(Duration::from_secs(1)).await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710093,"byte_end":14710141,"line_start":301,"line_end":301,"column_start":1,"column_end":49}},{"value":"/         send.send(\"shut down\").unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710142,"byte_end":14710186,"line_start":302,"line_end":302,"column_start":1,"column_end":45}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710187,"byte_end":14710198,"line_start":303,"line_end":303,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710199,"byte_end":14710202,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710203,"byte_end":14710217,"line_start":305,"line_end":305,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710218,"byte_end":14710246,"line_start":306,"line_end":306,"column_start":1,"column_end":29}},{"value":"/             _ = interval.tick() => println!(\"Another 100ms\"),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710247,"byte_end":14710312,"line_start":307,"line_end":307,"column_start":1,"column_end":66}},{"value":"/             msg = &mut recv => {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710313,"byte_end":14710349,"line_start":308,"line_end":308,"column_start":1,"column_end":37}},{"value":"/                 println!(\"Got message: {}\", msg.unwrap());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710350,"byte_end":14710412,"line_start":309,"line_end":309,"column_start":1,"column_end":63}},{"value":"/                 break;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710413,"byte_end":14710439,"line_start":310,"line_end":310,"column_start":1,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710440,"byte_end":14710457,"line_start":311,"line_end":311,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710458,"byte_end":14710471,"line_start":312,"line_end":312,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710472,"byte_end":14710481,"line_start":313,"line_end":313,"column_start":1,"column_end":10}},{"value":"/     # handle.await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710482,"byte_end":14710514,"line_start":314,"line_end":314,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710515,"byte_end":14710520,"line_start":315,"line_end":315,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710521,"byte_end":14710528,"line_start":316,"line_end":316,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2300},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710882,"byte_end":14710887,"line_start":328,"line_end":328,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":2301},{"krate":0,"index":3542},{"krate":0,"index":3545},{"krate":0,"index":3547},{"krate":0,"index":3548},{"krate":0,"index":3550},{"krate":0,"index":3551},{"krate":0,"index":3554},{"krate":0,"index":3556},{"krate":0,"index":3561},{"krate":0,"index":3563},{"krate":0,"index":3564},{"krate":0,"index":3566},{"krate":0,"index":3567},{"krate":0,"index":3569},{"krate":0,"index":2304},{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2309}],"decl_id":null,"docs":" Oneshot error types.\n","sig":null,"attributes":[{"value":"/ Oneshot error types.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710894,"byte_end":14710918,"line_start":329,"line_end":329,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3542},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14711067,"byte_end":14711076,"line_start":335,"line_end":335,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14710943,"byte_end":14711008,"line_start":333,"line_end":333,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3557},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14711305,"byte_end":14711310,"line_start":341,"line_end":341,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":3556},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14711238,"byte_end":14711296,"line_start":340,"line_end":340,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3559},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14711399,"byte_end":14711405,"line_start":344,"line_end":344,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":3556},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14711321,"byte_end":14711390,"line_start":343,"line_end":343,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":3556},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14711215,"byte_end":14711227,"line_start":339,"line_end":339,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"enum TryRecvError { Empty, Closed, }","parent":null,"children":[{"krate":0,"index":3557},{"krate":0,"index":3559}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14711098,"byte_end":14711158,"line_start":337,"line_end":337,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2305},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14711498,"byte_end":14711501,"line_start":350,"line_end":350,"column_start":12,"column_end":15},"name":"fmt","qualname":"<RecvError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2308},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14711750,"byte_end":14711753,"line_start":360,"line_end":360,"column_start":12,"column_end":15},"name":"fmt","qualname":"<TryRecvError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2331},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714526,"byte_end":14714533,"line_start":464,"line_end":464,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates a new one-shot channel for sending single values across asynchronous","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14713694,"byte_end":14713774,"line_start":433,"line_end":433,"column_start":1,"column_end":81}},{"value":"/ tasks.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14713775,"byte_end":14713785,"line_start":434,"line_end":434,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14713786,"byte_end":14713789,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14713790,"byte_end":14713866,"line_start":436,"line_end":436,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14713867,"byte_end":14713945,"line_start":437,"line_end":437,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14713946,"byte_end":14713992,"line_start":438,"line_end":438,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14713993,"byte_end":14713996,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14713997,"byte_end":14714043,"line_start":440,"line_end":440,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714044,"byte_end":14714047,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714048,"byte_end":14714062,"line_start":442,"line_end":442,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714063,"byte_end":14714066,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714067,"byte_end":14714074,"line_start":444,"line_end":444,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714075,"byte_end":14714104,"line_start":445,"line_end":445,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714105,"byte_end":14714108,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714109,"byte_end":14714127,"line_start":447,"line_end":447,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714128,"byte_end":14714149,"line_start":448,"line_end":448,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714150,"byte_end":14714192,"line_start":449,"line_end":449,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714193,"byte_end":14714196,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714197,"byte_end":14714230,"line_start":451,"line_end":451,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714231,"byte_end":14714271,"line_start":452,"line_end":452,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714272,"byte_end":14714321,"line_start":453,"line_end":453,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714322,"byte_end":14714335,"line_start":454,"line_end":454,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714336,"byte_end":14714347,"line_start":455,"line_end":455,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714348,"byte_end":14714351,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714352,"byte_end":14714376,"line_start":457,"line_end":457,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714377,"byte_end":14714424,"line_start":458,"line_end":458,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714425,"byte_end":14714478,"line_start":459,"line_end":459,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714479,"byte_end":14714488,"line_start":460,"line_end":460,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714489,"byte_end":14714494,"line_start":461,"line_end":461,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714495,"byte_end":14714502,"line_start":462,"line_end":462,"column_start":1,"column_end":8}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14714503,"byte_end":14714518,"line_start":463,"line_end":463,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718623,"byte_end":14718627,"line_start":588,"line_end":588,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14717052,"byte_end":14717127,"line_start":548,"line_end":548,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14717132,"byte_end":14717148,"line_start":549,"line_end":549,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14717153,"byte_end":14717156,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14717161,"byte_end":14717240,"line_start":551,"line_end":551,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14717245,"byte_end":14717320,"line_start":552,"line_end":552,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14717325,"byte_end":14717401,"line_start":553,"line_end":553,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14717406,"byte_end":14717478,"line_start":554,"line_end":554,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14717483,"byte_end":14717496,"line_start":555,"line_end":555,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14717501,"byte_end":14717504,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14717509,"byte_end":14717585,"line_start":557,"line_end":557,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14717590,"byte_end":14717666,"line_start":558,"line_end":558,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14717671,"byte_end":14717743,"line_start":559,"line_end":559,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14717748,"byte_end":14717821,"line_start":560,"line_end":560,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14717826,"byte_end":14717900,"line_start":561,"line_end":561,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14717905,"byte_end":14717977,"line_start":562,"line_end":562,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14717982,"byte_end":14718019,"line_start":563,"line_end":563,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718024,"byte_end":14718027,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718032,"byte_end":14718046,"line_start":565,"line_end":565,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718051,"byte_end":14718054,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718059,"byte_end":14718091,"line_start":567,"line_end":567,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718096,"byte_end":14718099,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718104,"byte_end":14718111,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718116,"byte_end":14718145,"line_start":570,"line_end":570,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718150,"byte_end":14718153,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718158,"byte_end":14718176,"line_start":572,"line_end":572,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718181,"byte_end":14718202,"line_start":573,"line_end":573,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718207,"byte_end":14718249,"line_start":574,"line_end":574,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718254,"byte_end":14718257,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718262,"byte_end":14718295,"line_start":576,"line_end":576,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718300,"byte_end":14718340,"line_start":577,"line_end":577,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718345,"byte_end":14718394,"line_start":578,"line_end":578,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718399,"byte_end":14718412,"line_start":579,"line_end":579,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718417,"byte_end":14718428,"line_start":580,"line_end":580,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718433,"byte_end":14718436,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718441,"byte_end":14718465,"line_start":582,"line_end":582,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718470,"byte_end":14718517,"line_start":583,"line_end":583,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718522,"byte_end":14718575,"line_start":584,"line_end":584,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718580,"byte_end":14718589,"line_start":585,"line_end":585,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718594,"byte_end":14718599,"line_start":586,"line_end":586,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14718604,"byte_end":14718611,"line_start":587,"line_end":587,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14722173,"byte_end":14722179,"line_start":693,"line_end":693,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720168,"byte_end":14720226,"line_start":626,"line_end":626,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720231,"byte_end":14720234,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720239,"byte_end":14720313,"line_start":628,"line_end":628,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720318,"byte_end":14720352,"line_start":629,"line_end":629,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720357,"byte_end":14720360,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720365,"byte_end":14720430,"line_start":631,"line_end":631,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720435,"byte_end":14720507,"line_start":632,"line_end":632,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720512,"byte_end":14720515,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720520,"byte_end":14720532,"line_start":634,"line_end":634,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720537,"byte_end":14720540,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720545,"byte_end":14720593,"line_start":636,"line_end":636,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720598,"byte_end":14720601,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720606,"byte_end":14720632,"line_start":638,"line_end":638,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720637,"byte_end":14720667,"line_start":639,"line_end":639,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720672,"byte_end":14720675,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720680,"byte_end":14720694,"line_start":641,"line_end":641,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720699,"byte_end":14720702,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720707,"byte_end":14720722,"line_start":643,"line_end":643,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720727,"byte_end":14720730,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720735,"byte_end":14720742,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720747,"byte_end":14720776,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720781,"byte_end":14720784,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720789,"byte_end":14720807,"line_start":648,"line_end":648,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720812,"byte_end":14720833,"line_start":649,"line_end":649,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720838,"byte_end":14720890,"line_start":650,"line_end":650,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720895,"byte_end":14720898,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720903,"byte_end":14720936,"line_start":652,"line_end":652,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720941,"byte_end":14720962,"line_start":653,"line_end":653,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720967,"byte_end":14720978,"line_start":654,"line_end":654,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720983,"byte_end":14720986,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14720991,"byte_end":14721017,"line_start":656,"line_end":656,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721022,"byte_end":14721063,"line_start":657,"line_end":657,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721068,"byte_end":14721073,"line_start":658,"line_end":658,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721078,"byte_end":14721085,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721090,"byte_end":14721093,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721098,"byte_end":14721120,"line_start":661,"line_end":661,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721125,"byte_end":14721128,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721133,"byte_end":14721140,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721145,"byte_end":14721174,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721179,"byte_end":14721217,"line_start":665,"line_end":665,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721222,"byte_end":14721225,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721230,"byte_end":14721264,"line_start":667,"line_end":667,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721269,"byte_end":14721320,"line_start":668,"line_end":668,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721325,"byte_end":14721350,"line_start":669,"line_end":669,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721355,"byte_end":14721360,"line_start":670,"line_end":670,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721365,"byte_end":14721368,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721373,"byte_end":14721391,"line_start":672,"line_end":672,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721396,"byte_end":14721417,"line_start":673,"line_end":673,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721422,"byte_end":14721468,"line_start":674,"line_end":674,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721473,"byte_end":14721476,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721481,"byte_end":14721514,"line_start":676,"line_end":676,"column_start":5,"column_end":38}},{"value":"/         tokio::select! {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721519,"byte_end":14721547,"line_start":677,"line_end":677,"column_start":5,"column_end":33}},{"value":"/             _ = tx.closed() => {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721552,"byte_end":14721588,"line_start":678,"line_end":678,"column_start":5,"column_end":41}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721593,"byte_end":14721668,"line_start":679,"line_end":679,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721673,"byte_end":14721690,"line_start":680,"line_end":680,"column_start":5,"column_end":22}},{"value":"/             value = compute() => {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721695,"byte_end":14721733,"line_start":681,"line_end":681,"column_start":5,"column_end":43}},{"value":"/                 // The send can fail if the channel was closed at the exact same","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721738,"byte_end":14721822,"line_start":682,"line_end":682,"column_start":5,"column_end":89}},{"value":"/                 // time as when compute() finished, so just ignore the failure.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721827,"byte_end":14721910,"line_start":683,"line_end":683,"column_start":5,"column_end":88}},{"value":"/                 let _ = tx.send(value);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721915,"byte_end":14721958,"line_start":684,"line_end":684,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721963,"byte_end":14721980,"line_start":685,"line_end":685,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14721985,"byte_end":14721998,"line_start":686,"line_end":686,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14722003,"byte_end":14722014,"line_start":687,"line_end":687,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14722019,"byte_end":14722022,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14722027,"byte_end":14722063,"line_start":689,"line_end":689,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14722068,"byte_end":14722133,"line_start":690,"line_end":690,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14722138,"byte_end":14722143,"line_start":691,"line_end":691,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14722148,"byte_end":14722155,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2344},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723514,"byte_end":14723523,"line_start":739,"line_end":739,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"fn is_closed<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14722755,"byte_end":14722829,"line_start":712,"line_end":712,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14722834,"byte_end":14722837,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14722842,"byte_end":14722916,"line_start":714,"line_end":714,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14722921,"byte_end":14722955,"line_start":715,"line_end":715,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14722960,"byte_end":14722963,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14722968,"byte_end":14723043,"line_start":717,"line_end":717,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723048,"byte_end":14723051,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723056,"byte_end":14723082,"line_start":719,"line_end":719,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723087,"byte_end":14723117,"line_start":720,"line_end":720,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723122,"byte_end":14723125,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723130,"byte_end":14723144,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723149,"byte_end":14723152,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723157,"byte_end":14723164,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723169,"byte_end":14723198,"line_start":725,"line_end":725,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723203,"byte_end":14723206,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723211,"byte_end":14723229,"line_start":727,"line_end":727,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723234,"byte_end":14723255,"line_start":728,"line_end":728,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723260,"byte_end":14723302,"line_start":729,"line_end":729,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723307,"byte_end":14723310,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723315,"byte_end":14723348,"line_start":731,"line_end":731,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723353,"byte_end":14723356,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723361,"byte_end":14723378,"line_start":733,"line_end":733,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723383,"byte_end":14723386,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723391,"byte_end":14723423,"line_start":735,"line_end":735,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723428,"byte_end":14723480,"line_start":736,"line_end":736,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723485,"byte_end":14723490,"line_start":737,"line_end":737,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723495,"byte_end":14723502,"line_start":738,"line_end":738,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724970,"byte_end":14724981,"line_start":786,"line_end":786,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"fn poll_closed<'_, '_, '_>(&'_ mut Self, &'_ mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the oneshot channel has been closed, and if not, schedules the\n `Waker` in the provided `Context` to receive a notification when the channel is\n closed.","sig":null,"attributes":[{"value":"/ Checks whether the oneshot channel has been closed, and if not, schedules the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723685,"byte_end":14723766,"line_start":746,"line_end":746,"column_start":5,"column_end":86}},{"value":"/ `Waker` in the provided `Context` to receive a notification when the channel is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723771,"byte_end":14723854,"line_start":747,"line_end":747,"column_start":5,"column_end":88}},{"value":"/ closed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723859,"byte_end":14723870,"line_start":748,"line_end":748,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723875,"byte_end":14723878,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly, or when the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723883,"byte_end":14723963,"line_start":750,"line_end":750,"column_start":5,"column_end":85}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14723968,"byte_end":14724002,"line_start":751,"line_end":751,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724007,"byte_end":14724010,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to poll, only the `Waker` from the `Context` passed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724015,"byte_end":14724098,"line_start":753,"line_end":753,"column_start":5,"column_end":88}},{"value":"/ to the most recent call will be scheduled to receive a wakeup.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724103,"byte_end":14724169,"line_start":754,"line_end":754,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724174,"byte_end":14724177,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: struct@crate::sync::oneshot::Receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724182,"byte_end":14724237,"line_start":756,"line_end":756,"column_start":5,"column_end":60}},{"value":"/ [`close`]: fn@crate::sync::oneshot::Receiver::close","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724242,"byte_end":14724297,"line_start":757,"line_end":757,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724302,"byte_end":14724305,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724310,"byte_end":14724328,"line_start":759,"line_end":759,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724333,"byte_end":14724336,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724341,"byte_end":14724367,"line_start":761,"line_end":761,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724372,"byte_end":14724375,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the channel is still open.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724380,"byte_end":14724432,"line_start":763,"line_end":763,"column_start":5,"column_end":57}},{"value":"/  * `Poll::Ready(())` if the channel is closed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724437,"byte_end":14724487,"line_start":764,"line_end":764,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724492,"byte_end":14724495,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724500,"byte_end":14724514,"line_start":766,"line_end":766,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724519,"byte_end":14724522,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724527,"byte_end":14724534,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724539,"byte_end":14724568,"line_start":769,"line_end":769,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724573,"byte_end":14724576,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724581,"byte_end":14724614,"line_start":771,"line_end":771,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724619,"byte_end":14724622,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724627,"byte_end":14724645,"line_start":773,"line_end":773,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724650,"byte_end":14724671,"line_start":774,"line_end":774,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724676,"byte_end":14724732,"line_start":775,"line_end":775,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724737,"byte_end":14724740,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724745,"byte_end":14724778,"line_start":777,"line_end":777,"column_start":5,"column_end":38}},{"value":"/         rx.close();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724783,"byte_end":14724806,"line_start":778,"line_end":778,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724811,"byte_end":14724822,"line_start":779,"line_end":779,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724827,"byte_end":14724830,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| tx.poll_closed(cx)).await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724835,"byte_end":14724882,"line_start":781,"line_end":781,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724887,"byte_end":14724890,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724895,"byte_end":14724936,"line_start":783,"line_end":783,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724941,"byte_end":14724946,"line_start":784,"line_end":784,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14724951,"byte_end":14724958,"line_start":785,"line_end":785,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2348},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14726362,"byte_end":14726366,"line_start":836,"line_end":836,"column_start":8,"column_end":12},"name":"drop","qualname":"<Sender<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728563,"byte_end":14728568,"line_start":911,"line_end":911,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn close<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14726817,"byte_end":14726884,"line_start":852,"line_end":852,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14726889,"byte_end":14726892,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14726897,"byte_end":14726971,"line_start":854,"line_end":854,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14726976,"byte_end":14727044,"line_start":855,"line_end":855,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727049,"byte_end":14727115,"line_start":856,"line_end":856,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727120,"byte_end":14727134,"line_start":857,"line_end":857,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727139,"byte_end":14727142,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727147,"byte_end":14727223,"line_start":859,"line_end":859,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727228,"byte_end":14727291,"line_start":860,"line_end":860,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727296,"byte_end":14727299,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ `close` is no-op if a message is already received or the channel","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727304,"byte_end":14727372,"line_start":862,"line_end":862,"column_start":5,"column_end":73}},{"value":"/ is already closed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727377,"byte_end":14727399,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727404,"byte_end":14727407,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727412,"byte_end":14727434,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727439,"byte_end":14727475,"line_start":866,"line_end":866,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727480,"byte_end":14727483,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727488,"byte_end":14727502,"line_start":868,"line_end":868,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727507,"byte_end":14727510,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727515,"byte_end":14727550,"line_start":870,"line_end":870,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727555,"byte_end":14727558,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727563,"byte_end":14727570,"line_start":872,"line_end":872,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727575,"byte_end":14727604,"line_start":873,"line_end":873,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727609,"byte_end":14727659,"line_start":874,"line_end":874,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727664,"byte_end":14727667,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727672,"byte_end":14727690,"line_start":876,"line_end":876,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727695,"byte_end":14727716,"line_start":877,"line_end":877,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727721,"byte_end":14727767,"line_start":878,"line_end":878,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727772,"byte_end":14727775,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727780,"byte_end":14727813,"line_start":880,"line_end":880,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727818,"byte_end":14727821,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727826,"byte_end":14727845,"line_start":882,"line_end":882,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727850,"byte_end":14727853,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727858,"byte_end":14727890,"line_start":884,"line_end":884,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727895,"byte_end":14727947,"line_start":885,"line_end":885,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727952,"byte_end":14727955,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727960,"byte_end":14727989,"line_start":887,"line_end":887,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14727994,"byte_end":14728037,"line_start":888,"line_end":888,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728042,"byte_end":14728074,"line_start":889,"line_end":889,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728079,"byte_end":14728088,"line_start":890,"line_end":890,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728093,"byte_end":14728098,"line_start":891,"line_end":891,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728103,"byte_end":14728110,"line_start":892,"line_end":892,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728115,"byte_end":14728118,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728123,"byte_end":14728174,"line_start":894,"line_end":894,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728179,"byte_end":14728182,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728187,"byte_end":14728194,"line_start":896,"line_end":896,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728199,"byte_end":14728228,"line_start":897,"line_end":897,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728233,"byte_end":14728236,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728241,"byte_end":14728259,"line_start":899,"line_end":899,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728264,"byte_end":14728285,"line_start":900,"line_end":900,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728290,"byte_end":14728336,"line_start":901,"line_end":901,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728341,"byte_end":14728344,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728349,"byte_end":14728398,"line_start":903,"line_end":903,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728403,"byte_end":14728406,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728411,"byte_end":14728430,"line_start":905,"line_end":905,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728435,"byte_end":14728438,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728443,"byte_end":14728484,"line_start":907,"line_end":907,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728489,"byte_end":14728529,"line_start":908,"line_end":908,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728534,"byte_end":14728539,"line_start":909,"line_end":909,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728544,"byte_end":14728551,"line_start":910,"line_end":910,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2352},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14731146,"byte_end":14731154,"line_start":992,"line_end":992,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn try_recv<'_>(&'_ mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14728992,"byte_end":14729024,"line_start":925,"line_end":925,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729029,"byte_end":14729032,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729037,"byte_end":14729110,"line_start":927,"line_end":927,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729115,"byte_end":14729181,"line_start":928,"line_end":928,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729186,"byte_end":14729210,"line_start":929,"line_end":929,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729215,"byte_end":14729218,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729223,"byte_end":14729289,"line_start":931,"line_end":931,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729294,"byte_end":14729316,"line_start":932,"line_end":932,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729321,"byte_end":14729324,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ Note that unlike the `poll` method, the `try_recv` method cannot fail","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729329,"byte_end":14729402,"line_start":934,"line_end":934,"column_start":5,"column_end":78}},{"value":"/ spuriously. Any send or close event that happens before this call to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729407,"byte_end":14729479,"line_start":935,"line_end":935,"column_start":5,"column_end":77}},{"value":"/ `try_recv` will be correctly returned to the caller.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729484,"byte_end":14729540,"line_start":936,"line_end":936,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729545,"byte_end":14729548,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729553,"byte_end":14729565,"line_start":938,"line_end":938,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729570,"byte_end":14729573,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729578,"byte_end":14729629,"line_start":940,"line_end":940,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729634,"byte_end":14729697,"line_start":941,"line_end":941,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729702,"byte_end":14729777,"line_start":942,"line_end":942,"column_start":5,"column_end":80}},{"value":"/   a value, or if the message has already been received.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729782,"byte_end":14729841,"line_start":943,"line_end":943,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729846,"byte_end":14729849,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729854,"byte_end":14729868,"line_start":945,"line_end":945,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729873,"byte_end":14729876,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729881,"byte_end":14729931,"line_start":947,"line_end":947,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729936,"byte_end":14729939,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729944,"byte_end":14729951,"line_start":949,"line_end":949,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729956,"byte_end":14729985,"line_start":950,"line_end":950,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14729990,"byte_end":14730040,"line_start":951,"line_end":951,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730045,"byte_end":14730048,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730053,"byte_end":14730071,"line_start":953,"line_end":953,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730076,"byte_end":14730097,"line_start":954,"line_end":954,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730102,"byte_end":14730148,"line_start":955,"line_end":955,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730153,"byte_end":14730156,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730161,"byte_end":14730190,"line_start":957,"line_end":957,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730195,"byte_end":14730240,"line_start":958,"line_end":958,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730245,"byte_end":14730287,"line_start":959,"line_end":959,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730292,"byte_end":14730324,"line_start":960,"line_end":960,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730329,"byte_end":14730338,"line_start":961,"line_end":961,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730343,"byte_end":14730346,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730351,"byte_end":14730374,"line_start":963,"line_end":963,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730379,"byte_end":14730413,"line_start":964,"line_end":964,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730418,"byte_end":14730421,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730426,"byte_end":14730455,"line_start":966,"line_end":966,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730460,"byte_end":14730512,"line_start":967,"line_end":967,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730517,"byte_end":14730549,"line_start":968,"line_end":968,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730554,"byte_end":14730563,"line_start":969,"line_end":969,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730568,"byte_end":14730573,"line_start":970,"line_end":970,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730578,"byte_end":14730585,"line_start":971,"line_end":971,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730590,"byte_end":14730593,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730598,"byte_end":14730659,"line_start":973,"line_end":973,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730664,"byte_end":14730667,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730672,"byte_end":14730679,"line_start":975,"line_end":975,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730684,"byte_end":14730713,"line_start":976,"line_end":976,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730718,"byte_end":14730768,"line_start":977,"line_end":977,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730773,"byte_end":14730776,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730781,"byte_end":14730799,"line_start":979,"line_end":979,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730804,"byte_end":14730825,"line_start":980,"line_end":980,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730830,"byte_end":14730882,"line_start":981,"line_end":981,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730887,"byte_end":14730890,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730895,"byte_end":14730912,"line_start":983,"line_end":983,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730917,"byte_end":14730920,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730925,"byte_end":14730954,"line_start":985,"line_end":985,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14730959,"byte_end":14731013,"line_start":986,"line_end":986,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14731018,"byte_end":14731061,"line_start":987,"line_end":987,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14731066,"byte_end":14731098,"line_start":988,"line_end":988,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14731103,"byte_end":14731112,"line_start":989,"line_end":989,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14731117,"byte_end":14731122,"line_start":990,"line_end":990,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14731127,"byte_end":14731134,"line_start":991,"line_end":991,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2353},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14733362,"byte_end":14733375,"line_start":1057,"line_end":1057,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<Receiver<T>>::blocking_recv","value":"fn blocking_recv(Self) -> Result<T, RecvError>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14732667,"byte_end":14732729,"line_start":1030,"line_end":1030,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14732734,"byte_end":14732737,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14732742,"byte_end":14732754,"line_start":1032,"line_end":1032,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14732759,"byte_end":14732762,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14732767,"byte_end":14732834,"line_start":1034,"line_end":1034,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14732839,"byte_end":14732851,"line_start":1035,"line_end":1035,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14732856,"byte_end":14732859,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14732864,"byte_end":14732878,"line_start":1037,"line_end":1037,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14732883,"byte_end":14732886,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14732891,"byte_end":14732898,"line_start":1039,"line_end":1039,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14732903,"byte_end":14732923,"line_start":1040,"line_end":1040,"column_start":5,"column_end":25}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14732928,"byte_end":14732957,"line_start":1041,"line_end":1041,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14732962,"byte_end":14732965,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14732970,"byte_end":14732988,"line_start":1043,"line_end":1043,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14732993,"byte_end":14733014,"line_start":1044,"line_end":1044,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel::<u8>();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14733019,"byte_end":14733067,"line_start":1045,"line_end":1045,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14733072,"byte_end":14733075,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14733080,"byte_end":14733127,"line_start":1047,"line_end":1047,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Ok(10), rx.blocking_recv());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14733132,"byte_end":14733183,"line_start":1048,"line_end":1048,"column_start":5,"column_end":56}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14733188,"byte_end":14733199,"line_start":1049,"line_end":1049,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14733204,"byte_end":14733207,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/     let _ = tx.send(10);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14733212,"byte_end":14733240,"line_start":1051,"line_end":1051,"column_start":5,"column_end":33}},{"value":"/     sync_code.join().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14733245,"byte_end":14733279,"line_start":1052,"line_end":1052,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14733284,"byte_end":14733289,"line_start":1053,"line_end":1053,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14733294,"byte_end":14733301,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14733306,"byte_end":14733321,"line_start":1055,"line_end":1055,"column_start":5,"column_end":20}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14733326,"byte_end":14733350,"line_start":1056,"line_end":1056,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2356},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14733493,"byte_end":14733497,"line_start":1063,"line_end":1063,"column_start":8,"column_end":12},"name":"drop","qualname":"<Receiver<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14734000,"byte_end":14734004,"line_start":1081,"line_end":1081,"column_start":8,"column_end":12},"name":"poll","qualname":"<Receiver<T> as std::future::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13761},"children":[],"decl_id":{"krate":2,"index":13763},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3578},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14746089,"byte_end":14746095,"line_start":57,"line_end":57,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::batch_semaphore::TryAcquireError::Closed","value":"TryAcquireError::Closed","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":" The semaphore has been [closed] and cannot issue new permits.","sig":null,"attributes":[{"value":"/ The semaphore has been [closed] and cannot issue new permits.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14745963,"byte_end":14746028,"line_start":54,"line_end":54,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14746033,"byte_end":14746036,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14746041,"byte_end":14746084,"line_start":56,"line_end":56,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3580},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14746150,"byte_end":14746159,"line_start":60,"line_end":60,"column_start":5,"column_end":14},"name":"NoPermits","qualname":"::sync::batch_semaphore::TryAcquireError::NoPermits","value":"TryAcquireError::NoPermits","parent":{"krate":0,"index":3577},"children":[],"decl_id":null,"docs":" The semaphore has no available permits.\n","sig":null,"attributes":[{"value":"/ The semaphore has no available permits.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14746102,"byte_end":14746145,"line_start":59,"line_end":59,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":3577},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14745941,"byte_end":14745956,"line_start":53,"line_end":53,"column_start":10,"column_end":25},"name":"TryAcquireError","qualname":"::sync::batch_semaphore::TryAcquireError","value":"enum TryAcquireError { Closed, NoPermits, }","parent":null,"children":[{"krate":0,"index":3578},{"krate":0,"index":3580}],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14745767,"byte_end":14745831,"line_start":49,"line_end":49,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14745832,"byte_end":14745835,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: crate::sync::Semaphore::try_acquire","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14745836,"byte_end":14745903,"line_start":51,"line_end":51,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3587},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14746445,"byte_end":14746457,"line_start":70,"line_end":70,"column_start":12,"column_end":24},"name":"AcquireError","qualname":"::sync::batch_semaphore::AcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::acquire`] function.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14746163,"byte_end":14746223,"line_start":62,"line_end":62,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14746224,"byte_end":14746227,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ An `acquire` operation can only fail if the semaphore has been","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14746228,"byte_end":14746294,"line_start":64,"line_end":64,"column_start":1,"column_end":67}},{"value":"/ [closed].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14746295,"byte_end":14746308,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14746309,"byte_end":14746312,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14746313,"byte_end":14746356,"line_start":67,"line_end":67,"column_start":1,"column_end":44}},{"value":"/ [`Semaphore::acquire`]: crate::sync::Semaphore::acquire","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14746357,"byte_end":14746416,"line_start":68,"line_end":68,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14768121,"byte_end":14768124,"line_start":676,"line_end":676,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AcquireError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14768872,"byte_end":14768875,"line_start":701,"line_end":701,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryAcquireError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3594},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772395,"byte_end":14772404,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":3595}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit acquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit acquisition.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14769835,"byte_end":14769901,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14769902,"byte_end":14769905,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14769906,"byte_end":14769981,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14769982,"byte_end":14770058,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770059,"byte_end":14770139,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770140,"byte_end":14770149,"line_start":12,"line_end":12,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770150,"byte_end":14770153,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770154,"byte_end":14770227,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770228,"byte_end":14770307,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770308,"byte_end":14770386,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770387,"byte_end":14770458,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770459,"byte_end":14770462,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This `Semaphore` is fair, which means that permits are given out in the order","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770463,"byte_end":14770544,"line_start":19,"line_end":19,"column_start":1,"column_end":82}},{"value":"/ they were requested. This fairness is also applied when `acquire_many` gets","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770545,"byte_end":14770624,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ involved, so if a call to `acquire_many` at the front of the queue requests","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770625,"byte_end":14770704,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ more permits than currently available, this can prevent a call to `acquire`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770705,"byte_end":14770784,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ from completing, even if the semaphore has enough permits complete the call","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770785,"byte_end":14770864,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ to `acquire`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770865,"byte_end":14770882,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770883,"byte_end":14770886,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ To use the `Semaphore` in a poll function, you can use the [`PollSemaphore`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770887,"byte_end":14770967,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ utility.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770968,"byte_end":14770980,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770981,"byte_end":14770984,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14770985,"byte_end":14770999,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771000,"byte_end":14771003,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771004,"byte_end":14771020,"line_start":31,"line_end":31,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771021,"byte_end":14771024,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771025,"byte_end":14771032,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771033,"byte_end":14771083,"line_start":34,"line_end":34,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771084,"byte_end":14771087,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771088,"byte_end":14771106,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771107,"byte_end":14771128,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     let semaphore = Semaphore::new(3);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771129,"byte_end":14771171,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771172,"byte_end":14771175,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/     let a_permit = semaphore.acquire().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771176,"byte_end":14771234,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/     let two_permits = semaphore.acquire_many(2).await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771235,"byte_end":14771302,"line_start":41,"line_end":41,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771303,"byte_end":14771306,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771307,"byte_end":14771360,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771361,"byte_end":14771364,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     let permit_attempt = semaphore.try_acquire();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771365,"byte_end":14771418,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/     assert_eq!(permit_attempt.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771419,"byte_end":14771494,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771495,"byte_end":14771500,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771501,"byte_end":14771508,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771509,"byte_end":14771512,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Use [`Semaphore::acquire_owned`] to move permits across tasks:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771513,"byte_end":14771579,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771580,"byte_end":14771583,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771584,"byte_end":14771591,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771592,"byte_end":14771615,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771616,"byte_end":14771647,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771648,"byte_end":14771651,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771652,"byte_end":14771670,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771671,"byte_end":14771692,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let semaphore = Arc::new(Semaphore::new(3));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771693,"byte_end":14771745,"line_start":58,"line_end":58,"column_start":1,"column_end":53}},{"value":"/     let mut join_handles = Vec::new();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771746,"byte_end":14771788,"line_start":59,"line_end":59,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771789,"byte_end":14771792,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771793,"byte_end":14771816,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/         let permit = semaphore.clone().acquire_owned().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771817,"byte_end":14771891,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771892,"byte_end":14771947,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/             // perform task...","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771948,"byte_end":14771982,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/             // explicitly own `permit` in the task","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14771983,"byte_end":14772037,"line_start":65,"line_end":65,"column_start":1,"column_end":55}},{"value":"/             drop(permit);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772038,"byte_end":14772067,"line_start":66,"line_end":66,"column_start":1,"column_end":30}},{"value":"/         }));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772068,"byte_end":14772084,"line_start":67,"line_end":67,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772085,"byte_end":14772094,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772095,"byte_end":14772098,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/     for handle in join_handles {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772099,"byte_end":14772135,"line_start":70,"line_end":70,"column_start":1,"column_end":37}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772136,"byte_end":14772170,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772171,"byte_end":14772180,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772181,"byte_end":14772186,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772187,"byte_end":14772194,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772195,"byte_end":14772198,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [`PollSemaphore`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSemaphore.html","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772199,"byte_end":14772294,"line_start":76,"line_end":76,"column_start":1,"column_end":96}},{"value":"/ [`Semaphore::acquire_owned`]: crate::sync::Semaphore::acquire_owned","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772295,"byte_end":14772366,"line_start":77,"line_end":77,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3598},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772740,"byte_end":14772755,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":3600},{"krate":0,"index":3601}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772556,"byte_end":14772588,"line_start":86,"line_end":86,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772589,"byte_end":14772592,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772593,"byte_end":14772644,"line_start":88,"line_end":88,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772645,"byte_end":14772648,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772649,"byte_end":14772699,"line_start":90,"line_end":90,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772700,"byte_end":14772711,"line_start":91,"line_end":91,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3605},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14773016,"byte_end":14773036,"line_start":105,"line_end":105,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":3606},{"krate":0,"index":3607}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772807,"byte_end":14772846,"line_start":98,"line_end":98,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772847,"byte_end":14772850,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772851,"byte_end":14772908,"line_start":100,"line_end":100,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772909,"byte_end":14772912,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772913,"byte_end":14772975,"line_start":102,"line_end":102,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14772976,"byte_end":14772987,"line_start":103,"line_end":103,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2549},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14773652,"byte_end":14773655,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14773557,"byte_end":14773620,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14773625,"byte_end":14773640,"line_start":127,"line_end":127,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2550},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14775410,"byte_end":14775427,"line_start":183,"line_end":183,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"fn available_permits<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14775346,"byte_end":14775398,"line_start":182,"line_end":182,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2551},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14775674,"byte_end":14775685,"line_start":190,"line_end":190,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"fn add_permits<'_>(&'_ Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14775497,"byte_end":14775539,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14775544,"byte_end":14775547,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14775552,"byte_end":14775662,"line_start":189,"line_end":189,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":2552},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776889,"byte_end":14776896,"line_start":228,"line_end":228,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"async fn acquire<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14775748,"byte_end":14775789,"line_start":194,"line_end":194,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14775794,"byte_end":14775797,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14775802,"byte_end":14775873,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14775878,"byte_end":14775944,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ acquired permit.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14775949,"byte_end":14775969,"line_start":198,"line_end":198,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14775974,"byte_end":14775977,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14775982,"byte_end":14776001,"line_start":200,"line_end":200,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776006,"byte_end":14776009,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute permits in the order they","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776014,"byte_end":14776089,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ were requested. Cancelling a call to `acquire` makes you lose your place","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776094,"byte_end":14776170,"line_start":203,"line_end":203,"column_start":5,"column_end":81}},{"value":"/ in the queue.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776175,"byte_end":14776192,"line_start":204,"line_end":204,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776197,"byte_end":14776200,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776205,"byte_end":14776219,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776224,"byte_end":14776227,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776232,"byte_end":14776239,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776244,"byte_end":14776275,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776280,"byte_end":14776283,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776288,"byte_end":14776306,"line_start":211,"line_end":211,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776311,"byte_end":14776332,"line_start":212,"line_end":212,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Semaphore::new(2);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776337,"byte_end":14776379,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776384,"byte_end":14776387,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/     let permit_1 = semaphore.acquire().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776392,"byte_end":14776450,"line_start":215,"line_end":215,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776455,"byte_end":14776508,"line_start":216,"line_end":216,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776513,"byte_end":14776516,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/     let permit_2 = semaphore.acquire().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776521,"byte_end":14776579,"line_start":218,"line_end":218,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776584,"byte_end":14776637,"line_start":219,"line_end":219,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776642,"byte_end":14776645,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/     drop(permit_1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776650,"byte_end":14776673,"line_start":221,"line_end":221,"column_start":5,"column_end":28}},{"value":"/     assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776678,"byte_end":14776731,"line_start":222,"line_end":222,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776736,"byte_end":14776741,"line_start":223,"line_end":223,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776746,"byte_end":14776753,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776758,"byte_end":14776761,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776766,"byte_end":14776813,"line_start":226,"line_end":226,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14776818,"byte_end":14776871,"line_start":227,"line_end":227,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2555},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14778365,"byte_end":14778377,"line_start":275,"line_end":275,"column_start":18,"column_end":30},"name":"acquire_many","qualname":"<Semaphore>::acquire_many","value":"async fn acquire_many<'_>(&'_ Self, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14777434,"byte_end":14777478,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14777483,"byte_end":14777486,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14777491,"byte_end":14777562,"line_start":249,"line_end":249,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14777567,"byte_end":14777633,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/ acquired permits.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14777638,"byte_end":14777659,"line_start":251,"line_end":251,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14777664,"byte_end":14777667,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14777672,"byte_end":14777691,"line_start":253,"line_end":253,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14777696,"byte_end":14777699,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute permits in the order they","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14777704,"byte_end":14777779,"line_start":255,"line_end":255,"column_start":5,"column_end":80}},{"value":"/ were requested. Cancelling a call to `acquire_many` makes you lose your","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14777784,"byte_end":14777859,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ place in the queue.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14777864,"byte_end":14777887,"line_start":257,"line_end":257,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14777892,"byte_end":14777895,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14777900,"byte_end":14777914,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14777919,"byte_end":14777922,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14777927,"byte_end":14777934,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14777939,"byte_end":14777970,"line_start":262,"line_end":262,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14777975,"byte_end":14777978,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14777983,"byte_end":14778001,"line_start":264,"line_end":264,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14778006,"byte_end":14778027,"line_start":265,"line_end":265,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Semaphore::new(5);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14778032,"byte_end":14778074,"line_start":266,"line_end":266,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14778079,"byte_end":14778082,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/     let permit = semaphore.acquire_many(3).await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14778087,"byte_end":14778149,"line_start":268,"line_end":268,"column_start":5,"column_end":67}},{"value":"/     assert_eq!(semaphore.available_permits(), 2);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14778154,"byte_end":14778207,"line_start":269,"line_end":269,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14778212,"byte_end":14778217,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14778222,"byte_end":14778229,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14778234,"byte_end":14778237,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14778242,"byte_end":14778289,"line_start":273,"line_end":273,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14778294,"byte_end":14778347,"line_start":274,"line_end":274,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2558},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780007,"byte_end":14780018,"line_start":323,"line_end":323,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"fn try_acquire<'_>(&'_ Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14778906,"byte_end":14778955,"line_start":295,"line_end":295,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14778960,"byte_end":14778963,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14778968,"byte_end":14779048,"line_start":297,"line_end":297,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779053,"byte_end":14779134,"line_start":298,"line_end":298,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779139,"byte_end":14779212,"line_start":299,"line_end":299,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779217,"byte_end":14779220,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779225,"byte_end":14779239,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779244,"byte_end":14779247,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779252,"byte_end":14779259,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779264,"byte_end":14779314,"line_start":304,"line_end":304,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779319,"byte_end":14779322,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779327,"byte_end":14779344,"line_start":306,"line_end":306,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Semaphore::new(2);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779349,"byte_end":14779387,"line_start":307,"line_end":307,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779392,"byte_end":14779395,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = semaphore.try_acquire().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779400,"byte_end":14779452,"line_start":309,"line_end":309,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779457,"byte_end":14779506,"line_start":310,"line_end":310,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779511,"byte_end":14779514,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = semaphore.try_acquire().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779519,"byte_end":14779571,"line_start":312,"line_end":312,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779576,"byte_end":14779625,"line_start":313,"line_end":313,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779630,"byte_end":14779633,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let permit_3 = semaphore.try_acquire();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779638,"byte_end":14779681,"line_start":315,"line_end":315,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(permit_3.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779686,"byte_end":14779751,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779756,"byte_end":14779763,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779768,"byte_end":14779775,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779780,"byte_end":14779783,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779788,"byte_end":14779857,"line_start":320,"line_end":320,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779862,"byte_end":14779937,"line_start":321,"line_end":321,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14779942,"byte_end":14779995,"line_start":322,"line_end":322,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2559},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14781288,"byte_end":14781304,"line_start":358,"line_end":358,"column_start":12,"column_end":28},"name":"try_acquire_many","qualname":"<Semaphore>::try_acquire_many","value":"fn try_acquire_many<'_>(&'_ Self, u32)\n-> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire `n` permits from the semaphore.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780283,"byte_end":14780335,"line_start":333,"line_end":333,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780340,"byte_end":14780343,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780348,"byte_end":14780428,"line_start":335,"line_end":335,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are not enough permits left.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780433,"byte_end":14780511,"line_start":336,"line_end":336,"column_start":5,"column_end":83}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780516,"byte_end":14780600,"line_start":337,"line_end":337,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780605,"byte_end":14780608,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780613,"byte_end":14780627,"line_start":339,"line_end":339,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780632,"byte_end":14780635,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780640,"byte_end":14780647,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780652,"byte_end":14780702,"line_start":342,"line_end":342,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780707,"byte_end":14780710,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780715,"byte_end":14780732,"line_start":344,"line_end":344,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Semaphore::new(4);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780737,"byte_end":14780775,"line_start":345,"line_end":345,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780780,"byte_end":14780783,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = semaphore.try_acquire_many(3).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780788,"byte_end":14780846,"line_start":347,"line_end":347,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780851,"byte_end":14780900,"line_start":348,"line_end":348,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780905,"byte_end":14780908,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = semaphore.try_acquire_many(2);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780913,"byte_end":14780962,"line_start":350,"line_end":350,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(permit_2.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14780967,"byte_end":14781032,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14781037,"byte_end":14781044,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14781049,"byte_end":14781056,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14781061,"byte_end":14781064,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14781069,"byte_end":14781138,"line_start":355,"line_end":355,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14781143,"byte_end":14781218,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14781223,"byte_end":14781276,"line_start":357,"line_end":357,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14783021,"byte_end":14783034,"line_start":410,"line_end":410,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14781577,"byte_end":14781618,"line_start":368,"line_end":368,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14781623,"byte_end":14781626,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14781631,"byte_end":14781699,"line_start":370,"line_end":370,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14781704,"byte_end":14781775,"line_start":371,"line_end":371,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14781780,"byte_end":14781851,"line_start":372,"line_end":372,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14781856,"byte_end":14781876,"line_start":373,"line_end":373,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14781881,"byte_end":14781884,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14781889,"byte_end":14781908,"line_start":375,"line_end":375,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14781913,"byte_end":14781916,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute permits in the order they","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14781921,"byte_end":14781996,"line_start":377,"line_end":377,"column_start":5,"column_end":80}},{"value":"/ were requested. Cancelling a call to `acquire_owned` makes you lose your","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782001,"byte_end":14782077,"line_start":378,"line_end":378,"column_start":5,"column_end":81}},{"value":"/ place in the queue.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782082,"byte_end":14782105,"line_start":379,"line_end":379,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782110,"byte_end":14782113,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782118,"byte_end":14782132,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782137,"byte_end":14782140,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782145,"byte_end":14782152,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782157,"byte_end":14782180,"line_start":384,"line_end":384,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782185,"byte_end":14782216,"line_start":385,"line_end":385,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782221,"byte_end":14782224,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782229,"byte_end":14782247,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782252,"byte_end":14782273,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(3));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782278,"byte_end":14782330,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"/     let mut join_handles = Vec::new();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782335,"byte_end":14782377,"line_start":390,"line_end":390,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782382,"byte_end":14782385,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782390,"byte_end":14782413,"line_start":392,"line_end":392,"column_start":5,"column_end":28}},{"value":"/         let permit = semaphore.clone().acquire_owned().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782418,"byte_end":14782492,"line_start":393,"line_end":393,"column_start":5,"column_end":79}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782497,"byte_end":14782552,"line_start":394,"line_end":394,"column_start":5,"column_end":60}},{"value":"/             // perform task...","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782557,"byte_end":14782591,"line_start":395,"line_end":395,"column_start":5,"column_end":39}},{"value":"/             // explicitly own `permit` in the task","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782596,"byte_end":14782650,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/             drop(permit);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782655,"byte_end":14782684,"line_start":397,"line_end":397,"column_start":5,"column_end":34}},{"value":"/         }));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782689,"byte_end":14782705,"line_start":398,"line_end":398,"column_start":5,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782710,"byte_end":14782719,"line_start":399,"line_end":399,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782724,"byte_end":14782727,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/     for handle in join_handles {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782732,"byte_end":14782768,"line_start":401,"line_end":401,"column_start":5,"column_end":41}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782773,"byte_end":14782807,"line_start":402,"line_end":402,"column_start":5,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782812,"byte_end":14782821,"line_start":403,"line_end":403,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782826,"byte_end":14782831,"line_start":404,"line_end":404,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782836,"byte_end":14782843,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782848,"byte_end":14782851,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782856,"byte_end":14782883,"line_start":407,"line_end":407,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782888,"byte_end":14782935,"line_start":408,"line_end":408,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14782940,"byte_end":14783003,"line_start":409,"line_end":409,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14785053,"byte_end":14785071,"line_start":471,"line_end":471,"column_start":18,"column_end":36},"name":"acquire_many_owned","qualname":"<Semaphore>::acquire_many_owned","value":"async fn acquire_many_owned(Arc<Self>, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14783594,"byte_end":14783638,"line_start":429,"line_end":429,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14783643,"byte_end":14783646,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14783651,"byte_end":14783719,"line_start":431,"line_end":431,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14783724,"byte_end":14783795,"line_start":432,"line_end":432,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14783800,"byte_end":14783871,"line_start":433,"line_end":433,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14783876,"byte_end":14783896,"line_start":434,"line_end":434,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14783901,"byte_end":14783904,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14783909,"byte_end":14783928,"line_start":436,"line_end":436,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14783933,"byte_end":14783936,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute permits in the order they","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14783941,"byte_end":14784016,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ were requested. Cancelling a call to `acquire_many_owned` makes you lose","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784021,"byte_end":14784097,"line_start":439,"line_end":439,"column_start":5,"column_end":81}},{"value":"/ your place in the queue.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784102,"byte_end":14784130,"line_start":440,"line_end":440,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784135,"byte_end":14784138,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784143,"byte_end":14784157,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784162,"byte_end":14784165,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784170,"byte_end":14784177,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784182,"byte_end":14784205,"line_start":445,"line_end":445,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784210,"byte_end":14784241,"line_start":446,"line_end":446,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784246,"byte_end":14784249,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784254,"byte_end":14784272,"line_start":448,"line_end":448,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784277,"byte_end":14784298,"line_start":449,"line_end":449,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(10));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784303,"byte_end":14784356,"line_start":450,"line_end":450,"column_start":5,"column_end":58}},{"value":"/     let mut join_handles = Vec::new();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784361,"byte_end":14784403,"line_start":451,"line_end":451,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784408,"byte_end":14784411,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784416,"byte_end":14784439,"line_start":453,"line_end":453,"column_start":5,"column_end":28}},{"value":"/         let permit = semaphore.clone().acquire_many_owned(2).await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784444,"byte_end":14784524,"line_start":454,"line_end":454,"column_start":5,"column_end":85}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784529,"byte_end":14784584,"line_start":455,"line_end":455,"column_start":5,"column_end":60}},{"value":"/             // perform task...","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784589,"byte_end":14784623,"line_start":456,"line_end":456,"column_start":5,"column_end":39}},{"value":"/             // explicitly own `permit` in the task","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784628,"byte_end":14784682,"line_start":457,"line_end":457,"column_start":5,"column_end":59}},{"value":"/             drop(permit);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784687,"byte_end":14784716,"line_start":458,"line_end":458,"column_start":5,"column_end":34}},{"value":"/         }));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784721,"byte_end":14784737,"line_start":459,"line_end":459,"column_start":5,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784742,"byte_end":14784751,"line_start":460,"line_end":460,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784756,"byte_end":14784759,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/     for handle in join_handles {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784764,"byte_end":14784800,"line_start":462,"line_end":462,"column_start":5,"column_end":41}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784805,"byte_end":14784839,"line_start":463,"line_end":463,"column_start":5,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784844,"byte_end":14784853,"line_start":464,"line_end":464,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784858,"byte_end":14784863,"line_start":465,"line_end":465,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784868,"byte_end":14784875,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784880,"byte_end":14784883,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784888,"byte_end":14784915,"line_start":468,"line_end":468,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784920,"byte_end":14784967,"line_start":469,"line_end":469,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14784972,"byte_end":14785035,"line_start":470,"line_end":470,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786977,"byte_end":14786994,"line_start":525,"line_end":525,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14785667,"byte_end":14785716,"line_start":493,"line_end":493,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14785721,"byte_end":14785724,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14785729,"byte_end":14785800,"line_start":495,"line_end":495,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14785805,"byte_end":14785882,"line_start":496,"line_end":496,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14785887,"byte_end":14785957,"line_start":497,"line_end":497,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14785962,"byte_end":14786033,"line_start":498,"line_end":498,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786038,"byte_end":14786058,"line_start":499,"line_end":499,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786063,"byte_end":14786066,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786071,"byte_end":14786085,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786090,"byte_end":14786093,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786098,"byte_end":14786105,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786110,"byte_end":14786133,"line_start":504,"line_end":504,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786138,"byte_end":14786188,"line_start":505,"line_end":505,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786193,"byte_end":14786196,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786201,"byte_end":14786218,"line_start":507,"line_end":507,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Arc::new(Semaphore::new(2));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786223,"byte_end":14786271,"line_start":508,"line_end":508,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786276,"byte_end":14786279,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = Arc::clone(&semaphore).try_acquire_owned().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786284,"byte_end":14786355,"line_start":510,"line_end":510,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786360,"byte_end":14786409,"line_start":511,"line_end":511,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786414,"byte_end":14786417,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = Arc::clone(&semaphore).try_acquire_owned().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786422,"byte_end":14786493,"line_start":513,"line_end":513,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(semaphore.available_permits(), 0);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786498,"byte_end":14786547,"line_start":514,"line_end":514,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786552,"byte_end":14786555,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let permit_3 = semaphore.try_acquire_owned();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786560,"byte_end":14786609,"line_start":516,"line_end":516,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(permit_3.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786614,"byte_end":14786679,"line_start":517,"line_end":517,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786684,"byte_end":14786691,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786696,"byte_end":14786703,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786708,"byte_end":14786711,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786716,"byte_end":14786743,"line_start":521,"line_end":521,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786748,"byte_end":14786817,"line_start":522,"line_end":522,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786822,"byte_end":14786897,"line_start":523,"line_end":523,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14786902,"byte_end":14786965,"line_start":524,"line_end":524,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788462,"byte_end":14788484,"line_start":564,"line_end":564,"column_start":12,"column_end":34},"name":"try_acquire_many_owned","qualname":"<Semaphore>::try_acquire_many_owned","value":"fn try_acquire_many_owned(Arc<Self>, u32)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire `n` permits from the semaphore.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787275,"byte_end":14787327,"line_start":535,"line_end":535,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787332,"byte_end":14787335,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787340,"byte_end":14787411,"line_start":537,"line_end":537,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787416,"byte_end":14787493,"line_start":538,"line_end":538,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787498,"byte_end":14787568,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787573,"byte_end":14787644,"line_start":540,"line_end":540,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787649,"byte_end":14787669,"line_start":541,"line_end":541,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787674,"byte_end":14787677,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787682,"byte_end":14787696,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787701,"byte_end":14787704,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787709,"byte_end":14787716,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787721,"byte_end":14787744,"line_start":546,"line_end":546,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{Semaphore, TryAcquireError};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787749,"byte_end":14787799,"line_start":547,"line_end":547,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787804,"byte_end":14787807,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787812,"byte_end":14787829,"line_start":549,"line_end":549,"column_start":5,"column_end":22}},{"value":"/ let semaphore = Arc::new(Semaphore::new(4));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787834,"byte_end":14787882,"line_start":550,"line_end":550,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787887,"byte_end":14787890,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let permit_1 = Arc::clone(&semaphore).try_acquire_many_owned(3).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787895,"byte_end":14787972,"line_start":552,"line_end":552,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(semaphore.available_permits(), 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14787977,"byte_end":14788026,"line_start":553,"line_end":553,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788031,"byte_end":14788034,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let permit_2 = semaphore.try_acquire_many_owned(2);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788039,"byte_end":14788094,"line_start":555,"line_end":555,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(permit_2.err(), Some(TryAcquireError::NoPermits));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788099,"byte_end":14788164,"line_start":556,"line_end":556,"column_start":5,"column_end":70}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788169,"byte_end":14788176,"line_start":557,"line_end":557,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788181,"byte_end":14788188,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788193,"byte_end":14788196,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788201,"byte_end":14788228,"line_start":560,"line_end":560,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788233,"byte_end":14788302,"line_start":561,"line_end":561,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788307,"byte_end":14788382,"line_start":562,"line_end":562,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788387,"byte_end":14788450,"line_start":563,"line_end":563,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789709,"byte_end":14789714,"line_start":606,"line_end":606,"column_start":12,"column_end":17},"name":"close","qualname":"<Semaphore>::close","value":"fn close<'_>(&'_ Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788796,"byte_end":14788821,"line_start":577,"line_end":577,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788826,"byte_end":14788829,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ This prevents the semaphore from issuing new permits and notifies all pending waiters.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788834,"byte_end":14788924,"line_start":579,"line_end":579,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788929,"byte_end":14788932,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788937,"byte_end":14788951,"line_start":581,"line_end":581,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788956,"byte_end":14788959,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788964,"byte_end":14788971,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14788976,"byte_end":14789007,"line_start":584,"line_end":584,"column_start":5,"column_end":36}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789012,"byte_end":14789035,"line_start":585,"line_end":585,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::TryAcquireError;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789040,"byte_end":14789077,"line_start":586,"line_end":586,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789082,"byte_end":14789085,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789090,"byte_end":14789108,"line_start":588,"line_end":588,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789113,"byte_end":14789134,"line_start":589,"line_end":589,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789139,"byte_end":14789191,"line_start":590,"line_end":590,"column_start":5,"column_end":57}},{"value":"/     let semaphore2 = semaphore.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789196,"byte_end":14789239,"line_start":591,"line_end":591,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789244,"byte_end":14789247,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789252,"byte_end":14789285,"line_start":593,"line_end":593,"column_start":5,"column_end":38}},{"value":"/         let permit = semaphore.acquire_many(2).await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789290,"byte_end":14789347,"line_start":594,"line_end":594,"column_start":5,"column_end":62}},{"value":"/         assert!(permit.is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789352,"byte_end":14789389,"line_start":595,"line_end":595,"column_start":5,"column_end":42}},{"value":"/         println!(\"waiter received error\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789394,"byte_end":14789440,"line_start":596,"line_end":596,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789445,"byte_end":14789456,"line_start":597,"line_end":597,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789461,"byte_end":14789464,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/     println!(\"closing semaphore\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789469,"byte_end":14789507,"line_start":599,"line_end":599,"column_start":5,"column_end":43}},{"value":"/     semaphore2.close();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789512,"byte_end":14789539,"line_start":600,"line_end":600,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789544,"byte_end":14789547,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/     // Cannot obtain more permits","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789552,"byte_end":14789589,"line_start":602,"line_end":602,"column_start":5,"column_end":42}},{"value":"/     assert_eq!(semaphore2.try_acquire().err(), Some(TryAcquireError::Closed))","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789594,"byte_end":14789675,"line_start":603,"line_end":603,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789680,"byte_end":14789685,"line_start":604,"line_end":604,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789690,"byte_end":14789697,"line_start":605,"line_end":605,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789819,"byte_end":14789828,"line_start":611,"line_end":611,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Semaphore>::is_closed","value":"fn is_closed<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the semaphore is closed\n","sig":null,"attributes":[{"value":"/ Returns true if the semaphore is closed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789764,"byte_end":14789807,"line_start":610,"line_end":610,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2572},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14790097,"byte_end":14790103,"line_start":620,"line_end":620,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789922,"byte_end":14789992,"line_start":617,"line_end":617,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789997,"byte_end":14790066,"line_start":618,"line_end":618,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14790071,"byte_end":14790085,"line_start":619,"line_end":619,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2574},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14790358,"byte_end":14790364,"line_start":629,"line_end":629,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14790183,"byte_end":14790253,"line_start":626,"line_end":626,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14790258,"byte_end":14790327,"line_start":627,"line_end":627,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14790332,"byte_end":14790346,"line_start":628,"line_end":628,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2576},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14790455,"byte_end":14790459,"line_start":635,"line_end":635,"column_start":8,"column_end":12},"name":"drop","qualname":"<SemaphorePermit as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2578},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14790579,"byte_end":14790583,"line_start":641,"line_end":641,"column_start":8,"column_end":12},"name":"drop","qualname":"<OwnedSemaphorePermit as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2637},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14827692,"byte_end":14827712,"line_start":17,"line_end":17,"column_start":12,"column_end":32},"name":"OwnedRwLockReadGuard","qualname":"::sync::rwlock::owned_read_guard::OwnedRwLockReadGuard","value":"OwnedRwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642}],"decl_id":null,"docs":" Owned RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14827401,"byte_end":14827479,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14827480,"byte_end":14827492,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14827493,"byte_end":14827496,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read_owned`] method on","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14827497,"byte_end":14827558,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/ [`RwLock`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14827559,"byte_end":14827574,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14827575,"byte_end":14827578,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`read_owned`]: method@crate::sync::RwLock::read_owned","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14827579,"byte_end":14827637,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14827638,"byte_end":14827680,"line_start":16,"line_end":16,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14829042,"byte_end":14829045,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockReadGuard<T, U>>::map","value":"fn map<F, V>(Self, F) -> OwnedRwLockReadGuard<T, V> where V: ?Sized,\nF: for<'_> FnOnce(&'_ U) -> &'_ V","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `OwnedRwLockReadGuard` for a component of the locked data.\n This operation cannot fail as the `OwnedRwLockReadGuard` passed in\n already locked the data.","sig":null,"attributes":[{"value":"/ Makes a new `OwnedRwLockReadGuard` for a component of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828112,"byte_end":14828186,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ This operation cannot fail as the `OwnedRwLockReadGuard` passed in","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828191,"byte_end":14828261,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ already locked the data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828266,"byte_end":14828294,"line_start":29,"line_end":29,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828299,"byte_end":14828302,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828307,"byte_end":14828358,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828363,"byte_end":14828438,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828443,"byte_end":14828507,"line_start":33,"line_end":33,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828512,"byte_end":14828515,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828520,"byte_end":14828534,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828539,"byte_end":14828542,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828547,"byte_end":14828554,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828559,"byte_end":14828582,"line_start":38,"line_end":38,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockReadGuard};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828587,"byte_end":14828639,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828644,"byte_end":14828647,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828652,"byte_end":14828700,"line_start":41,"line_end":41,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828705,"byte_end":14828725,"line_start":42,"line_end":42,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828730,"byte_end":14828733,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828738,"byte_end":14828758,"line_start":44,"line_end":44,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828763,"byte_end":14828786,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828791,"byte_end":14828836,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828841,"byte_end":14828844,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read_owned().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828849,"byte_end":14828889,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/ let guard = OwnedRwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828894,"byte_end":14828953,"line_start":49,"line_end":49,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828958,"byte_end":14828961,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828966,"byte_end":14828992,"line_start":51,"line_end":51,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828997,"byte_end":14829004,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14829009,"byte_end":14829016,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14829021,"byte_end":14829030,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830764,"byte_end":14830771,"line_start":106,"line_end":106,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockReadGuard<T, U>>::try_map","value":"fn try_map<F, V>(Self, F) -> Result<OwnedRwLockReadGuard<T, V>, Self> where\nV: ?Sized, F: for<'_> FnOnce(&'_ U) -> Option<&'_ V>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`OwnedRwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`OwnedRwLockReadGuard`] for a component of the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14829696,"byte_end":14829770,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14829775,"byte_end":14829845,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14829850,"byte_end":14829861,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14829866,"byte_end":14829869,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockReadGuard` passed in","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14829874,"byte_end":14829944,"line_start":79,"line_end":79,"column_start":5,"column_end":75}},{"value":"/ already locked the data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14829949,"byte_end":14829977,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14829982,"byte_end":14829985,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14829990,"byte_end":14830049,"line_start":82,"line_end":82,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockReadGuard::try_map(..)`. A method would interfere with","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830054,"byte_end":14830124,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830129,"byte_end":14830193,"line_start":84,"line_end":84,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830198,"byte_end":14830201,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830206,"byte_end":14830220,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830225,"byte_end":14830228,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830233,"byte_end":14830240,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830245,"byte_end":14830268,"line_start":89,"line_end":89,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockReadGuard};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830273,"byte_end":14830325,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830330,"byte_end":14830333,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830338,"byte_end":14830386,"line_start":92,"line_end":92,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830391,"byte_end":14830411,"line_start":93,"line_end":93,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830416,"byte_end":14830419,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830424,"byte_end":14830444,"line_start":95,"line_end":95,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830449,"byte_end":14830472,"line_start":96,"line_end":96,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830477,"byte_end":14830522,"line_start":97,"line_end":97,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830527,"byte_end":14830530,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read_owned().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830535,"byte_end":14830575,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/ let guard = OwnedRwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830580,"byte_end":14830675,"line_start":100,"line_end":100,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830680,"byte_end":14830683,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830688,"byte_end":14830714,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830719,"byte_end":14830726,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830731,"byte_end":14830738,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14830743,"byte_end":14830752,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2656},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14831634,"byte_end":14831639,"line_start":133,"line_end":133,"column_start":8,"column_end":13},"name":"deref","qualname":"<OwnedRwLockReadGuard<T, U> as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ U","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2660},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14831798,"byte_end":14831801,"line_start":142,"line_end":142,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OwnedRwLockReadGuard<T, U> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2664},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14832006,"byte_end":14832009,"line_start":151,"line_end":151,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OwnedRwLockReadGuard<T, U> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2668},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14832181,"byte_end":14832185,"line_start":157,"line_end":157,"column_start":8,"column_end":12},"name":"drop","qualname":"<OwnedRwLockReadGuard<T, U> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2698},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14833168,"byte_end":14833189,"line_start":18,"line_end":18,"column_start":12,"column_end":33},"name":"OwnedRwLockWriteGuard","qualname":"::sync::rwlock::owned_write_guard::OwnedRwLockWriteGuard","value":"OwnedRwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703}],"decl_id":null,"docs":" Owned RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14832870,"byte_end":14832952,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/ dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14832953,"byte_end":14832965,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14832966,"byte_end":14832969,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write_owned`] method","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14832970,"byte_end":14833029,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ on [`RwLock`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14833030,"byte_end":14833048,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14833049,"byte_end":14833052,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`write_owned`]: method@crate::sync::RwLock::write_owned","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14833053,"byte_end":14833113,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14833114,"byte_end":14833156,"line_start":17,"line_end":17,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834646,"byte_end":14834649,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockWriteGuard<T>>::map","value":"fn map<F, U>(Self, F) -> OwnedRwLockMappedWriteGuard<T, U> where U: ?Sized,\nF: for<'_> FnOnce(&'_ mut T) -> &'_ mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`OwnedRwLockMappedWriteGuard`] for a component of the locked\n data.","sig":null,"attributes":[{"value":"/ Makes a new [`OwnedRwLockMappedWriteGuard`] for a component of the locked","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14833597,"byte_end":14833674,"line_start":29,"line_end":29,"column_start":5,"column_end":82}},{"value":"/ data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14833679,"byte_end":14833688,"line_start":30,"line_end":30,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14833693,"byte_end":14833696,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockWriteGuard` passed in","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14833701,"byte_end":14833772,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ already locked the data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14833777,"byte_end":14833805,"line_start":33,"line_end":33,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14833810,"byte_end":14833813,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14833818,"byte_end":14833877,"line_start":35,"line_end":35,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14833882,"byte_end":14833957,"line_start":36,"line_end":36,"column_start":5,"column_end":80}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14833962,"byte_end":14834018,"line_start":37,"line_end":37,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834023,"byte_end":14834026,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834031,"byte_end":14834045,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834050,"byte_end":14834053,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834058,"byte_end":14834065,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834070,"byte_end":14834093,"line_start":42,"line_end":42,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834098,"byte_end":14834151,"line_start":43,"line_end":43,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834156,"byte_end":14834159,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834164,"byte_end":14834212,"line_start":45,"line_end":45,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834217,"byte_end":14834237,"line_start":46,"line_end":46,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834242,"byte_end":14834245,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834250,"byte_end":14834270,"line_start":48,"line_end":48,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834275,"byte_end":14834298,"line_start":49,"line_end":49,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834303,"byte_end":14834348,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834353,"byte_end":14834356,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834361,"byte_end":14834366,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/     let lock = Arc::clone(&lock);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834371,"byte_end":14834408,"line_start":53,"line_end":53,"column_start":5,"column_end":42}},{"value":"/     let mut mapped = OwnedRwLockWriteGuard::map(lock.write_owned().await, |f| &mut f.0);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834413,"byte_end":14834505,"line_start":54,"line_end":54,"column_start":5,"column_end":97}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834510,"byte_end":14834530,"line_start":55,"line_end":55,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834535,"byte_end":14834540,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834545,"byte_end":14834548,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834553,"byte_end":14834596,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834601,"byte_end":14834608,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834613,"byte_end":14834620,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14834625,"byte_end":14834634,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2709},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836667,"byte_end":14836674,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockWriteGuard<T>>::try_map","value":"fn try_map<F, U>(Self, F) -> Result<OwnedRwLockMappedWriteGuard<T, U>, Self>\nwhere U: ?Sized, F: for<'_> FnOnce(&'_ mut T) -> Option<&'_ mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`OwnedRwLockMappedWriteGuard`] for a component\n of the locked data. The original guard is returned if the closure\n returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`OwnedRwLockMappedWriteGuard`] for a component","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14835408,"byte_end":14835483,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of the locked data. The original guard is returned if the closure","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14835488,"byte_end":14835557,"line_start":85,"line_end":85,"column_start":5,"column_end":74}},{"value":"/ returns `None`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14835562,"byte_end":14835581,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14835586,"byte_end":14835589,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockWriteGuard` passed in","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14835594,"byte_end":14835665,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ already locked the data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14835670,"byte_end":14835698,"line_start":89,"line_end":89,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14835703,"byte_end":14835706,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14835711,"byte_end":14835762,"line_start":91,"line_end":91,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockWriteGuard::try_map(...)`. A method would interfere","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14835767,"byte_end":14835842,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14835847,"byte_end":14835916,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14835921,"byte_end":14835924,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14835929,"byte_end":14836003,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836008,"byte_end":14836011,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836016,"byte_end":14836030,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836035,"byte_end":14836038,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836043,"byte_end":14836050,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836055,"byte_end":14836078,"line_start":100,"line_end":100,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836083,"byte_end":14836136,"line_start":101,"line_end":101,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836141,"byte_end":14836144,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836149,"byte_end":14836197,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836202,"byte_end":14836222,"line_start":104,"line_end":104,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836227,"byte_end":14836230,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836235,"byte_end":14836255,"line_start":106,"line_end":106,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836260,"byte_end":14836283,"line_start":107,"line_end":107,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836288,"byte_end":14836333,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836338,"byte_end":14836341,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836346,"byte_end":14836351,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/     let guard = Arc::clone(&lock).write_owned().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836356,"byte_end":14836414,"line_start":111,"line_end":111,"column_start":5,"column_end":63}},{"value":"/     let mut guard = OwnedRwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836419,"byte_end":14836527,"line_start":112,"line_end":112,"column_start":5,"column_end":113}},{"value":"/     *guard = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836532,"byte_end":14836551,"line_start":113,"line_end":113,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836556,"byte_end":14836561,"line_start":114,"line_end":114,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836566,"byte_end":14836569,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836574,"byte_end":14836617,"line_start":116,"line_end":116,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836622,"byte_end":14836629,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836634,"byte_end":14836641,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14836646,"byte_end":14836655,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14837884,"byte_end":14837895,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"into_mapped","qualname":"<OwnedRwLockWriteGuard<T>>::into_mapped","value":"fn into_mapped(Self) -> OwnedRwLockMappedWriteGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `OwnedRwLockWriteGuard` into an\n `OwnedRwLockMappedWriteGuard`. This method can be used to store a\n non-mapped guard in a struct field that expects a mapped guard.","sig":null,"attributes":[{"value":"/ Converts this `OwnedRwLockWriteGuard` into an","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14837571,"byte_end":14837620,"line_start":149,"line_end":149,"column_start":5,"column_end":54}},{"value":"/ `OwnedRwLockMappedWriteGuard`. This method can be used to store a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14837625,"byte_end":14837694,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ non-mapped guard in a struct field that expects a mapped guard.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14837699,"byte_end":14837766,"line_start":151,"line_end":151,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14837771,"byte_end":14837774,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `OwnedRwLockWriteGuard::map(guard, |me| me)`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14837779,"byte_end":14837858,"line_start":153,"line_end":153,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14837863,"byte_end":14837872,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14839128,"byte_end":14839137,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<OwnedRwLockWriteGuard<T>>::downgrade","value":"fn downgrade(Self) -> OwnedRwLockReadGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14837988,"byte_end":14838060,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838065,"byte_end":14838134,"line_start":160,"line_end":160,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838139,"byte_end":14838142,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838147,"byte_end":14838225,"line_start":162,"line_end":162,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838230,"byte_end":14838306,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838311,"byte_end":14838323,"line_start":164,"line_end":164,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838328,"byte_end":14838331,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838336,"byte_end":14838410,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838415,"byte_end":14838432,"line_start":167,"line_end":167,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838437,"byte_end":14838440,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838445,"byte_end":14838459,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838464,"byte_end":14838467,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838472,"byte_end":14838479,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838484,"byte_end":14838514,"line_start":172,"line_end":172,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838519,"byte_end":14838544,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838549,"byte_end":14838554,"line_start":174,"line_end":174,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838559,"byte_end":14838579,"line_start":175,"line_end":175,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838584,"byte_end":14838607,"line_start":176,"line_end":176,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838612,"byte_end":14838652,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838657,"byte_end":14838660,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let n = lock.clone().write_owned().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838665,"byte_end":14838710,"line_start":179,"line_end":179,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838715,"byte_end":14838718,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838723,"byte_end":14838758,"line_start":181,"line_end":181,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838763,"byte_end":14838805,"line_start":182,"line_end":182,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write_owned().await = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838810,"byte_end":14838855,"line_start":183,"line_end":183,"column_start":5,"column_end":50}},{"value":"/ });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838860,"byte_end":14838867,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838872,"byte_end":14838875,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838880,"byte_end":14838906,"line_start":186,"line_end":186,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838911,"byte_end":14838956,"line_start":187,"line_end":187,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838961,"byte_end":14838964,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838969,"byte_end":14838981,"line_start":189,"line_end":189,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14838986,"byte_end":14839012,"line_start":190,"line_end":190,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14839017,"byte_end":14839092,"line_start":191,"line_end":191,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14839097,"byte_end":14839104,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14839109,"byte_end":14839116,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14840526,"byte_end":14840531,"line_start":237,"line_end":237,"column_start":8,"column_end":13},"name":"deref","qualname":"<OwnedRwLockWriteGuard<T> as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ T","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2721},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14840655,"byte_end":14840664,"line_start":243,"line_end":243,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<OwnedRwLockWriteGuard<T> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2724},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14840822,"byte_end":14840825,"line_start":252,"line_end":252,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OwnedRwLockWriteGuard<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14841017,"byte_end":14841020,"line_start":261,"line_end":261,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OwnedRwLockWriteGuard<T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14841179,"byte_end":14841183,"line_start":267,"line_end":267,"column_start":8,"column_end":12},"name":"drop","qualname":"<OwnedRwLockWriteGuard<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2754},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14842221,"byte_end":14842248,"line_start":17,"line_end":17,"column_start":12,"column_end":39},"name":"OwnedRwLockMappedWriteGuard","qualname":"::sync::rwlock::owned_write_guard_mapped::OwnedRwLockMappedWriteGuard","value":"OwnedRwLockMappedWriteGuard {  }","parent":null,"children":[{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2760}],"decl_id":null,"docs":" Owned RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14841754,"byte_end":14841836,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14841837,"byte_end":14841849,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14841850,"byte_end":14841853,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This structure is created by [mapping] an [`OwnedRwLockWriteGuard`]. It is a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14841854,"byte_end":14841934,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ separate type from `OwnedRwLockWriteGuard` to disallow downgrading a mapped","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14841935,"byte_end":14842014,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ guard, since doing so can cause undefined behavior.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14842015,"byte_end":14842070,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14842071,"byte_end":14842074,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [mapping]: method@crate::sync::OwnedRwLockWriteGuard::map","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14842075,"byte_end":14842136,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/ [`OwnedRwLockWriteGuard`]: struct@crate::sync::OwnedRwLockWriteGuard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14842137,"byte_end":14842209,"line_start":16,"line_end":16,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843744,"byte_end":14843747,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockMappedWriteGuard<T, U>>::map","value":"fn map<F, V>(Self, F) -> OwnedRwLockMappedWriteGuard<T, V> where V: ?Sized,\nF: for<'_> FnOnce(&'_ mut U) -> &'_ mut V","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `OwnedRwLockMappedWriteGuard` for a component of the locked\n data.","sig":null,"attributes":[{"value":"/ Makes a new `OwnedRwLockMappedWriteGuard` for a component of the locked","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14842691,"byte_end":14842766,"line_start":28,"line_end":28,"column_start":5,"column_end":80}},{"value":"/ data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14842771,"byte_end":14842780,"line_start":29,"line_end":29,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14842785,"byte_end":14842788,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockMappedWriteGuard` passed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14842793,"byte_end":14842867,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ in already locked the data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14842872,"byte_end":14842903,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14842908,"byte_end":14842911,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14842916,"byte_end":14842975,"line_start":34,"line_end":34,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14842980,"byte_end":14843055,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843060,"byte_end":14843116,"line_start":36,"line_end":36,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843121,"byte_end":14843124,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843129,"byte_end":14843143,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843148,"byte_end":14843151,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843156,"byte_end":14843163,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843168,"byte_end":14843191,"line_start":41,"line_end":41,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843196,"byte_end":14843249,"line_start":42,"line_end":42,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843254,"byte_end":14843257,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843262,"byte_end":14843310,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843315,"byte_end":14843335,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843340,"byte_end":14843343,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843348,"byte_end":14843368,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843373,"byte_end":14843396,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843401,"byte_end":14843446,"line_start":49,"line_end":49,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843451,"byte_end":14843454,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843459,"byte_end":14843464,"line_start":51,"line_end":51,"column_start":5,"column_end":10}},{"value":"/     let lock = Arc::clone(&lock);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843469,"byte_end":14843506,"line_start":52,"line_end":52,"column_start":5,"column_end":42}},{"value":"/     let mut mapped = OwnedRwLockWriteGuard::map(lock.write_owned().await, |f| &mut f.0);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843511,"byte_end":14843603,"line_start":53,"line_end":53,"column_start":5,"column_end":97}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843608,"byte_end":14843628,"line_start":54,"line_end":54,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843633,"byte_end":14843638,"line_start":55,"line_end":55,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843643,"byte_end":14843646,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843651,"byte_end":14843694,"line_start":57,"line_end":57,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843699,"byte_end":14843706,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843711,"byte_end":14843718,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14843723,"byte_end":14843732,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845687,"byte_end":14845694,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockMappedWriteGuard<T, U>>::try_map","value":"fn try_map<F, V>(Self, F) -> Result<OwnedRwLockMappedWriteGuard<T, V>, Self>\nwhere V: ?Sized, F: for<'_> FnOnce(&'_ mut U) -> Option<&'_ mut V>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new `OwnedRwLockMappedWriteGuard` for a component\n of the locked data. The original guard is returned if the closure\n returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new `OwnedRwLockMappedWriteGuard` for a component","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14844506,"byte_end":14844578,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ of the locked data. The original guard is returned if the closure","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14844583,"byte_end":14844652,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"/ returns `None`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14844657,"byte_end":14844676,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14844681,"byte_end":14844684,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockMappedWriteGuard` passed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14844689,"byte_end":14844763,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ in already locked the data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14844768,"byte_end":14844799,"line_start":88,"line_end":88,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14844804,"byte_end":14844807,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14844812,"byte_end":14844863,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockMappedWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14844868,"byte_end":14844954,"line_start":91,"line_end":91,"column_start":5,"column_end":91}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14844959,"byte_end":14845023,"line_start":92,"line_end":92,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845028,"byte_end":14845031,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845036,"byte_end":14845050,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845055,"byte_end":14845058,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845063,"byte_end":14845070,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845075,"byte_end":14845098,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845103,"byte_end":14845156,"line_start":98,"line_end":98,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845161,"byte_end":14845164,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845169,"byte_end":14845217,"line_start":100,"line_end":100,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845222,"byte_end":14845242,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845247,"byte_end":14845250,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845255,"byte_end":14845275,"line_start":103,"line_end":103,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845280,"byte_end":14845303,"line_start":104,"line_end":104,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845308,"byte_end":14845353,"line_start":105,"line_end":105,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845358,"byte_end":14845361,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845366,"byte_end":14845371,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/     let guard = Arc::clone(&lock).write_owned().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845376,"byte_end":14845434,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/     let mut guard = OwnedRwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845439,"byte_end":14845547,"line_start":109,"line_end":109,"column_start":5,"column_end":113}},{"value":"/     *guard = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845552,"byte_end":14845571,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845576,"byte_end":14845581,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845586,"byte_end":14845589,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845594,"byte_end":14845637,"line_start":113,"line_end":113,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845642,"byte_end":14845649,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845654,"byte_end":14845661,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14845666,"byte_end":14845675,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2774},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14846695,"byte_end":14846700,"line_start":149,"line_end":149,"column_start":8,"column_end":13},"name":"deref","qualname":"<OwnedRwLockMappedWriteGuard<T, U> as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ U","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14846844,"byte_end":14846853,"line_start":155,"line_end":155,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<OwnedRwLockMappedWriteGuard<T, U> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut U","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14847031,"byte_end":14847034,"line_start":164,"line_end":164,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OwnedRwLockMappedWriteGuard<T, U> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2786},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14847246,"byte_end":14847249,"line_start":173,"line_end":173,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OwnedRwLockMappedWriteGuard<T, U> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14847428,"byte_end":14847432,"line_start":179,"line_end":179,"column_start":8,"column_end":12},"name":"drop","qualname":"<OwnedRwLockMappedWriteGuard<T, U> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2807},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848288,"byte_end":14848303,"line_start":16,"line_end":16,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::read_guard::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2812}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14847960,"byte_end":14848032,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848033,"byte_end":14848045,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848046,"byte_end":14848049,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848050,"byte_end":14848105,"line_start":10,"line_end":10,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848106,"byte_end":14848121,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848122,"byte_end":14848125,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@crate::sync::RwLock::read","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848126,"byte_end":14848172,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848173,"byte_end":14848215,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"must_use = \"if unused the RwLock will immediately unlock\"","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848216,"byte_end":14848276,"line_start":15,"line_end":15,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2816},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849761,"byte_end":14849764,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"fn map<F, U>(Self, F) -> RwLockReadGuard where U: ?Sized,\nF: for<'_> FnOnce(&'_ T) -> &'_ U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848586,"byte_end":14848655,"line_start":25,"line_end":25,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848660,"byte_end":14848663,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848668,"byte_end":14848741,"line_start":27,"line_end":27,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848746,"byte_end":14848766,"line_start":28,"line_end":28,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848771,"byte_end":14848774,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848779,"byte_end":14848830,"line_start":30,"line_end":30,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848835,"byte_end":14848905,"line_start":31,"line_end":31,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848910,"byte_end":14848974,"line_start":32,"line_end":32,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848979,"byte_end":14848982,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848987,"byte_end":14849059,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849064,"byte_end":14849090,"line_start":35,"line_end":35,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849095,"byte_end":14849098,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849103,"byte_end":14849212,"line_start":37,"line_end":37,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849217,"byte_end":14849280,"line_start":38,"line_end":38,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849285,"byte_end":14849288,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849293,"byte_end":14849307,"line_start":40,"line_end":40,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849312,"byte_end":14849315,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849320,"byte_end":14849327,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849332,"byte_end":14849379,"line_start":43,"line_end":43,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849384,"byte_end":14849387,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849392,"byte_end":14849440,"line_start":45,"line_end":45,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849445,"byte_end":14849465,"line_start":46,"line_end":46,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849470,"byte_end":14849473,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849478,"byte_end":14849498,"line_start":48,"line_end":48,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849503,"byte_end":14849526,"line_start":49,"line_end":49,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849531,"byte_end":14849566,"line_start":50,"line_end":50,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849571,"byte_end":14849574,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849579,"byte_end":14849613,"line_start":52,"line_end":52,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849618,"byte_end":14849672,"line_start":53,"line_end":53,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849677,"byte_end":14849680,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849685,"byte_end":14849711,"line_start":55,"line_end":55,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849716,"byte_end":14849723,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849728,"byte_end":14849735,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14849740,"byte_end":14849749,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851661,"byte_end":14851668,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"fn try_map<F, U>(Self, F) -> Result<RwLockReadGuard, Self> where U: ?Sized,\nF: for<'_> FnOnce(&'_ T) -> Option<&'_ U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14850344,"byte_end":14850413,"line_start":79,"line_end":79,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14850418,"byte_end":14850488,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14850493,"byte_end":14850504,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14850509,"byte_end":14850512,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14850517,"byte_end":14850590,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14850595,"byte_end":14850615,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14850620,"byte_end":14850623,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14850628,"byte_end":14850687,"line_start":86,"line_end":86,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14850692,"byte_end":14850772,"line_start":87,"line_end":87,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14850777,"byte_end":14850826,"line_start":88,"line_end":88,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14850831,"byte_end":14850834,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14850839,"byte_end":14850915,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14850920,"byte_end":14850946,"line_start":91,"line_end":91,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14850951,"byte_end":14850954,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14850959,"byte_end":14851076,"line_start":93,"line_end":93,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851081,"byte_end":14851144,"line_start":94,"line_end":94,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851149,"byte_end":14851152,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851157,"byte_end":14851171,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851176,"byte_end":14851179,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851184,"byte_end":14851191,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851196,"byte_end":14851243,"line_start":99,"line_end":99,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851248,"byte_end":14851251,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851256,"byte_end":14851304,"line_start":101,"line_end":101,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851309,"byte_end":14851329,"line_start":102,"line_end":102,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851334,"byte_end":14851337,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851342,"byte_end":14851362,"line_start":104,"line_end":104,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851367,"byte_end":14851390,"line_start":105,"line_end":105,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851395,"byte_end":14851430,"line_start":106,"line_end":106,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851435,"byte_end":14851438,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851443,"byte_end":14851477,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851482,"byte_end":14851572,"line_start":109,"line_end":109,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851577,"byte_end":14851580,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851585,"byte_end":14851611,"line_start":111,"line_end":111,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851616,"byte_end":14851623,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851628,"byte_end":14851635,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14851640,"byte_end":14851649,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14852445,"byte_end":14852450,"line_start":142,"line_end":142,"column_start":8,"column_end":13},"name":"deref","qualname":"<RwLockReadGuard as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ T","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2829},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14852598,"byte_end":14852601,"line_start":151,"line_end":151,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RwLockReadGuard as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2833},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14852795,"byte_end":14852798,"line_start":160,"line_end":160,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RwLockReadGuard as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2837},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14852959,"byte_end":14852963,"line_start":166,"line_end":166,"column_start":8,"column_end":12},"name":"drop","qualname":"<RwLockReadGuard as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2860},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14853858,"byte_end":14853874,"line_start":18,"line_end":18,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::write_guard::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2866}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14853523,"byte_end":14853599,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14853600,"byte_end":14853612,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14853613,"byte_end":14853616,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] method","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14853617,"byte_end":14853670,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/ on [`RwLock`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14853671,"byte_end":14853689,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14853690,"byte_end":14853693,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@crate::sync::RwLock::write","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14853694,"byte_end":14853742,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14853743,"byte_end":14853785,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"must_use = \"if unused the RwLock will immediately unlock\"","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14853786,"byte_end":14853846,"line_start":17,"line_end":17,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855516,"byte_end":14855519,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockWriteGuard>::map","value":"fn map<F, U>(Self, F) -> RwLockMappedWriteGuard where U: ?Sized,\nF: for<'_> FnOnce(&'_ mut T) -> &'_ mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`RwLockMappedWriteGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new [`RwLockMappedWriteGuard`] for a component of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854198,"byte_end":14854276,"line_start":28,"line_end":28,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854281,"byte_end":14854284,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854289,"byte_end":14854363,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854368,"byte_end":14854388,"line_start":31,"line_end":31,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854393,"byte_end":14854396,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854401,"byte_end":14854460,"line_start":33,"line_end":33,"column_start":5,"column_end":64}},{"value":"/ `RwLockWriteGuard::map(..)`. A method would interfere with methods of","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854465,"byte_end":14854538,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ the same name on the contents of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854543,"byte_end":14854596,"line_start":35,"line_end":35,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854601,"byte_end":14854604,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854609,"byte_end":14854682,"line_start":37,"line_end":37,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854687,"byte_end":14854713,"line_start":38,"line_end":38,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854718,"byte_end":14854721,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854726,"byte_end":14854800,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854805,"byte_end":14854916,"line_start":41,"line_end":41,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854921,"byte_end":14854984,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854989,"byte_end":14854992,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854997,"byte_end":14855011,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855016,"byte_end":14855019,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855024,"byte_end":14855031,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855036,"byte_end":14855084,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855089,"byte_end":14855092,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855097,"byte_end":14855145,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855150,"byte_end":14855170,"line_start":50,"line_end":50,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855175,"byte_end":14855178,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855183,"byte_end":14855203,"line_start":52,"line_end":52,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855208,"byte_end":14855231,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855236,"byte_end":14855271,"line_start":54,"line_end":54,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855276,"byte_end":14855279,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855284,"byte_end":14855289,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855294,"byte_end":14855375,"line_start":57,"line_end":57,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855380,"byte_end":14855400,"line_start":58,"line_end":58,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855405,"byte_end":14855410,"line_start":59,"line_end":59,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855415,"byte_end":14855418,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855423,"byte_end":14855466,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855471,"byte_end":14855478,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855483,"byte_end":14855490,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14855495,"byte_end":14855504,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2873},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857700,"byte_end":14857707,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockWriteGuard>::try_map","value":"fn try_map<F, U>(Self, F) -> Result<RwLockMappedWriteGuard, Self> where\nU: ?Sized, F: for<'_> FnOnce(&'_ mut T) -> Option<&'_ mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`RwLockMappedWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`RwLockMappedWriteGuard`] for a component of","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14856210,"byte_end":14856283,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14856288,"byte_end":14856362,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14856367,"byte_end":14856378,"line_start":88,"line_end":88,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14856383,"byte_end":14856386,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14856391,"byte_end":14856465,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14856470,"byte_end":14856490,"line_start":91,"line_end":91,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14856495,"byte_end":14856498,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14856503,"byte_end":14856554,"line_start":93,"line_end":93,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14856559,"byte_end":14856634,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14856639,"byte_end":14856703,"line_start":95,"line_end":95,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14856708,"byte_end":14856711,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14856716,"byte_end":14856789,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14856794,"byte_end":14856824,"line_start":98,"line_end":98,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14856829,"byte_end":14856832,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14856837,"byte_end":14856911,"line_start":100,"line_end":100,"column_start":5,"column_end":79}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14856916,"byte_end":14857035,"line_start":101,"line_end":101,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857040,"byte_end":14857103,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857108,"byte_end":14857111,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857116,"byte_end":14857130,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857135,"byte_end":14857138,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857143,"byte_end":14857150,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857155,"byte_end":14857203,"line_start":107,"line_end":107,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857208,"byte_end":14857211,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857216,"byte_end":14857264,"line_start":109,"line_end":109,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857269,"byte_end":14857289,"line_start":110,"line_end":110,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857294,"byte_end":14857297,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857302,"byte_end":14857322,"line_start":112,"line_end":112,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857327,"byte_end":14857350,"line_start":113,"line_end":113,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857355,"byte_end":14857390,"line_start":114,"line_end":114,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857395,"byte_end":14857398,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857403,"byte_end":14857408,"line_start":116,"line_end":116,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857413,"byte_end":14857452,"line_start":117,"line_end":117,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857457,"byte_end":14857560,"line_start":118,"line_end":118,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857565,"byte_end":14857584,"line_start":119,"line_end":119,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857589,"byte_end":14857594,"line_start":120,"line_end":120,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857599,"byte_end":14857602,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857607,"byte_end":14857650,"line_start":122,"line_end":122,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857655,"byte_end":14857662,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857667,"byte_end":14857674,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14857679,"byte_end":14857688,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14858833,"byte_end":14858844,"line_start":159,"line_end":159,"column_start":12,"column_end":23},"name":"into_mapped","qualname":"<RwLockWriteGuard>::into_mapped","value":"fn into_mapped(Self) -> RwLockMappedWriteGuard","parent":null,"children":[],"decl_id":null,"docs":" Converts this `RwLockWriteGuard` into an `RwLockMappedWriteGuard`. This\n method can be used to store a non-mapped guard in a struct field that\n expects a mapped guard.","sig":null,"attributes":[{"value":"/ Converts this `RwLockWriteGuard` into an `RwLockMappedWriteGuard`. This","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14858535,"byte_end":14858610,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ method can be used to store a non-mapped guard in a struct field that","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14858615,"byte_end":14858688,"line_start":154,"line_end":154,"column_start":5,"column_end":78}},{"value":"/ expects a mapped guard.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14858693,"byte_end":14858720,"line_start":155,"line_end":155,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14858725,"byte_end":14858728,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `RwLockWriteGuard::map(guard, |me| me)`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14858733,"byte_end":14858807,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14858812,"byte_end":14858821,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2878},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14860123,"byte_end":14860132,"line_start":200,"line_end":200,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14858948,"byte_end":14859020,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859025,"byte_end":14859094,"line_start":164,"line_end":164,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859099,"byte_end":14859102,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859107,"byte_end":14859185,"line_start":166,"line_end":166,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859190,"byte_end":14859266,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859271,"byte_end":14859283,"line_start":168,"line_end":168,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859288,"byte_end":14859291,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859296,"byte_end":14859370,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859375,"byte_end":14859392,"line_start":171,"line_end":171,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859397,"byte_end":14859400,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859405,"byte_end":14859419,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859424,"byte_end":14859427,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859432,"byte_end":14859439,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859444,"byte_end":14859474,"line_start":176,"line_end":176,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859479,"byte_end":14859504,"line_start":177,"line_end":177,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859509,"byte_end":14859514,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859519,"byte_end":14859539,"line_start":179,"line_end":179,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859544,"byte_end":14859567,"line_start":180,"line_end":180,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859572,"byte_end":14859612,"line_start":181,"line_end":181,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859617,"byte_end":14859620,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let n = lock.write().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859625,"byte_end":14859656,"line_start":183,"line_end":183,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859661,"byte_end":14859664,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859669,"byte_end":14859704,"line_start":185,"line_end":185,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859709,"byte_end":14859751,"line_start":186,"line_end":186,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write().await = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859756,"byte_end":14859795,"line_start":187,"line_end":187,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859800,"byte_end":14859807,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859812,"byte_end":14859815,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859820,"byte_end":14859846,"line_start":190,"line_end":190,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859851,"byte_end":14859896,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859901,"byte_end":14859904,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859909,"byte_end":14859921,"line_start":193,"line_end":193,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859926,"byte_end":14859952,"line_start":194,"line_end":194,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14859957,"byte_end":14860032,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14860037,"byte_end":14860044,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14860049,"byte_end":14860056,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14860061,"byte_end":14860064,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14860069,"byte_end":14860111,"line_start":199,"line_end":199,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2882},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14861445,"byte_end":14861450,"line_start":241,"line_end":241,"column_start":8,"column_end":13},"name":"deref","qualname":"<RwLockWriteGuard as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ T","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2885},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14861573,"byte_end":14861582,"line_start":247,"line_end":247,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<RwLockWriteGuard as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2889},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14861743,"byte_end":14861746,"line_start":256,"line_end":256,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RwLockWriteGuard as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2893},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14861941,"byte_end":14861944,"line_start":265,"line_end":265,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RwLockWriteGuard as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2897},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14862106,"byte_end":14862110,"line_start":271,"line_end":271,"column_start":8,"column_end":12},"name":"drop","qualname":"<RwLockWriteGuard as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2914},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14863015,"byte_end":14863037,"line_start":16,"line_end":16,"column_start":12,"column_end":34},"name":"RwLockMappedWriteGuard","qualname":"::sync::rwlock::write_guard_mapped::RwLockMappedWriteGuard","value":"RwLockMappedWriteGuard {  }","parent":null,"children":[{"krate":0,"index":2917},{"krate":0,"index":2918},{"krate":0,"index":2919},{"krate":0,"index":2920}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14862579,"byte_end":14862655,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14862656,"byte_end":14862668,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14862669,"byte_end":14862672,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure is created by [mapping] an [`RwLockWriteGuard`]. It is a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14862673,"byte_end":14862748,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ separate type from `RwLockWriteGuard` to disallow downgrading a mapped","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14862749,"byte_end":14862823,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ guard, since doing so can cause undefined behavior.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14862824,"byte_end":14862879,"line_start":12,"line_end":12,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14862880,"byte_end":14862883,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [mapping]: method@crate::sync::RwLockWriteGuard::map","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14862884,"byte_end":14862940,"line_start":14,"line_end":14,"column_start":1,"column_end":57}},{"value":"/ [`RwLockWriteGuard`]: struct@crate::sync::RwLockWriteGuard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14862941,"byte_end":14863003,"line_start":15,"line_end":15,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2924},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864616,"byte_end":14864619,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockMappedWriteGuard>::map","value":"fn map<F, U>(Self, F) -> RwLockMappedWriteGuard where U: ?Sized,\nF: for<'_> FnOnce(&'_ mut T) -> &'_ mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `RwLockMappedWriteGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new `RwLockMappedWriteGuard` for a component of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14863367,"byte_end":14863443,"line_start":26,"line_end":26,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14863448,"byte_end":14863451,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockMappedWriteGuard` passed in already","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14863456,"byte_end":14863536,"line_start":28,"line_end":28,"column_start":5,"column_end":85}},{"value":"/ locked the data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14863541,"byte_end":14863561,"line_start":29,"line_end":29,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14863566,"byte_end":14863569,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14863574,"byte_end":14863633,"line_start":31,"line_end":31,"column_start":5,"column_end":64}},{"value":"/ `RwLockMappedWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14863638,"byte_end":14863714,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14863719,"byte_end":14863775,"line_start":33,"line_end":33,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14863780,"byte_end":14863783,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14863788,"byte_end":14863861,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14863866,"byte_end":14863892,"line_start":36,"line_end":36,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14863897,"byte_end":14863900,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14863905,"byte_end":14864016,"line_start":38,"line_end":38,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864021,"byte_end":14864084,"line_start":39,"line_end":39,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864089,"byte_end":14864092,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864097,"byte_end":14864111,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864116,"byte_end":14864119,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864124,"byte_end":14864131,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864136,"byte_end":14864184,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864189,"byte_end":14864192,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864197,"byte_end":14864245,"line_start":46,"line_end":46,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864250,"byte_end":14864270,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864275,"byte_end":14864278,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864283,"byte_end":14864303,"line_start":49,"line_end":49,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864308,"byte_end":14864331,"line_start":50,"line_end":50,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864336,"byte_end":14864371,"line_start":51,"line_end":51,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864376,"byte_end":14864379,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864384,"byte_end":14864389,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864394,"byte_end":14864475,"line_start":54,"line_end":54,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864480,"byte_end":14864500,"line_start":55,"line_end":55,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864505,"byte_end":14864510,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864515,"byte_end":14864518,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864523,"byte_end":14864566,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864571,"byte_end":14864578,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864583,"byte_end":14864590,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14864595,"byte_end":14864604,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866733,"byte_end":14866740,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockMappedWriteGuard>::try_map","value":"fn try_map<F, U>(Self, F) -> Result<RwLockMappedWriteGuard, Self> where\nU: ?Sized, F: for<'_> FnOnce(&'_ mut T) -> Option<&'_ mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockMappedWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockMappedWriteGuard`] for a component of","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14865311,"byte_end":14865383,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14865388,"byte_end":14865462,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14865467,"byte_end":14865478,"line_start":86,"line_end":86,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14865483,"byte_end":14865486,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockMappedWriteGuard` passed in already","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14865491,"byte_end":14865571,"line_start":88,"line_end":88,"column_start":5,"column_end":85}},{"value":"/ locked the data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14865576,"byte_end":14865596,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14865601,"byte_end":14865604,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14865609,"byte_end":14865660,"line_start":91,"line_end":91,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockMappedWriteGuard::try_map(...)`. A method would interfere","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14865665,"byte_end":14865741,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/ with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14865746,"byte_end":14865815,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14865820,"byte_end":14865823,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14865828,"byte_end":14865901,"line_start":95,"line_end":95,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14865906,"byte_end":14865936,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14865941,"byte_end":14865944,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14865949,"byte_end":14866068,"line_start":98,"line_end":98,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866073,"byte_end":14866136,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866141,"byte_end":14866144,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866149,"byte_end":14866163,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866168,"byte_end":14866171,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866176,"byte_end":14866183,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866188,"byte_end":14866236,"line_start":104,"line_end":104,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866241,"byte_end":14866244,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866249,"byte_end":14866297,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866302,"byte_end":14866322,"line_start":107,"line_end":107,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866327,"byte_end":14866330,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866335,"byte_end":14866355,"line_start":109,"line_end":109,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866360,"byte_end":14866383,"line_start":110,"line_end":110,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866388,"byte_end":14866423,"line_start":111,"line_end":111,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866428,"byte_end":14866431,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866436,"byte_end":14866441,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866446,"byte_end":14866485,"line_start":114,"line_end":114,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866490,"byte_end":14866593,"line_start":115,"line_end":115,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866598,"byte_end":14866617,"line_start":116,"line_end":116,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866622,"byte_end":14866627,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866632,"byte_end":14866635,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866640,"byte_end":14866683,"line_start":119,"line_end":119,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866688,"byte_end":14866695,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866700,"byte_end":14866707,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14866712,"byte_end":14866721,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2933},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14867659,"byte_end":14867664,"line_start":155,"line_end":155,"column_start":8,"column_end":13},"name":"deref","qualname":"<RwLockMappedWriteGuard as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ T","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2936},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14867793,"byte_end":14867802,"line_start":161,"line_end":161,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<RwLockMappedWriteGuard as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2940},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14867969,"byte_end":14867972,"line_start":170,"line_end":170,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RwLockMappedWriteGuard as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2944},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14868173,"byte_end":14868176,"line_start":179,"line_end":179,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RwLockMappedWriteGuard as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2948},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14868344,"byte_end":14868348,"line_start":185,"line_end":185,"column_start":8,"column_end":12},"name":"drop","qualname":"<RwLockMappedWriteGuard as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3610},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14794121,"byte_end":14794127,"line_start":90,"line_end":90,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":3612},{"krate":0,"index":3613},{"krate":0,"index":3614}],"decl_id":null,"docs":" An asynchronous reader-writer lock.","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14791590,"byte_end":14791629,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14791630,"byte_end":14791633,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14791634,"byte_end":14791711,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14791712,"byte_end":14791791,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14791792,"byte_end":14791871,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14791872,"byte_end":14791930,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14791931,"byte_end":14791934,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14791935,"byte_end":14792013,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14792014,"byte_end":14792092,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14792093,"byte_end":14792171,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14792172,"byte_end":14792237,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14792238,"byte_end":14792241,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14792242,"byte_end":14792306,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14792307,"byte_end":14792379,"line_start":43,"line_end":43,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14792380,"byte_end":14792460,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14792461,"byte_end":14792541,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14792542,"byte_end":14792622,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14792623,"byte_end":14792692,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14792693,"byte_end":14792763,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14792764,"byte_end":14792802,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14792803,"byte_end":14792806,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14792807,"byte_end":14792884,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14792885,"byte_end":14792970,"line_start":52,"line_end":52,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14792971,"byte_end":14793051,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793052,"byte_end":14793099,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793100,"byte_end":14793172,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793173,"byte_end":14793176,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793177,"byte_end":14793191,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793192,"byte_end":14793195,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793196,"byte_end":14793203,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793204,"byte_end":14793232,"line_start":60,"line_end":60,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793233,"byte_end":14793236,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793237,"byte_end":14793255,"line_start":62,"line_end":62,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793256,"byte_end":14793277,"line_start":63,"line_end":63,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793278,"byte_end":14793312,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793313,"byte_end":14793316,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793317,"byte_end":14793365,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793366,"byte_end":14793375,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793376,"byte_end":14793415,"line_start":68,"line_end":68,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793416,"byte_end":14793455,"line_start":69,"line_end":69,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793456,"byte_end":14793487,"line_start":70,"line_end":70,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793488,"byte_end":14793519,"line_start":71,"line_end":71,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793520,"byte_end":14793569,"line_start":72,"line_end":72,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793570,"byte_end":14793573,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793574,"byte_end":14793625,"line_start":74,"line_end":74,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793626,"byte_end":14793635,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793636,"byte_end":14793679,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793680,"byte_end":14793700,"line_start":77,"line_end":77,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793701,"byte_end":14793731,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793732,"byte_end":14793771,"line_start":79,"line_end":79,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793772,"byte_end":14793777,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793778,"byte_end":14793785,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793786,"byte_end":14793789,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793790,"byte_end":14793824,"line_start":83,"line_end":83,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793825,"byte_end":14793854,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793855,"byte_end":14793902,"line_start":85,"line_end":85,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793903,"byte_end":14793952,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793953,"byte_end":14793990,"line_start":87,"line_end":87,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14793991,"byte_end":14794092,"line_start":88,"line_end":88,"column_start":1,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14798251,"byte_end":14798254,"line_start":206,"line_end":206,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14798021,"byte_end":14798084,"line_start":196,"line_end":196,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14798089,"byte_end":14798092,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14798097,"byte_end":14798111,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14798116,"byte_end":14798119,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14798124,"byte_end":14798131,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14798136,"byte_end":14798164,"line_start":201,"line_end":201,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14798169,"byte_end":14798172,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14798177,"byte_end":14798207,"line_start":203,"line_end":203,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14798212,"byte_end":14798219,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14798224,"byte_end":14798239,"line_start":205,"line_end":205,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14800209,"byte_end":14800225,"line_start":272,"line_end":272,"column_start":12,"column_end":28},"name":"with_max_readers","qualname":"<RwLock<T>>::with_max_readers","value":"fn with_max_readers(T, u32) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked\n and allows a maximum of `max_reads` concurrent readers.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14799804,"byte_end":14799866,"line_start":257,"line_end":257,"column_start":5,"column_end":67}},{"value":"/ and allows a maximum of `max_reads` concurrent readers.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14799871,"byte_end":14799930,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14799935,"byte_end":14799938,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14799943,"byte_end":14799957,"line_start":260,"line_end":260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14799962,"byte_end":14799965,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14799970,"byte_end":14799977,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14799982,"byte_end":14800010,"line_start":263,"line_end":263,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14800015,"byte_end":14800018,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::with_max_readers(5, 1024);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14800023,"byte_end":14800072,"line_start":265,"line_end":265,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14800077,"byte_end":14800084,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14800089,"byte_end":14800092,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14800097,"byte_end":14800109,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14800114,"byte_end":14800117,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ Panics if `max_reads` is more than `u32::MAX >> 3`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14800122,"byte_end":14800177,"line_start":270,"line_end":270,"column_start":5,"column_end":60}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14800182,"byte_end":14800197,"line_start":271,"line_end":271,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3004},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14805182,"byte_end":14805186,"line_start":425,"line_end":425,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"async fn read<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14803493,"byte_end":14803566,"line_start":380,"line_end":380,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14803571,"byte_end":14803617,"line_start":381,"line_end":381,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14803622,"byte_end":14803625,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14803630,"byte_end":14803703,"line_start":383,"line_end":383,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14803708,"byte_end":14803783,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14803788,"byte_end":14803791,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14803796,"byte_end":14803869,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14803874,"byte_end":14803943,"line_start":387,"line_end":387,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14803948,"byte_end":14804022,"line_start":388,"line_end":388,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804027,"byte_end":14804100,"line_start":389,"line_end":389,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804105,"byte_end":14804129,"line_start":390,"line_end":390,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804134,"byte_end":14804137,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804142,"byte_end":14804216,"line_start":392,"line_end":392,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804221,"byte_end":14804238,"line_start":393,"line_end":393,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804243,"byte_end":14804246,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804251,"byte_end":14804270,"line_start":395,"line_end":395,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804275,"byte_end":14804278,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804283,"byte_end":14804356,"line_start":397,"line_end":397,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `read` makes you lose your place in","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804361,"byte_end":14804437,"line_start":398,"line_end":398,"column_start":5,"column_end":81}},{"value":"/ the queue.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804442,"byte_end":14804456,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804461,"byte_end":14804464,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804469,"byte_end":14804483,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804488,"byte_end":14804491,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804496,"byte_end":14804503,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804508,"byte_end":14804531,"line_start":404,"line_end":404,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804536,"byte_end":14804564,"line_start":405,"line_end":405,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804569,"byte_end":14804572,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804577,"byte_end":14804595,"line_start":407,"line_end":407,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804600,"byte_end":14804621,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804626,"byte_end":14804670,"line_start":409,"line_end":409,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804675,"byte_end":14804709,"line_start":410,"line_end":410,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804714,"byte_end":14804717,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804722,"byte_end":14804756,"line_start":412,"line_end":412,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804761,"byte_end":14804787,"line_start":413,"line_end":413,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804792,"byte_end":14804795,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804800,"byte_end":14804833,"line_start":415,"line_end":415,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804838,"byte_end":14804908,"line_start":416,"line_end":416,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804913,"byte_end":14804953,"line_start":417,"line_end":417,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804958,"byte_end":14804988,"line_start":418,"line_end":418,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14804993,"byte_end":14805050,"line_start":419,"line_end":419,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14805055,"byte_end":14805058,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14805063,"byte_end":14805121,"line_start":421,"line_end":421,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14805126,"byte_end":14805142,"line_start":422,"line_end":422,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14805147,"byte_end":14805152,"line_start":423,"line_end":423,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14805157,"byte_end":14805164,"line_start":424,"line_end":424,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3008},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808181,"byte_end":14808194,"line_start":511,"line_end":511,"column_start":12,"column_end":25},"name":"blocking_read","qualname":"<RwLock<T>>::blocking_read","value":"fn blocking_read<'_>(&'_ Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Blockingly locks this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Blockingly locks this `RwLock` with shared read access.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14806369,"byte_end":14806428,"line_start":462,"line_end":462,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14806433,"byte_end":14806436,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14806441,"byte_end":14806492,"line_start":464,"line_end":464,"column_start":5,"column_end":56}},{"value":"/ need to use this rwlock in asynchronous code as well as in synchronous code.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14806497,"byte_end":14806577,"line_start":465,"line_end":465,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14806582,"byte_end":14806585,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the read access of this `RwLock` when dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14806590,"byte_end":14806678,"line_start":467,"line_end":467,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14806683,"byte_end":14806686,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14806691,"byte_end":14806703,"line_start":469,"line_end":469,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14806708,"byte_end":14806711,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution context.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14806716,"byte_end":14806792,"line_start":471,"line_end":471,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14806797,"byte_end":14806800,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/   - If you find yourself in an asynchronous execution context and needing","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14806805,"byte_end":14806882,"line_start":473,"line_end":473,"column_start":5,"column_end":82}},{"value":"/     to call some (synchronous) function which performs one of these","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14806887,"byte_end":14806958,"line_start":474,"line_end":474,"column_start":5,"column_end":76}},{"value":"/     `blocking_` operations, then consider wrapping that call inside","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14806963,"byte_end":14807034,"line_start":475,"line_end":475,"column_start":5,"column_end":76}},{"value":"/     [`spawn_blocking()`][crate::runtime::Handle::spawn_blocking]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807039,"byte_end":14807107,"line_start":476,"line_end":476,"column_start":5,"column_end":73}},{"value":"/     (or [`block_in_place()`][crate::task::block_in_place]).","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807112,"byte_end":14807175,"line_start":477,"line_end":477,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807180,"byte_end":14807183,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807188,"byte_end":14807202,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807207,"byte_end":14807210,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807215,"byte_end":14807222,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807227,"byte_end":14807250,"line_start":482,"line_end":482,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807255,"byte_end":14807283,"line_start":483,"line_end":483,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807288,"byte_end":14807291,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807296,"byte_end":14807314,"line_start":485,"line_end":485,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807319,"byte_end":14807340,"line_start":486,"line_end":486,"column_start":5,"column_end":26}},{"value":"/     let rwlock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807345,"byte_end":14807391,"line_start":487,"line_end":487,"column_start":5,"column_end":51}},{"value":"/     let mut write_lock = rwlock.write().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807396,"byte_end":14807446,"line_start":488,"line_end":488,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807451,"byte_end":14807454,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/     let blocking_task = tokio::task::spawn_blocking({","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807459,"byte_end":14807516,"line_start":490,"line_end":490,"column_start":5,"column_end":62}},{"value":"/         let rwlock = Arc::clone(&rwlock);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807521,"byte_end":14807566,"line_start":491,"line_end":491,"column_start":5,"column_end":50}},{"value":"/         move || {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807571,"byte_end":14807592,"line_start":492,"line_end":492,"column_start":5,"column_end":26}},{"value":"/             // This shall block until the `write_lock` is released.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807597,"byte_end":14807668,"line_start":493,"line_end":493,"column_start":5,"column_end":76}},{"value":"/             let read_lock = rwlock.blocking_read();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807673,"byte_end":14807728,"line_start":494,"line_end":494,"column_start":5,"column_end":60}},{"value":"/             assert_eq!(*read_lock, 0);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807733,"byte_end":14807775,"line_start":495,"line_end":495,"column_start":5,"column_end":47}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807780,"byte_end":14807793,"line_start":496,"line_end":496,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807798,"byte_end":14807809,"line_start":497,"line_end":497,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807814,"byte_end":14807817,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/     *write_lock -= 1;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807822,"byte_end":14807847,"line_start":499,"line_end":499,"column_start":5,"column_end":30}},{"value":"/     drop(write_lock); // release the lock.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807852,"byte_end":14807898,"line_start":500,"line_end":500,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807903,"byte_end":14807906,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/     // Await the completion of the blocking task.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807911,"byte_end":14807964,"line_start":502,"line_end":502,"column_start":5,"column_end":58}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14807969,"byte_end":14808006,"line_start":503,"line_end":503,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808011,"byte_end":14808014,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/     // Assert uncontended.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808019,"byte_end":14808049,"line_start":505,"line_end":505,"column_start":5,"column_end":35}},{"value":"/     assert!(rwlock.try_write().is_ok());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808054,"byte_end":14808098,"line_start":506,"line_end":506,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808103,"byte_end":14808108,"line_start":507,"line_end":507,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808113,"byte_end":14808120,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808125,"byte_end":14808140,"line_start":509,"line_end":509,"column_start":5,"column_end":20}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808145,"byte_end":14808169,"line_start":510,"line_end":510,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3009},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14810363,"byte_end":14810373,"line_start":566,"line_end":566,"column_start":18,"column_end":28},"name":"read_owned","qualname":"<RwLock<T>>::read_owned","value":"async fn read_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808286,"byte_end":14808359,"line_start":515,"line_end":515,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808364,"byte_end":14808410,"line_start":516,"line_end":516,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808415,"byte_end":14808418,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808423,"byte_end":14808496,"line_start":518,"line_end":518,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808501,"byte_end":14808576,"line_start":519,"line_end":519,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808581,"byte_end":14808584,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::read`], except that the returned","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808589,"byte_end":14808663,"line_start":521,"line_end":521,"column_start":5,"column_end":79}},{"value":"/ guard references the `RwLock` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808668,"byte_end":14808742,"line_start":522,"line_end":522,"column_start":5,"column_end":79}},{"value":"/ it. Therefore, the `RwLock` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808747,"byte_end":14808819,"line_start":523,"line_end":523,"column_start":5,"column_end":77}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808824,"byte_end":14808899,"line_start":524,"line_end":524,"column_start":5,"column_end":80}},{"value":"/ the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808904,"byte_end":14808947,"line_start":525,"line_end":525,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808952,"byte_end":14808955,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14808960,"byte_end":14809033,"line_start":527,"line_end":527,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809038,"byte_end":14809107,"line_start":528,"line_end":528,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809112,"byte_end":14809186,"line_start":529,"line_end":529,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809191,"byte_end":14809264,"line_start":530,"line_end":530,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809269,"byte_end":14809293,"line_start":531,"line_end":531,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809298,"byte_end":14809301,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809306,"byte_end":14809380,"line_start":533,"line_end":533,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809385,"byte_end":14809402,"line_start":534,"line_end":534,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809407,"byte_end":14809410,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809415,"byte_end":14809434,"line_start":536,"line_end":536,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809439,"byte_end":14809442,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809447,"byte_end":14809520,"line_start":538,"line_end":538,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `read_owned` makes you lose your","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809525,"byte_end":14809598,"line_start":539,"line_end":539,"column_start":5,"column_end":78}},{"value":"/ place in the queue.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809603,"byte_end":14809626,"line_start":540,"line_end":540,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809631,"byte_end":14809634,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809639,"byte_end":14809653,"line_start":542,"line_end":542,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809658,"byte_end":14809661,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809666,"byte_end":14809673,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809678,"byte_end":14809701,"line_start":545,"line_end":545,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809706,"byte_end":14809734,"line_start":546,"line_end":546,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809739,"byte_end":14809742,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809747,"byte_end":14809765,"line_start":548,"line_end":548,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809770,"byte_end":14809791,"line_start":549,"line_end":549,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809796,"byte_end":14809840,"line_start":550,"line_end":550,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809845,"byte_end":14809879,"line_start":551,"line_end":551,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809884,"byte_end":14809887,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read_owned().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809892,"byte_end":14809932,"line_start":553,"line_end":553,"column_start":5,"column_end":45}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809937,"byte_end":14809963,"line_start":554,"line_end":554,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809968,"byte_end":14809971,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14809976,"byte_end":14810009,"line_start":556,"line_end":556,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14810014,"byte_end":14810084,"line_start":557,"line_end":557,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read_owned().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14810089,"byte_end":14810135,"line_start":558,"line_end":558,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14810140,"byte_end":14810170,"line_start":559,"line_end":559,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14810175,"byte_end":14810232,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14810237,"byte_end":14810240,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14810245,"byte_end":14810303,"line_start":562,"line_end":562,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14810308,"byte_end":14810324,"line_start":563,"line_end":563,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14810329,"byte_end":14810333,"line_start":564,"line_end":564,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14810338,"byte_end":14810345,"line_start":565,"line_end":565,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3013},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812690,"byte_end":14812698,"line_start":638,"line_end":638,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"fn try_read<'_>(&'_ Self) -> Result<RwLockReadGuard, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14811671,"byte_end":14811733,"line_start":606,"line_end":606,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14811738,"byte_end":14811741,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14811746,"byte_end":14811823,"line_start":608,"line_end":608,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14811828,"byte_end":14811899,"line_start":609,"line_end":609,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14811904,"byte_end":14811921,"line_start":610,"line_end":610,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14811926,"byte_end":14811929,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14811934,"byte_end":14811968,"line_start":612,"line_end":612,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14811973,"byte_end":14811976,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14811981,"byte_end":14811995,"line_start":614,"line_end":614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812000,"byte_end":14812003,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812008,"byte_end":14812015,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812020,"byte_end":14812043,"line_start":617,"line_end":617,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812048,"byte_end":14812076,"line_start":618,"line_end":618,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812081,"byte_end":14812084,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812089,"byte_end":14812107,"line_start":620,"line_end":620,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812112,"byte_end":14812133,"line_start":621,"line_end":621,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812138,"byte_end":14812182,"line_start":622,"line_end":622,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812187,"byte_end":14812221,"line_start":623,"line_end":623,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812226,"byte_end":14812229,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812234,"byte_end":14812275,"line_start":625,"line_end":625,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812280,"byte_end":14812306,"line_start":626,"line_end":626,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812311,"byte_end":14812314,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812319,"byte_end":14812352,"line_start":628,"line_end":628,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812357,"byte_end":14812427,"line_start":629,"line_end":629,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812432,"byte_end":14812472,"line_start":630,"line_end":630,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812477,"byte_end":14812507,"line_start":631,"line_end":631,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812512,"byte_end":14812569,"line_start":632,"line_end":632,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812574,"byte_end":14812577,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812582,"byte_end":14812635,"line_start":634,"line_end":634,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812640,"byte_end":14812656,"line_start":635,"line_end":635,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812661,"byte_end":14812666,"line_start":636,"line_end":636,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14812671,"byte_end":14812678,"line_start":637,"line_end":637,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3014},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814928,"byte_end":14814942,"line_start":701,"line_end":701,"column_start":12,"column_end":26},"name":"try_read_owned","qualname":"<RwLock<T>>::try_read_owned","value":"fn try_read_owned(Arc<Self>) -> Result<OwnedRwLockReadGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14813522,"byte_end":14813584,"line_start":663,"line_end":663,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14813589,"byte_end":14813592,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14813597,"byte_end":14813674,"line_start":665,"line_end":665,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14813679,"byte_end":14813750,"line_start":666,"line_end":666,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14813755,"byte_end":14813772,"line_start":667,"line_end":667,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14813777,"byte_end":14813780,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::try_read`], except that the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14813785,"byte_end":14813854,"line_start":669,"line_end":669,"column_start":5,"column_end":74}},{"value":"/ returned guard references the `RwLock` with an [`Arc`] rather than by","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14813859,"byte_end":14813932,"line_start":670,"line_end":670,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `RwLock` must be wrapped in an `Arc` to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14813937,"byte_end":14814009,"line_start":671,"line_end":671,"column_start":5,"column_end":77}},{"value":"/ call this method, and the guard will live for the `'static` lifetime,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814014,"byte_end":14814087,"line_start":672,"line_end":672,"column_start":5,"column_end":78}},{"value":"/ as it keeps the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814092,"byte_end":14814147,"line_start":673,"line_end":673,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814152,"byte_end":14814155,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814160,"byte_end":14814194,"line_start":675,"line_end":675,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814199,"byte_end":14814202,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814207,"byte_end":14814221,"line_start":677,"line_end":677,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814226,"byte_end":14814229,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814234,"byte_end":14814241,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814246,"byte_end":14814269,"line_start":680,"line_end":680,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814274,"byte_end":14814302,"line_start":681,"line_end":681,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814307,"byte_end":14814310,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814315,"byte_end":14814333,"line_start":683,"line_end":683,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814338,"byte_end":14814359,"line_start":684,"line_end":684,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814364,"byte_end":14814408,"line_start":685,"line_end":685,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814413,"byte_end":14814447,"line_start":686,"line_end":686,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814452,"byte_end":14814455,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read_owned().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814460,"byte_end":14814507,"line_start":688,"line_end":688,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814512,"byte_end":14814538,"line_start":689,"line_end":689,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814543,"byte_end":14814546,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814551,"byte_end":14814584,"line_start":691,"line_end":691,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814589,"byte_end":14814659,"line_start":692,"line_end":692,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read_owned().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814664,"byte_end":14814710,"line_start":693,"line_end":693,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814715,"byte_end":14814745,"line_start":694,"line_end":694,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814750,"byte_end":14814807,"line_start":695,"line_end":695,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814812,"byte_end":14814815,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814820,"byte_end":14814873,"line_start":697,"line_end":697,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814878,"byte_end":14814894,"line_start":698,"line_end":698,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814899,"byte_end":14814904,"line_start":699,"line_end":699,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14814909,"byte_end":14814916,"line_start":700,"line_end":700,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3015},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816731,"byte_end":14816736,"line_start":757,"line_end":757,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"async fn write<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14815875,"byte_end":14815947,"line_start":729,"line_end":729,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14815952,"byte_end":14816003,"line_start":730,"line_end":730,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816008,"byte_end":14816011,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers currently","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816016,"byte_end":14816088,"line_start":732,"line_end":732,"column_start":5,"column_end":77}},{"value":"/ have access to the lock.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816093,"byte_end":14816121,"line_start":733,"line_end":733,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816126,"byte_end":14816129,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816134,"byte_end":14816209,"line_start":735,"line_end":735,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816214,"byte_end":14816231,"line_start":736,"line_end":736,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816236,"byte_end":14816239,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816244,"byte_end":14816263,"line_start":738,"line_end":738,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816268,"byte_end":14816271,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816276,"byte_end":14816349,"line_start":740,"line_end":740,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `write` makes you lose your place","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816354,"byte_end":14816428,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/ in the queue.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816433,"byte_end":14816450,"line_start":742,"line_end":742,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816455,"byte_end":14816458,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816463,"byte_end":14816477,"line_start":744,"line_end":744,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816482,"byte_end":14816485,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816490,"byte_end":14816497,"line_start":746,"line_end":746,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816502,"byte_end":14816530,"line_start":747,"line_end":747,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816535,"byte_end":14816538,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816543,"byte_end":14816561,"line_start":749,"line_end":749,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816566,"byte_end":14816587,"line_start":750,"line_end":750,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816592,"byte_end":14816624,"line_start":751,"line_end":751,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816629,"byte_end":14816632,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816637,"byte_end":14816674,"line_start":753,"line_end":753,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816679,"byte_end":14816692,"line_start":754,"line_end":754,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816697,"byte_end":14816701,"line_start":755,"line_end":755,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14816706,"byte_end":14816713,"line_start":756,"line_end":756,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3019},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819872,"byte_end":14819886,"line_start":846,"line_end":846,"column_start":12,"column_end":26},"name":"blocking_write","qualname":"<RwLock<T>>::blocking_write","value":"fn blocking_write<'_>(&'_ Self) -> RwLockWriteGuard","parent":null,"children":[],"decl_id":null,"docs":" Blockingly locks this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Blockingly locks this `RwLock` with exclusive write access.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14817975,"byte_end":14818038,"line_start":795,"line_end":795,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818043,"byte_end":14818046,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818051,"byte_end":14818102,"line_start":797,"line_end":797,"column_start":5,"column_end":56}},{"value":"/ need to use this rwlock in asynchronous code as well as in synchronous code.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818107,"byte_end":14818187,"line_start":798,"line_end":798,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818192,"byte_end":14818195,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock` when dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818200,"byte_end":14818289,"line_start":800,"line_end":800,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818294,"byte_end":14818297,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818302,"byte_end":14818314,"line_start":802,"line_end":802,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818319,"byte_end":14818322,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution context.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818327,"byte_end":14818403,"line_start":804,"line_end":804,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818408,"byte_end":14818411,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/   - If you find yourself in an asynchronous execution context and needing","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818416,"byte_end":14818493,"line_start":806,"line_end":806,"column_start":5,"column_end":82}},{"value":"/     to call some (synchronous) function which performs one of these","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818498,"byte_end":14818569,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/     `blocking_` operations, then consider wrapping that call inside","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818574,"byte_end":14818645,"line_start":808,"line_end":808,"column_start":5,"column_end":76}},{"value":"/     [`spawn_blocking()`][crate::runtime::Handle::spawn_blocking]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818650,"byte_end":14818718,"line_start":809,"line_end":809,"column_start":5,"column_end":73}},{"value":"/     (or [`block_in_place()`][crate::task::block_in_place]).","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818723,"byte_end":14818786,"line_start":810,"line_end":810,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818791,"byte_end":14818794,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818799,"byte_end":14818813,"line_start":812,"line_end":812,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818818,"byte_end":14818821,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818826,"byte_end":14818833,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818838,"byte_end":14818861,"line_start":815,"line_end":815,"column_start":5,"column_end":28}},{"value":"/ use tokio::{sync::RwLock};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818866,"byte_end":14818896,"line_start":816,"line_end":816,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818901,"byte_end":14818904,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818909,"byte_end":14818927,"line_start":818,"line_end":818,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818932,"byte_end":14818953,"line_start":819,"line_end":819,"column_start":5,"column_end":26}},{"value":"/     let rwlock =  Arc::new(RwLock::new(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14818958,"byte_end":14819005,"line_start":820,"line_end":820,"column_start":5,"column_end":52}},{"value":"/     let read_lock = rwlock.read().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819010,"byte_end":14819054,"line_start":821,"line_end":821,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819059,"byte_end":14819062,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/     let blocking_task = tokio::task::spawn_blocking({","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819067,"byte_end":14819124,"line_start":823,"line_end":823,"column_start":5,"column_end":62}},{"value":"/         let rwlock = Arc::clone(&rwlock);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819129,"byte_end":14819174,"line_start":824,"line_end":824,"column_start":5,"column_end":50}},{"value":"/         move || {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819179,"byte_end":14819200,"line_start":825,"line_end":825,"column_start":5,"column_end":26}},{"value":"/             // This shall block until the `read_lock` is released.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819205,"byte_end":14819275,"line_start":826,"line_end":826,"column_start":5,"column_end":75}},{"value":"/             let mut write_lock = rwlock.blocking_write();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819280,"byte_end":14819341,"line_start":827,"line_end":827,"column_start":5,"column_end":66}},{"value":"/             *write_lock = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819346,"byte_end":14819378,"line_start":828,"line_end":828,"column_start":5,"column_end":37}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819383,"byte_end":14819396,"line_start":829,"line_end":829,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819401,"byte_end":14819412,"line_start":830,"line_end":830,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819417,"byte_end":14819420,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(*read_lock, 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819425,"byte_end":14819459,"line_start":832,"line_end":832,"column_start":5,"column_end":39}},{"value":"/     // Release the last outstanding read lock.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819464,"byte_end":14819514,"line_start":833,"line_end":833,"column_start":5,"column_end":55}},{"value":"/     drop(read_lock);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819519,"byte_end":14819543,"line_start":834,"line_end":834,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819548,"byte_end":14819551,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/     // Await the completion of the blocking task.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819556,"byte_end":14819609,"line_start":836,"line_end":836,"column_start":5,"column_end":58}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819614,"byte_end":14819651,"line_start":837,"line_end":837,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819656,"byte_end":14819659,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/     // Assert uncontended.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819664,"byte_end":14819694,"line_start":839,"line_end":839,"column_start":5,"column_end":35}},{"value":"/     let read_lock = rwlock.try_read().unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819699,"byte_end":14819750,"line_start":840,"line_end":840,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(*read_lock, 2);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819755,"byte_end":14819789,"line_start":841,"line_end":841,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819794,"byte_end":14819799,"line_start":842,"line_end":842,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819804,"byte_end":14819811,"line_start":843,"line_end":843,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819816,"byte_end":14819831,"line_start":844,"line_end":844,"column_start":5,"column_end":20}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819836,"byte_end":14819860,"line_start":845,"line_end":845,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14821258,"byte_end":14821269,"line_start":885,"line_end":885,"column_start":18,"column_end":29},"name":"write_owned","qualname":"<RwLock<T>>::write_owned","value":"async fn write_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14819980,"byte_end":14820052,"line_start":850,"line_end":850,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820057,"byte_end":14820108,"line_start":851,"line_end":851,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820113,"byte_end":14820116,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers currently","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820121,"byte_end":14820193,"line_start":853,"line_end":853,"column_start":5,"column_end":77}},{"value":"/ have access to the lock.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820198,"byte_end":14820226,"line_start":854,"line_end":854,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820231,"byte_end":14820234,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::write`], except that the returned","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820239,"byte_end":14820314,"line_start":856,"line_end":856,"column_start":5,"column_end":80}},{"value":"/ guard references the `RwLock` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820319,"byte_end":14820393,"line_start":857,"line_end":857,"column_start":5,"column_end":79}},{"value":"/ it. Therefore, the `RwLock` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820398,"byte_end":14820470,"line_start":858,"line_end":858,"column_start":5,"column_end":77}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820475,"byte_end":14820550,"line_start":859,"line_end":859,"column_start":5,"column_end":80}},{"value":"/ the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820555,"byte_end":14820598,"line_start":860,"line_end":860,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820603,"byte_end":14820606,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820611,"byte_end":14820686,"line_start":862,"line_end":862,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820691,"byte_end":14820708,"line_start":863,"line_end":863,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820713,"byte_end":14820716,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820721,"byte_end":14820740,"line_start":865,"line_end":865,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820745,"byte_end":14820748,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ This method uses a queue to fairly distribute locks in the order they","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820753,"byte_end":14820826,"line_start":867,"line_end":867,"column_start":5,"column_end":78}},{"value":"/ were requested. Cancelling a call to `write_owned` makes you lose your","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820831,"byte_end":14820905,"line_start":868,"line_end":868,"column_start":5,"column_end":79}},{"value":"/ place in the queue.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820910,"byte_end":14820933,"line_start":869,"line_end":869,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820938,"byte_end":14820941,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820946,"byte_end":14820960,"line_start":871,"line_end":871,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820965,"byte_end":14820968,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820973,"byte_end":14820980,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14820985,"byte_end":14821008,"line_start":874,"line_end":874,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14821013,"byte_end":14821041,"line_start":875,"line_end":875,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14821046,"byte_end":14821049,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14821054,"byte_end":14821072,"line_start":877,"line_end":877,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14821077,"byte_end":14821098,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/   let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14821103,"byte_end":14821145,"line_start":879,"line_end":879,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14821150,"byte_end":14821153,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write_owned().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14821158,"byte_end":14821201,"line_start":881,"line_end":881,"column_start":5,"column_end":48}},{"value":"/   *n = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14821206,"byte_end":14821219,"line_start":882,"line_end":882,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14821224,"byte_end":14821228,"line_start":883,"line_end":883,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14821233,"byte_end":14821240,"line_start":884,"line_end":884,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3024},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14823263,"byte_end":14823272,"line_start":949,"line_end":949,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"fn try_write<'_>(&'_ Self) -> Result<RwLockWriteGuard, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14822623,"byte_end":14822689,"line_start":926,"line_end":926,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14822694,"byte_end":14822697,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14822702,"byte_end":14822779,"line_start":928,"line_end":928,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14822784,"byte_end":14822856,"line_start":929,"line_end":929,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14822861,"byte_end":14822878,"line_start":930,"line_end":930,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14822883,"byte_end":14822886,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14822891,"byte_end":14822925,"line_start":932,"line_end":932,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14822930,"byte_end":14822933,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14822938,"byte_end":14822952,"line_start":934,"line_end":934,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14822957,"byte_end":14822960,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14822965,"byte_end":14822972,"line_start":936,"line_end":936,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14822977,"byte_end":14823005,"line_start":937,"line_end":937,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14823010,"byte_end":14823013,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14823018,"byte_end":14823036,"line_start":939,"line_end":939,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14823041,"byte_end":14823062,"line_start":940,"line_end":940,"column_start":5,"column_end":26}},{"value":"/     let rw = RwLock::new(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14823067,"byte_end":14823099,"line_start":941,"line_end":941,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14823104,"byte_end":14823107,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/     let v = rw.read().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14823112,"byte_end":14823144,"line_start":943,"line_end":943,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14823149,"byte_end":14823175,"line_start":944,"line_end":944,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14823180,"byte_end":14823183,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write().is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14823188,"byte_end":14823229,"line_start":946,"line_end":946,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14823234,"byte_end":14823239,"line_start":947,"line_end":947,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14823244,"byte_end":14823251,"line_start":948,"line_end":948,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3025},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14825224,"byte_end":14825239,"line_start":1005,"line_end":1005,"column_start":12,"column_end":27},"name":"try_write_owned","qualname":"<RwLock<T>>::try_write_owned","value":"fn try_write_owned(Arc<Self>)\n-> Result<OwnedRwLockWriteGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824145,"byte_end":14824211,"line_start":975,"line_end":975,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824216,"byte_end":14824219,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824224,"byte_end":14824301,"line_start":977,"line_end":977,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824306,"byte_end":14824378,"line_start":978,"line_end":978,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824383,"byte_end":14824400,"line_start":979,"line_end":979,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824405,"byte_end":14824408,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::try_write`], except that the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824413,"byte_end":14824483,"line_start":981,"line_end":981,"column_start":5,"column_end":75}},{"value":"/ returned guard references the `RwLock` with an [`Arc`] rather than by","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824488,"byte_end":14824561,"line_start":982,"line_end":982,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `RwLock` must be wrapped in an `Arc` to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824566,"byte_end":14824638,"line_start":983,"line_end":983,"column_start":5,"column_end":77}},{"value":"/ call this method, and the guard will live for the `'static` lifetime,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824643,"byte_end":14824716,"line_start":984,"line_end":984,"column_start":5,"column_end":78}},{"value":"/ as it keeps the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824721,"byte_end":14824776,"line_start":985,"line_end":985,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824781,"byte_end":14824784,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824789,"byte_end":14824823,"line_start":987,"line_end":987,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824828,"byte_end":14824831,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824836,"byte_end":14824850,"line_start":989,"line_end":989,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824855,"byte_end":14824858,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824863,"byte_end":14824870,"line_start":991,"line_end":991,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824875,"byte_end":14824898,"line_start":992,"line_end":992,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824903,"byte_end":14824931,"line_start":993,"line_end":993,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824936,"byte_end":14824939,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824944,"byte_end":14824962,"line_start":995,"line_end":995,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824967,"byte_end":14824988,"line_start":996,"line_end":996,"column_start":5,"column_end":26}},{"value":"/     let rw = Arc::new(RwLock::new(1));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14824993,"byte_end":14825035,"line_start":997,"line_end":997,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14825040,"byte_end":14825043,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/     let v = Arc::clone(&rw).read_owned().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14825048,"byte_end":14825099,"line_start":999,"line_end":999,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14825104,"byte_end":14825130,"line_start":1000,"line_end":1000,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14825135,"byte_end":14825138,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write_owned().is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14825143,"byte_end":14825190,"line_start":1002,"line_end":1002,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14825195,"byte_end":14825200,"line_start":1003,"line_end":1003,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14825205,"byte_end":14825212,"line_start":1004,"line_end":1004,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3026},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826693,"byte_end":14826700,"line_start":1051,"line_end":1051,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826221,"byte_end":14826276,"line_start":1034,"line_end":1034,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826281,"byte_end":14826284,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `RwLock` mutably, no actual locking needs to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826289,"byte_end":14826365,"line_start":1036,"line_end":1036,"column_start":5,"column_end":81}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826370,"byte_end":14826444,"line_start":1037,"line_end":1037,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826449,"byte_end":14826452,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826457,"byte_end":14826471,"line_start":1039,"line_end":1039,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826476,"byte_end":14826479,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826484,"byte_end":14826491,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826496,"byte_end":14826524,"line_start":1042,"line_end":1042,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826529,"byte_end":14826532,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826537,"byte_end":14826552,"line_start":1044,"line_end":1044,"column_start":5,"column_end":20}},{"value":"/     let mut lock = RwLock::new(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826557,"byte_end":14826595,"line_start":1045,"line_end":1045,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826600,"byte_end":14826603,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/     let n = lock.get_mut();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826608,"byte_end":14826639,"line_start":1047,"line_end":1047,"column_start":5,"column_end":36}},{"value":"/     *n = 2;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826644,"byte_end":14826659,"line_start":1048,"line_end":1048,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826664,"byte_end":14826669,"line_start":1049,"line_end":1049,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826674,"byte_end":14826681,"line_start":1050,"line_end":1050,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3027},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826934,"byte_end":14826944,"line_start":1059,"line_end":1059,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14826869,"byte_end":14826922,"line_start":1058,"line_end":1058,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3030},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14827066,"byte_end":14827070,"line_start":1068,"line_end":1068,"column_start":8,"column_end":12},"name":"from","qualname":"<RwLock<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3033},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14827186,"byte_end":14827193,"line_start":1077,"line_end":1077,"column_start":8,"column_end":15},"name":"default","qualname":"<RwLock<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3181},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886569,"byte_end":14886577,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"OnceCell","qualname":"::sync::once_cell::OnceCell","value":"OnceCell {  }","parent":null,"children":[{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3185}],"decl_id":null,"docs":" A thread-safe cell that can be written to only once.","sig":null,"attributes":[{"value":"/ A thread-safe cell that can be written to only once.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885482,"byte_end":14885538,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885539,"byte_end":14885542,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A `OnceCell` is typically used for global variables that need to be","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885543,"byte_end":14885614,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ initialized once on first use, but need no further changes. The `OnceCell`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885615,"byte_end":14885693,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ in Tokio allows the initialization procedure to be asynchronous.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885694,"byte_end":14885762,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885763,"byte_end":14885766,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885767,"byte_end":14885781,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885782,"byte_end":14885785,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885786,"byte_end":14885793,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::OnceCell;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885794,"byte_end":14885824,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885825,"byte_end":14885828,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> u32 {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885829,"byte_end":14885869,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/     1 + 1","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885870,"byte_end":14885883,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885884,"byte_end":14885889,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885890,"byte_end":14885893,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ static ONCE: OnceCell<u32> = OnceCell::const_new();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885894,"byte_end":14885949,"line_start":42,"line_end":42,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885950,"byte_end":14885953,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885954,"byte_end":14885972,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885973,"byte_end":14885994,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/     let result = ONCE.get_or_init(some_computation).await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14885995,"byte_end":14886057,"line_start":46,"line_end":46,"column_start":1,"column_end":63}},{"value":"/     assert_eq!(*result, 2);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886058,"byte_end":14886089,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886090,"byte_end":14886095,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886096,"byte_end":14886103,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886104,"byte_end":14886107,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ It is often useful to write a wrapper method for accessing the value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886108,"byte_end":14886181,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886182,"byte_end":14886185,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886186,"byte_end":14886193,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::OnceCell;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886194,"byte_end":14886224,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886225,"byte_end":14886228,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ static ONCE: OnceCell<u32> = OnceCell::const_new();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886229,"byte_end":14886284,"line_start":56,"line_end":56,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886285,"byte_end":14886288,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ async fn get_global_integer() -> &'static u32 {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886289,"byte_end":14886340,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"/     ONCE.get_or_init(|| async {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886341,"byte_end":14886376,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/         1 + 1","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886377,"byte_end":14886394,"line_start":60,"line_end":60,"column_start":1,"column_end":18}},{"value":"/     }).await","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886395,"byte_end":14886411,"line_start":61,"line_end":61,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886412,"byte_end":14886417,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886418,"byte_end":14886421,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886422,"byte_end":14886440,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886441,"byte_end":14886462,"line_start":65,"line_end":65,"column_start":1,"column_end":22}},{"value":"/     let result = get_global_integer().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886463,"byte_end":14886511,"line_start":66,"line_end":66,"column_start":1,"column_end":49}},{"value":"/     assert_eq!(*result, 2);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886512,"byte_end":14886543,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886544,"byte_end":14886549,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886550,"byte_end":14886557,"line_start":69,"line_end":69,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3188},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886719,"byte_end":14886726,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"default","qualname":"<OnceCell<T> as std::default::Default>::default","value":"fn default() -> OnceCell<T>","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3191},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886835,"byte_end":14886838,"line_start":83,"line_end":83,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OnceCell<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10286},"children":[],"decl_id":{"krate":2,"index":10287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3194},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14887048,"byte_end":14887053,"line_start":91,"line_end":91,"column_start":8,"column_end":13},"name":"clone","qualname":"<OnceCell<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> OnceCell<T>","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3197},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14887189,"byte_end":14887191,"line_start":97,"line_end":97,"column_start":8,"column_end":10},"name":"eq","qualname":"<OnceCell<T> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ OnceCell<T>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3202},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14887346,"byte_end":14887350,"line_start":105,"line_end":105,"column_start":8,"column_end":12},"name":"drop","qualname":"<OnceCell<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3206},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14887606,"byte_end":14887610,"line_start":116,"line_end":116,"column_start":8,"column_end":12},"name":"from","qualname":"<OnceCell<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14887951,"byte_end":14887954,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"new","qualname":"<OnceCell<T>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `OnceCell` instance.\n","sig":null,"attributes":[{"value":"/ Creates a new empty `OnceCell` instance.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14887895,"byte_end":14887939,"line_start":128,"line_end":128,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14888381,"byte_end":14888389,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"new_with","qualname":"<OnceCell<T>>::new_with","value":"fn new_with(Option<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `OnceCell` that contains the provided value, if any.","sig":null,"attributes":[{"value":"/ Creates a new `OnceCell` that contains the provided value, if any.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14888155,"byte_end":14888225,"line_start":137,"line_end":137,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14888230,"byte_end":14888233,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ If the `Option` is `None`, this is equivalent to `OnceCell::new`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14888238,"byte_end":14888307,"line_start":139,"line_end":139,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14888312,"byte_end":14888315,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::new`]: crate::sync::OnceCell::new","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14888320,"byte_end":14888369,"line_start":141,"line_end":141,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14889631,"byte_end":14889642,"line_start":186,"line_end":186,"column_start":12,"column_end":23},"name":"initialized","qualname":"<OnceCell<T>>::initialized","value":"fn initialized<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `OnceCell` currently contains a value, and `false`\n otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `OnceCell` currently contains a value, and `false`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14889524,"byte_end":14889600,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ otherwise.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14889605,"byte_end":14889619,"line_start":185,"line_end":185,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3219},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14891055,"byte_end":14891058,"line_start":226,"line_end":226,"column_start":12,"column_end":15},"name":"get","qualname":"<OnceCell<T>>::get","value":"fn get<'_>(&'_ Self) -> Option<&'_ T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value currently stored in the `OnceCell`, or\n `None` if the `OnceCell` is empty.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the value currently stored in the `OnceCell`, or","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14890925,"byte_end":14891000,"line_start":224,"line_end":224,"column_start":5,"column_end":80}},{"value":"/ `None` if the `OnceCell` is empty.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14891005,"byte_end":14891043,"line_start":225,"line_end":225,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3220},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14891562,"byte_end":14891569,"line_start":240,"line_end":240,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OnceCell<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> Option<&'_ mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value currently stored in the\n `OnceCell`, or `None` if the `OnceCell` is empty.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value currently stored in the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14891219,"byte_end":14891287,"line_start":234,"line_end":234,"column_start":5,"column_end":73}},{"value":"/ `OnceCell`, or `None` if the `OnceCell` is empty.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14891292,"byte_end":14891345,"line_start":235,"line_end":235,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14891350,"byte_end":14891353,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `OnceCell` mutably, it is safe to mutate the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14891358,"byte_end":14891434,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ value inside the `OnceCell` — the mutable borrow statically guarantees","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14891439,"byte_end":14891515,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ no other references exist.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14891520,"byte_end":14891550,"line_start":239,"line_end":239,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3221},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14892331,"byte_end":14892334,"line_start":259,"line_end":259,"column_start":12,"column_end":15},"name":"set","qualname":"<OnceCell<T>>::set","value":"fn set<'_>(&'_ Self, T) -> Result<(), SetError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `OnceCell` to the given value if the `OnceCell` is\n empty.","sig":null,"attributes":[{"value":"/ Sets the value of the `OnceCell` to the given value if the `OnceCell` is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14891746,"byte_end":14891822,"line_start":248,"line_end":248,"column_start":5,"column_end":81}},{"value":"/ empty.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14891827,"byte_end":14891837,"line_start":249,"line_end":249,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14891842,"byte_end":14891845,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If the `OnceCell` already has a value, this call will fail with an","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14891850,"byte_end":14891920,"line_start":251,"line_end":251,"column_start":5,"column_end":75}},{"value":"/ [`SetError::AlreadyInitializedError`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14891925,"byte_end":14891967,"line_start":252,"line_end":252,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14891972,"byte_end":14891975,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ If the `OnceCell` is empty, but some other task is currently trying to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14891980,"byte_end":14892054,"line_start":254,"line_end":254,"column_start":5,"column_end":79}},{"value":"/ set the value, this call will fail with [`SetError::InitializingError`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14892059,"byte_end":14892135,"line_start":255,"line_end":255,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14892140,"byte_end":14892143,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ [`SetError::AlreadyInitializedError`]: crate::sync::SetError::AlreadyInitializedError","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14892148,"byte_end":14892237,"line_start":257,"line_end":257,"column_start":5,"column_end":94}},{"value":"/ [`SetError::InitializingError`]: crate::sync::SetError::InitializingError","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14892242,"byte_end":14892319,"line_start":258,"line_end":258,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3222},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14894075,"byte_end":14894086,"line_start":299,"line_end":299,"column_start":18,"column_end":29},"name":"get_or_init","qualname":"<OnceCell<T>>::get_or_init","value":"async fn get_or_init<F, Fut, '_>(&'_ Self, F) -> /*impl Trait*/ where\nF: FnOnce() -> Fut, Fut: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value currently in the `OnceCell`, or initialize it with the\n given asynchronous operation.","sig":null,"attributes":[{"value":"/ Gets the value currently in the `OnceCell`, or initialize it with the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14893392,"byte_end":14893465,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ given asynchronous operation.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14893470,"byte_end":14893503,"line_start":287,"line_end":287,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14893508,"byte_end":14893511,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ If some other task is currently working on initializing the `OnceCell`,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14893516,"byte_end":14893591,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ this call will wait for that other task to finish, then return the value","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14893596,"byte_end":14893672,"line_start":290,"line_end":290,"column_start":5,"column_end":81}},{"value":"/ that the other task produced.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14893677,"byte_end":14893710,"line_start":291,"line_end":291,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14893715,"byte_end":14893718,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ If the provided operation is cancelled or panics, the initialization","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14893723,"byte_end":14893795,"line_start":293,"line_end":293,"column_start":5,"column_end":77}},{"value":"/ attempt is cancelled. If there are other tasks waiting for the value to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14893800,"byte_end":14893875,"line_start":294,"line_end":294,"column_start":5,"column_end":80}},{"value":"/ be initialized, one of them will start another attempt at initializing","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14893880,"byte_end":14893954,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ the value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14893959,"byte_end":14893973,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14893978,"byte_end":14893981,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This will deadlock if `f` tries to initialize the cell recursively.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14893986,"byte_end":14894057,"line_start":298,"line_end":298,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3227},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14896067,"byte_end":14896082,"line_start":347,"line_end":347,"column_start":18,"column_end":33},"name":"get_or_try_init","qualname":"<OnceCell<T>>::get_or_try_init","value":"async fn get_or_try_init<E, F, Fut, '_>(&'_ Self, F) -> /*impl Trait*/ where\nF: FnOnce() -> Fut, Fut: Future<Output = Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value currently in the `OnceCell`, or initialize it with the\n given asynchronous operation.","sig":null,"attributes":[{"value":"/ Gets the value currently in the `OnceCell`, or initialize it with the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14895366,"byte_end":14895439,"line_start":334,"line_end":334,"column_start":5,"column_end":78}},{"value":"/ given asynchronous operation.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14895444,"byte_end":14895477,"line_start":335,"line_end":335,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14895482,"byte_end":14895485,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If some other task is currently working on initializing the `OnceCell`,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14895490,"byte_end":14895565,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ this call will wait for that other task to finish, then return the value","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14895570,"byte_end":14895646,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/ that the other task produced.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14895651,"byte_end":14895684,"line_start":339,"line_end":339,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14895689,"byte_end":14895692,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ If the provided operation returns an error, is cancelled or panics, the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14895697,"byte_end":14895772,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ initialization attempt is cancelled. If there are other tasks waiting","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14895777,"byte_end":14895850,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/ for the value to be initialized, one of them will start another attempt","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14895855,"byte_end":14895930,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ at initializing the value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14895935,"byte_end":14895965,"line_start":344,"line_end":344,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14895970,"byte_end":14895973,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This will deadlock if `f` tries to initialize the cell recursively.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14895978,"byte_end":14896049,"line_start":346,"line_end":346,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3233},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14897646,"byte_end":14897656,"line_start":387,"line_end":387,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<OnceCell<T>>::into_inner","value":"fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes the value from the cell, destroying the cell in the process.\n Returns `None` if the cell is empty.\n","sig":null,"attributes":[{"value":"/ Takes the value from the cell, destroying the cell in the process.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14897519,"byte_end":14897589,"line_start":385,"line_end":385,"column_start":5,"column_end":75}},{"value":"/ Returns `None` if the cell is empty.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14897594,"byte_end":14897634,"line_start":386,"line_end":386,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3235},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14898110,"byte_end":14898114,"line_start":399,"line_end":399,"column_start":12,"column_end":16},"name":"take","qualname":"<OnceCell<T>>::take","value":"fn take<'_>(&'_ mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the current value, leaving the cell empty.  Returns\n `None` if the cell is empty.\n","sig":null,"attributes":[{"value":"/ Takes ownership of the current value, leaving the cell empty.  Returns","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14897987,"byte_end":14898061,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ `None` if the cell is empty.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14898066,"byte_end":14898098,"line_start":398,"line_end":398,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3620},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14899119,"byte_end":14899142,"line_start":424,"line_end":424,"column_start":5,"column_end":28},"name":"AlreadyInitializedError","qualname":"::sync::once_cell::SetError::AlreadyInitializedError","value":"SetError::AlreadyInitializedError(T)","parent":{"krate":0,"index":3618},"children":[],"decl_id":null,"docs":" The cell was already initialized when [`OnceCell::set`] was called.","sig":null,"attributes":[{"value":"/ The cell was already initialized when [`OnceCell::set`] was called.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14898981,"byte_end":14899052,"line_start":421,"line_end":421,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14899057,"byte_end":14899060,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14899065,"byte_end":14899114,"line_start":423,"line_end":423,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3622},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14899143,"byte_end":14899144,"line_start":424,"line_end":424,"column_start":29,"column_end":30},"name":"0","qualname":"::sync::once_cell::SetError::AlreadyInitializedError::0","value":"T","parent":{"krate":0,"index":3620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3623},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14899201,"byte_end":14899218,"line_start":427,"line_end":427,"column_start":5,"column_end":22},"name":"InitializingError","qualname":"::sync::once_cell::SetError::InitializingError","value":"SetError::InitializingError(T)","parent":{"krate":0,"index":3618},"children":[],"decl_id":null,"docs":" The cell is currently being initialized.\n","sig":null,"attributes":[{"value":"/ The cell is currently being initialized.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14899152,"byte_end":14899196,"line_start":426,"line_end":426,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3625},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14899219,"byte_end":14899220,"line_start":427,"line_end":427,"column_start":23,"column_end":24},"name":"0","qualname":"::sync::once_cell::SetError::InitializingError::0","value":"T","parent":{"krate":0,"index":3623},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3618},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14898963,"byte_end":14898971,"line_start":420,"line_end":420,"column_start":10,"column_end":18},"name":"SetError","qualname":"::sync::once_cell::SetError","value":"enum SetError<T> { AlreadyInitializedError(T), InitializingError(T), }","parent":null,"children":[{"krate":0,"index":3620},{"krate":0,"index":3623}],"decl_id":null,"docs":" Errors that can be returned from [`OnceCell::set`].","sig":null,"attributes":[{"value":"/ Errors that can be returned from [`OnceCell::set`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14898816,"byte_end":14898871,"line_start":416,"line_end":416,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14898872,"byte_end":14898875,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14898876,"byte_end":14898925,"line_start":418,"line_end":418,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3242},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14899272,"byte_end":14899275,"line_start":431,"line_end":431,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SetError<T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3247},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14899682,"byte_end":14899701,"line_start":443,"line_end":443,"column_start":12,"column_end":31},"name":"is_already_init_err","qualname":"<SetError<T>>::is_already_init_err","value":"fn is_already_init_err<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether `SetError` is `SetError::AlreadyInitializedError`.\n","sig":null,"attributes":[{"value":"/ Whether `SetError` is `SetError::AlreadyInitializedError`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14899608,"byte_end":14899670,"line_start":442,"line_end":442,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3248},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14899939,"byte_end":14899958,"line_start":451,"line_end":451,"column_start":12,"column_end":31},"name":"is_initializing_err","qualname":"<SetError<T>>::is_initializing_err","value":"fn is_initializing_err<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether `SetError` is `SetError::InitializingError`\n","sig":null,"attributes":[{"value":"/ Whether `SetError` is `SetError::InitializingError`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14899872,"byte_end":14899927,"line_start":450,"line_end":450,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":3256},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":3257},{"krate":0,"index":3260},{"krate":0,"index":3263},{"krate":0,"index":3264},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3270},{"krate":0,"index":3273},{"krate":0,"index":3276},{"krate":0,"index":3279},{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3635},{"krate":0,"index":3639},{"krate":0,"index":3642},{"krate":0,"index":3645},{"krate":0,"index":3648},{"krate":0,"index":3653},{"krate":0,"index":3285},{"krate":0,"index":3657},{"krate":0,"index":3664},{"krate":0,"index":3289},{"krate":0,"index":3301},{"krate":0,"index":3302},{"krate":0,"index":3305},{"krate":0,"index":3308},{"krate":0,"index":3326},{"krate":0,"index":3328},{"krate":0,"index":3338},{"krate":0,"index":3340},{"krate":0,"index":3343},{"krate":0,"index":3346},{"krate":0,"index":3364},{"krate":0,"index":3367}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/macros/cfg.rs","byte_start":30078,"byte_end":30102,"line_start":312,"line_end":312,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900199,"byte_end":14900278,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900279,"byte_end":14900289,"line_start":4,"line_end":4,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900290,"byte_end":14900293,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900294,"byte_end":14900370,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900371,"byte_end":14900445,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900446,"byte_end":14900449,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900450,"byte_end":14900461,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900462,"byte_end":14900465,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are the producer","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900466,"byte_end":14900546,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ and sender halves of the channel. The channel is created with an initial","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900547,"byte_end":14900623,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ value. The **latest** value stored in the channel is accessed with","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900624,"byte_end":14900694,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`Receiver::borrow()`]. Awaiting [`Receiver::changed()`] waits for a new","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900695,"byte_end":14900771,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ value to sent by the [`Sender`] half.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900772,"byte_end":14900813,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900814,"byte_end":14900817,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900818,"byte_end":14900832,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900833,"byte_end":14900836,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900837,"byte_end":14900844,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900845,"byte_end":14900872,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900873,"byte_end":14900876,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900877,"byte_end":14900941,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/ let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900942,"byte_end":14900989,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900990,"byte_end":14900993,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14900994,"byte_end":14901023,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/     while rx.changed().await.is_ok() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901024,"byte_end":14901066,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901067,"byte_end":14901121,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901122,"byte_end":14901131,"line_start":28,"line_end":28,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901132,"byte_end":14901139,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901140,"byte_end":14901143,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ tx.send(\"world\")?;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901144,"byte_end":14901166,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/ # Ok(())","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901167,"byte_end":14901179,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901180,"byte_end":14901187,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901188,"byte_end":14901195,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901196,"byte_end":14901199,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901200,"byte_end":14901213,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901214,"byte_end":14901217,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Sender::is_closed`] and [`Sender::closed`] allow the producer to detect","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901218,"byte_end":14901295,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ when all [`Receiver`] handles have been dropped. This indicates that there","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901296,"byte_end":14901374,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ is no further interest in the values being produced and work can be stopped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901375,"byte_end":14901455,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901456,"byte_end":14901459,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901460,"byte_end":14901479,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901480,"byte_end":14901483,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901484,"byte_end":14901564,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901565,"byte_end":14901644,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901645,"byte_end":14901717,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901718,"byte_end":14901721,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901722,"byte_end":14901764,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901765,"byte_end":14901811,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::changed()`]: crate::sync::watch::Receiver::changed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901812,"byte_end":14901878,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/ [`Receiver::borrow()`]: crate::sync::watch::Receiver::borrow","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901879,"byte_end":14901943,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901944,"byte_end":14901988,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/ [`Sender::is_closed`]: crate::sync::watch::Sender::is_closed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14901989,"byte_end":14902053,"line_start":53,"line_end":53,"column_start":1,"column_end":65}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14902054,"byte_end":14902112,"line_start":54,"line_end":54,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3635},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14902704,"byte_end":14902712,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":3637},{"krate":0,"index":3638}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14902342,"byte_end":14902408,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14902409,"byte_end":14902412,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14902413,"byte_end":14902479,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14902480,"byte_end":14902483,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`WatchStream`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14902484,"byte_end":14902558,"line_start":69,"line_end":69,"column_start":1,"column_end":75}},{"value":"/ wrapper.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14902559,"byte_end":14902571,"line_start":70,"line_end":70,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14902572,"byte_end":14902575,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`WatchStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.WatchStream.html","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14902576,"byte_end":14902675,"line_start":72,"line_end":72,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":3642},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903003,"byte_end":14903009,"line_start":86,"line_end":86,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":3644}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14902838,"byte_end":14902903,"line_start":82,"line_end":82,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14902904,"byte_end":14902907,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14902908,"byte_end":14902974,"line_start":84,"line_end":84,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3648},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904183,"byte_end":14904186,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":3651},{"krate":0,"index":3652}],"decl_id":null,"docs":" Returns a reference to the inner value.","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903046,"byte_end":14903089,"line_start":90,"line_end":90,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903090,"byte_end":14903093,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903094,"byte_end":14903170,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903171,"byte_end":14903250,"line_start":93,"line_end":93,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible. Additionally, if you are","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903251,"byte_end":14903326,"line_start":94,"line_end":94,"column_start":1,"column_end":76}},{"value":"/ running in an environment that allows `!Send` futures, you must ensure that","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903327,"byte_end":14903406,"line_start":95,"line_end":95,"column_start":1,"column_end":80}},{"value":"/ the returned `Ref` type is never held alive across an `.await` point.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903407,"byte_end":14903480,"line_start":96,"line_end":96,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903481,"byte_end":14903484,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ The priority policy of the lock is dependent on the underlying lock","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903485,"byte_end":14903556,"line_start":98,"line_end":98,"column_start":1,"column_end":72}},{"value":"/ implementation, and this type does not guarantee that any particular policy","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903557,"byte_end":14903636,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/ will be used. In particular, a producer which is waiting to acquire the lock","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903637,"byte_end":14903717,"line_start":100,"line_end":100,"column_start":1,"column_end":81}},{"value":"/ in `send` might or might not block concurrent calls to `borrow`, e.g.:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903718,"byte_end":14903792,"line_start":101,"line_end":101,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903793,"byte_end":14903796,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ <details><summary>Potential deadlock example</summary>","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903797,"byte_end":14903855,"line_start":103,"line_end":103,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903856,"byte_end":14903859,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903860,"byte_end":14903871,"line_start":105,"line_end":105,"column_start":1,"column_end":12}},{"value":"/ // Task 1 (on thread A)    |  // Task 2 (on thread B)","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903872,"byte_end":14903929,"line_start":106,"line_end":106,"column_start":1,"column_end":58}},{"value":"/ let _ref1 = rx.borrow();   |","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903930,"byte_end":14903962,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/                            |  // will block","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14903963,"byte_end":14904010,"line_start":108,"line_end":108,"column_start":1,"column_end":48}},{"value":"/                            |  let _ = tx.send(());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904011,"byte_end":14904065,"line_start":109,"line_end":109,"column_start":1,"column_end":55}},{"value":"/ // may deadlock            |","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904066,"byte_end":14904098,"line_start":110,"line_end":110,"column_start":1,"column_end":33}},{"value":"/ let _ref2 = rx.borrow();   |","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904099,"byte_end":14904131,"line_start":111,"line_end":111,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904132,"byte_end":14904139,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/ </details>","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904140,"byte_end":14904154,"line_start":113,"line_end":113,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3288},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905907,"byte_end":14905918,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"name":"has_changed","qualname":"<Ref>::has_changed","value":"fn has_changed<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the borrowed value is considered as _changed_ since the last\n time it has been marked as seen.","sig":null,"attributes":[{"value":"/ Indicates if the borrowed value is considered as _changed_ since the last","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904286,"byte_end":14904363,"line_start":121,"line_end":121,"column_start":5,"column_end":82}},{"value":"/ time it has been marked as seen.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904368,"byte_end":14904404,"line_start":122,"line_end":122,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904409,"byte_end":14904412,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Receiver::has_changed()`], this method does not fail if the channel is closed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904417,"byte_end":14904508,"line_start":124,"line_end":124,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904513,"byte_end":14904516,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ When borrowed from the [`Sender`] this function will always return `false`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904521,"byte_end":14904600,"line_start":126,"line_end":126,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904605,"byte_end":14904608,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904613,"byte_end":14904627,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904632,"byte_end":14904635,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904640,"byte_end":14904647,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904652,"byte_end":14904679,"line_start":131,"line_end":131,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904684,"byte_end":14904687,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904692,"byte_end":14904710,"line_start":133,"line_end":133,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904715,"byte_end":14904736,"line_start":134,"line_end":134,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904741,"byte_end":14904792,"line_start":135,"line_end":135,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904797,"byte_end":14904800,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"goodbye\").unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904805,"byte_end":14904841,"line_start":137,"line_end":137,"column_start":5,"column_end":41}},{"value":"/     // The sender does never consider the value as changed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904846,"byte_end":14904909,"line_start":138,"line_end":138,"column_start":5,"column_end":68}},{"value":"/     assert!(!tx.borrow().has_changed());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904914,"byte_end":14904958,"line_start":139,"line_end":139,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904963,"byte_end":14904966,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/     // Drop the sender immediately, just for testing purposes.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904971,"byte_end":14905037,"line_start":141,"line_end":141,"column_start":5,"column_end":71}},{"value":"/     drop(tx);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905042,"byte_end":14905059,"line_start":142,"line_end":142,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905064,"byte_end":14905067,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/     // Even if the sender has already been dropped...","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905072,"byte_end":14905129,"line_start":144,"line_end":144,"column_start":5,"column_end":62}},{"value":"/     assert!(rx.has_changed().is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905134,"byte_end":14905177,"line_start":145,"line_end":145,"column_start":5,"column_end":48}},{"value":"/     // ...the modified value is still readable and detected as changed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905182,"byte_end":14905257,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/     assert_eq!(*rx.borrow(), \"goodbye\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905262,"byte_end":14905306,"line_start":147,"line_end":147,"column_start":5,"column_end":49}},{"value":"/     assert!(rx.borrow().has_changed());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905311,"byte_end":14905354,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905359,"byte_end":14905362,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/     // Read the changed value and mark it as seen.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905367,"byte_end":14905421,"line_start":150,"line_end":150,"column_start":5,"column_end":59}},{"value":"/     {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905426,"byte_end":14905435,"line_start":151,"line_end":151,"column_start":5,"column_end":14}},{"value":"/         let received = rx.borrow_and_update();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905440,"byte_end":14905490,"line_start":152,"line_end":152,"column_start":5,"column_end":55}},{"value":"/         assert_eq!(*received, \"goodbye\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905495,"byte_end":14905540,"line_start":153,"line_end":153,"column_start":5,"column_end":50}},{"value":"/         assert!(received.has_changed());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905545,"byte_end":14905589,"line_start":154,"line_end":154,"column_start":5,"column_end":49}},{"value":"/         // Release the read lock when leaving this scope.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905594,"byte_end":14905655,"line_start":155,"line_end":155,"column_start":5,"column_end":66}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905660,"byte_end":14905669,"line_start":156,"line_end":156,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905674,"byte_end":14905677,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/     // Now the value has already been marked as seen and could","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905682,"byte_end":14905748,"line_start":158,"line_end":158,"column_start":5,"column_end":71}},{"value":"/     // never be modified again (after the sender has been dropped).","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905753,"byte_end":14905824,"line_start":159,"line_end":159,"column_start":5,"column_end":76}},{"value":"/     assert!(!rx.borrow().has_changed());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905829,"byte_end":14905873,"line_start":160,"line_end":160,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905878,"byte_end":14905883,"line_start":161,"line_end":161,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14905888,"byte_end":14905895,"line_start":162,"line_end":162,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":3289},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14906501,"byte_end":14906506,"line_start":189,"line_end":189,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":3290},{"krate":0,"index":3667},{"krate":0,"index":3671},{"krate":0,"index":3293},{"krate":0,"index":3296},{"krate":0,"index":3674},{"krate":0,"index":3677},{"krate":0,"index":3679},{"krate":0,"index":3298},{"krate":0,"index":3300}],"decl_id":null,"docs":" Watch error types.\n","sig":null,"attributes":[{"value":"/ Watch error types.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14906513,"byte_end":14906535,"line_start":190,"line_end":190,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":3667},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14906643,"byte_end":14906652,"line_start":196,"line_end":196,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14906560,"byte_end":14906606,"line_start":194,"line_end":194,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3670},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14906656,"byte_end":14906661,"line_start":196,"line_end":196,"column_start":29,"column_end":34},"name":"0","qualname":"::sync::watch::error::SendError::0","value":"T","parent":{"krate":0,"index":3667},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14906767,"byte_end":14906770,"line_start":201,"line_end":201,"column_start":12,"column_end":15},"name":"fmt","qualname":"<SendError<T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3674},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14907051,"byte_end":14907060,"line_start":210,"line_end":210,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::watch::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when receiving a change notification.\n","sig":null,"attributes":[{"value":"/ Error produced when receiving a change notification.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14906951,"byte_end":14907007,"line_start":208,"line_end":208,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3299},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14907162,"byte_end":14907165,"line_start":215,"line_end":215,"column_start":12,"column_end":15},"name":"fmt","qualname":"<RecvError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10293},"children":[],"decl_id":{"krate":2,"index":10294},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3326},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14910113,"byte_end":14910120,"line_start":317,"line_end":317,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"fn channel<T>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909350,"byte_end":14909426,"line_start":290,"line_end":290,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909427,"byte_end":14909430,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909431,"byte_end":14909513,"line_start":292,"line_end":292,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909514,"byte_end":14909590,"line_start":293,"line_end":293,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909591,"byte_end":14909627,"line_start":294,"line_end":294,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909628,"byte_end":14909631,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909632,"byte_end":14909646,"line_start":296,"line_end":296,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909647,"byte_end":14909650,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909651,"byte_end":14909658,"line_start":298,"line_end":298,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909659,"byte_end":14909686,"line_start":299,"line_end":299,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909687,"byte_end":14909690,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909691,"byte_end":14909755,"line_start":301,"line_end":301,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909756,"byte_end":14909807,"line_start":302,"line_end":302,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909808,"byte_end":14909811,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909812,"byte_end":14909845,"line_start":304,"line_end":304,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909846,"byte_end":14909892,"line_start":305,"line_end":305,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909893,"byte_end":14909951,"line_start":306,"line_end":306,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909952,"byte_end":14909965,"line_start":307,"line_end":307,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909966,"byte_end":14909977,"line_start":308,"line_end":308,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909978,"byte_end":14909981,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14909982,"byte_end":14910008,"line_start":310,"line_end":310,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14910009,"byte_end":14910021,"line_start":311,"line_end":311,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14910022,"byte_end":14910029,"line_start":312,"line_end":312,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14910030,"byte_end":14910037,"line_start":313,"line_end":313,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14910038,"byte_end":14910041,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14910042,"byte_end":14910071,"line_start":315,"line_end":315,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14910072,"byte_end":14910105,"line_start":316,"line_end":316,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3331},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912491,"byte_end":14912497,"line_start":386,"line_end":386,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"fn borrow<'_>(&'_ Self) -> Ref","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value.","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14910847,"byte_end":14910903,"line_start":347,"line_end":347,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14910908,"byte_end":14910911,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ This method does not mark the returned value as seen, so future calls to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14910916,"byte_end":14910992,"line_start":349,"line_end":349,"column_start":5,"column_end":81}},{"value":"/ [`changed`] may return immediately even if you have already seen the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14910997,"byte_end":14911069,"line_start":350,"line_end":350,"column_start":5,"column_end":77}},{"value":"/ value with a call to `borrow`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14911074,"byte_end":14911108,"line_start":351,"line_end":351,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14911113,"byte_end":14911116,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14911121,"byte_end":14911197,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14911202,"byte_end":14911278,"line_start":354,"line_end":354,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible. Additionally, if you are running in an","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14911283,"byte_end":14911353,"line_start":355,"line_end":355,"column_start":5,"column_end":75}},{"value":"/ environment that allows `!Send` futures, you must ensure that the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14911358,"byte_end":14911427,"line_start":356,"line_end":356,"column_start":5,"column_end":74}},{"value":"/ returned `Ref` type is never held alive across an `.await` point.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14911432,"byte_end":14911501,"line_start":357,"line_end":357,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14911506,"byte_end":14911509,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The priority policy of the lock is dependent on the underlying lock","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14911514,"byte_end":14911585,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ implementation, and this type does not guarantee that any particular policy","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14911590,"byte_end":14911669,"line_start":360,"line_end":360,"column_start":5,"column_end":84}},{"value":"/ will be used. In particular, a producer which is waiting to acquire the lock","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14911674,"byte_end":14911754,"line_start":361,"line_end":361,"column_start":5,"column_end":85}},{"value":"/ in `send` might or might not block concurrent calls to `borrow`, e.g.:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14911759,"byte_end":14911833,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14911838,"byte_end":14911841,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ <details><summary>Potential deadlock example</summary>","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14911846,"byte_end":14911904,"line_start":364,"line_end":364,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14911909,"byte_end":14911912,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14911917,"byte_end":14911928,"line_start":366,"line_end":366,"column_start":5,"column_end":16}},{"value":"/ // Task 1 (on thread A)    |  // Task 2 (on thread B)","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14911933,"byte_end":14911990,"line_start":367,"line_end":367,"column_start":5,"column_end":62}},{"value":"/ let _ref1 = rx.borrow();   |","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14911995,"byte_end":14912027,"line_start":368,"line_end":368,"column_start":5,"column_end":37}},{"value":"/                            |  // will block","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912032,"byte_end":14912079,"line_start":369,"line_end":369,"column_start":5,"column_end":52}},{"value":"/                            |  let _ = tx.send(());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912084,"byte_end":14912138,"line_start":370,"line_end":370,"column_start":5,"column_end":59}},{"value":"/ // may deadlock            |","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912143,"byte_end":14912175,"line_start":371,"line_end":371,"column_start":5,"column_end":37}},{"value":"/ let _ref2 = rx.borrow();   |","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912180,"byte_end":14912212,"line_start":372,"line_end":372,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912217,"byte_end":14912224,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/ </details>","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912229,"byte_end":14912243,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912248,"byte_end":14912251,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ [`changed`]: Receiver::changed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912256,"byte_end":14912290,"line_start":376,"line_end":376,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912295,"byte_end":14912298,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912303,"byte_end":14912317,"line_start":378,"line_end":378,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912322,"byte_end":14912325,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912330,"byte_end":14912337,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912342,"byte_end":14912369,"line_start":381,"line_end":381,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912374,"byte_end":14912377,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912382,"byte_end":14912424,"line_start":383,"line_end":383,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912429,"byte_end":14912467,"line_start":384,"line_end":384,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912472,"byte_end":14912479,"line_start":385,"line_end":385,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3332},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14914441,"byte_end":14914458,"line_start":428,"line_end":428,"column_start":12,"column_end":29},"name":"borrow_and_update","qualname":"<Receiver<T>>::borrow_and_update","value":"fn borrow_and_update<'_>(&'_ mut Self) -> Ref","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value and marks that value\n as seen.","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value and marks that value","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912887,"byte_end":14912963,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ as seen.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912968,"byte_end":14912980,"line_start":398,"line_end":398,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912985,"byte_end":14912988,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method marks the current value as seen. Subsequent calls to [`changed`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14912993,"byte_end":14913073,"line_start":400,"line_end":400,"column_start":5,"column_end":85}},{"value":"/ will not return immediately until the [`Sender`] has modified the shared","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14913078,"byte_end":14913154,"line_start":401,"line_end":401,"column_start":5,"column_end":81}},{"value":"/ value again.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14913159,"byte_end":14913175,"line_start":402,"line_end":402,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14913180,"byte_end":14913183,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14913188,"byte_end":14913264,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14913269,"byte_end":14913345,"line_start":405,"line_end":405,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible. Additionally, if you are running in an","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14913350,"byte_end":14913420,"line_start":406,"line_end":406,"column_start":5,"column_end":75}},{"value":"/ environment that allows `!Send` futures, you must ensure that the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14913425,"byte_end":14913494,"line_start":407,"line_end":407,"column_start":5,"column_end":74}},{"value":"/ returned `Ref` type is never held alive across an `.await` point.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14913499,"byte_end":14913568,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14913573,"byte_end":14913576,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ The priority policy of the lock is dependent on the underlying lock","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14913581,"byte_end":14913652,"line_start":410,"line_end":410,"column_start":5,"column_end":76}},{"value":"/ implementation, and this type does not guarantee that any particular policy","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14913657,"byte_end":14913736,"line_start":411,"line_end":411,"column_start":5,"column_end":84}},{"value":"/ will be used. In particular, a producer which is waiting to acquire the lock","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14913741,"byte_end":14913821,"line_start":412,"line_end":412,"column_start":5,"column_end":85}},{"value":"/ in `send` might or might not block concurrent calls to `borrow`, e.g.:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14913826,"byte_end":14913900,"line_start":413,"line_end":413,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14913905,"byte_end":14913908,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ <details><summary>Potential deadlock example</summary>","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14913913,"byte_end":14913971,"line_start":415,"line_end":415,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14913976,"byte_end":14913979,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14913984,"byte_end":14913995,"line_start":417,"line_end":417,"column_start":5,"column_end":16}},{"value":"/ // Task 1 (on thread A)                |  // Task 2 (on thread B)","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14914000,"byte_end":14914069,"line_start":418,"line_end":418,"column_start":5,"column_end":74}},{"value":"/ let _ref1 = rx1.borrow_and_update();   |","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14914074,"byte_end":14914118,"line_start":419,"line_end":419,"column_start":5,"column_end":49}},{"value":"/                                        |  // will block","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14914123,"byte_end":14914182,"line_start":420,"line_end":420,"column_start":5,"column_end":64}},{"value":"/                                        |  let _ = tx.send(());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14914187,"byte_end":14914253,"line_start":421,"line_end":421,"column_start":5,"column_end":71}},{"value":"/ // may deadlock                        |","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14914258,"byte_end":14914302,"line_start":422,"line_end":422,"column_start":5,"column_end":49}},{"value":"/ let _ref2 = rx2.borrow_and_update();   |","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14914307,"byte_end":14914351,"line_start":423,"line_end":423,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14914356,"byte_end":14914363,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ </details>","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14914368,"byte_end":14914382,"line_start":425,"line_end":425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14914387,"byte_end":14914390,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ [`changed`]: Receiver::changed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14914395,"byte_end":14914429,"line_start":427,"line_end":427,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915967,"byte_end":14915978,"line_start":472,"line_end":472,"column_start":12,"column_end":23},"name":"has_changed","qualname":"<Receiver<T>>::has_changed","value":"fn has_changed<'_>(&'_ Self) -> Result<bool, error::RecvError>","parent":null,"children":[],"decl_id":null,"docs":" Checks if this channel contains a message that this receiver has not yet\n seen. The new value is not marked as seen.","sig":null,"attributes":[{"value":"/ Checks if this channel contains a message that this receiver has not yet","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14914954,"byte_end":14915030,"line_start":442,"line_end":442,"column_start":5,"column_end":81}},{"value":"/ seen. The new value is not marked as seen.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915035,"byte_end":14915081,"line_start":443,"line_end":443,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915086,"byte_end":14915089,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ Although this method is called `has_changed`, it does not check new","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915094,"byte_end":14915165,"line_start":445,"line_end":445,"column_start":5,"column_end":76}},{"value":"/ messages for equality, so this call will return true even if the new","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915170,"byte_end":14915242,"line_start":446,"line_end":446,"column_start":5,"column_end":77}},{"value":"/ message is equal to the old message.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915247,"byte_end":14915287,"line_start":447,"line_end":447,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915292,"byte_end":14915295,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the channel has been closed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915300,"byte_end":14915352,"line_start":449,"line_end":449,"column_start":5,"column_end":57}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915357,"byte_end":14915371,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915376,"byte_end":14915379,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915384,"byte_end":14915391,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915396,"byte_end":14915423,"line_start":453,"line_end":453,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915428,"byte_end":14915431,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915436,"byte_end":14915454,"line_start":455,"line_end":455,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915459,"byte_end":14915480,"line_start":456,"line_end":456,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915485,"byte_end":14915536,"line_start":457,"line_end":457,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915541,"byte_end":14915544,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"goodbye\").unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915549,"byte_end":14915585,"line_start":459,"line_end":459,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915590,"byte_end":14915593,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.has_changed().unwrap());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915598,"byte_end":14915641,"line_start":461,"line_end":461,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(*rx.borrow_and_update(), \"goodbye\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915646,"byte_end":14915701,"line_start":462,"line_end":462,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915706,"byte_end":14915709,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/     // The value has been marked as seen","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915714,"byte_end":14915758,"line_start":464,"line_end":464,"column_start":5,"column_end":49}},{"value":"/     assert!(!rx.has_changed().unwrap());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915763,"byte_end":14915807,"line_start":465,"line_end":465,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915812,"byte_end":14915815,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915820,"byte_end":14915837,"line_start":467,"line_end":467,"column_start":5,"column_end":22}},{"value":"/     // The `tx` handle has been dropped","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915842,"byte_end":14915885,"line_start":468,"line_end":468,"column_start":5,"column_end":48}},{"value":"/     assert!(rx.has_changed().is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915890,"byte_end":14915933,"line_start":469,"line_end":469,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915938,"byte_end":14915943,"line_start":470,"line_end":470,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14915948,"byte_end":14915955,"line_start":471,"line_end":471,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3334},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917769,"byte_end":14917776,"line_start":523,"line_end":523,"column_start":18,"column_end":25},"name":"changed","qualname":"<Receiver<T>>::changed","value":"async fn changed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for a change notification, then marks the newest value as seen.","sig":null,"attributes":[{"value":"/ Waits for a change notification, then marks the newest value as seen.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14916332,"byte_end":14916405,"line_start":484,"line_end":484,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14916410,"byte_end":14916413,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ If the newest value in the channel has not yet been marked seen when","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14916418,"byte_end":14916490,"line_start":486,"line_end":486,"column_start":5,"column_end":77}},{"value":"/ this method is called, the method marks that value seen and returns","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14916495,"byte_end":14916566,"line_start":487,"line_end":487,"column_start":5,"column_end":76}},{"value":"/ immediately. If the newest value has already been marked seen, then the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14916571,"byte_end":14916646,"line_start":488,"line_end":488,"column_start":5,"column_end":80}},{"value":"/ method sleeps until a new message is sent by the [`Sender`] connected to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14916651,"byte_end":14916727,"line_start":489,"line_end":489,"column_start":5,"column_end":81}},{"value":"/ this `Receiver`, or until the [`Sender`] is dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14916732,"byte_end":14916788,"line_start":490,"line_end":490,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14916793,"byte_end":14916796,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ This method returns an error if and only if the [`Sender`] is dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14916801,"byte_end":14916875,"line_start":492,"line_end":492,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14916880,"byte_end":14916883,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14916888,"byte_end":14916907,"line_start":494,"line_end":494,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14916912,"byte_end":14916915,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. If you use it as the event in a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14916920,"byte_end":14916983,"line_start":496,"line_end":496,"column_start":5,"column_end":68}},{"value":"/ [`tokio::select!`](crate::select) statement and some other branch","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14916988,"byte_end":14917057,"line_start":497,"line_end":497,"column_start":5,"column_end":74}},{"value":"/ completes first, then it is guaranteed that no values have been marked","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917062,"byte_end":14917136,"line_start":498,"line_end":498,"column_start":5,"column_end":79}},{"value":"/ seen by this call to `changed`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917141,"byte_end":14917176,"line_start":499,"line_end":499,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917181,"byte_end":14917184,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917189,"byte_end":14917218,"line_start":501,"line_end":501,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917223,"byte_end":14917226,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917231,"byte_end":14917245,"line_start":503,"line_end":503,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917250,"byte_end":14917253,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917258,"byte_end":14917265,"line_start":505,"line_end":505,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917270,"byte_end":14917297,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917302,"byte_end":14917305,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917310,"byte_end":14917328,"line_start":508,"line_end":508,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917333,"byte_end":14917354,"line_start":509,"line_end":509,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917359,"byte_end":14917410,"line_start":510,"line_end":510,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917415,"byte_end":14917418,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917423,"byte_end":14917456,"line_start":512,"line_end":512,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"goodbye\").unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917461,"byte_end":14917501,"line_start":513,"line_end":513,"column_start":5,"column_end":45}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917506,"byte_end":14917517,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917522,"byte_end":14917525,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.changed().await.is_ok());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917530,"byte_end":14917574,"line_start":516,"line_end":516,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*rx.borrow(), \"goodbye\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917579,"byte_end":14917623,"line_start":517,"line_end":517,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917628,"byte_end":14917631,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/     // The `tx` handle has been dropped","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917636,"byte_end":14917679,"line_start":519,"line_end":519,"column_start":5,"column_end":48}},{"value":"/     assert!(rx.changed().await.is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917684,"byte_end":14917729,"line_start":520,"line_end":520,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917734,"byte_end":14917739,"line_start":521,"line_end":521,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14917744,"byte_end":14917751,"line_start":522,"line_end":522,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14918725,"byte_end":14918737,"line_start":551,"line_end":551,"column_start":12,"column_end":24},"name":"same_channel","qualname":"<Receiver<T>>::same_channel","value":"fn same_channel<'_, '_>(&'_ Self, &'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if receivers belong to the same channel.","sig":null,"attributes":[{"value":"/ Returns `true` if receivers belong to the same channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14918357,"byte_end":14918416,"line_start":539,"line_end":539,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14918421,"byte_end":14918424,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14918429,"byte_end":14918443,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14918448,"byte_end":14918451,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14918456,"byte_end":14918463,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::watch::channel(true);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14918468,"byte_end":14918521,"line_start":544,"line_end":544,"column_start":5,"column_end":58}},{"value":"/ let rx2 = rx.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14918526,"byte_end":14918551,"line_start":545,"line_end":545,"column_start":5,"column_end":30}},{"value":"/ assert!(rx.same_channel(&rx2));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14918556,"byte_end":14918591,"line_start":546,"line_end":546,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14918596,"byte_end":14918599,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let (tx3, rx3) = tokio::sync::watch::channel(true);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14918604,"byte_end":14918659,"line_start":548,"line_end":548,"column_start":5,"column_end":60}},{"value":"/ assert!(!rx3.same_channel(&rx2));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14918664,"byte_end":14918701,"line_start":549,"line_end":549,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14918706,"byte_end":14918713,"line_start":550,"line_end":550,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3342},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14919571,"byte_end":14919576,"line_start":585,"line_end":585,"column_start":8,"column_end":13},"name":"clone","qualname":"<Receiver<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14919763,"byte_end":14919767,"line_start":594,"line_end":594,"column_start":8,"column_end":12},"name":"drop","qualname":"<Receiver<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14921032,"byte_end":14921036,"line_start":623,"line_end":623,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn send<'_>(&'_ Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers.","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920136,"byte_end":14920199,"line_start":605,"line_end":605,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920204,"byte_end":14920207,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ This method fails if the channel is closed, which is the case when","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920212,"byte_end":14920282,"line_start":607,"line_end":607,"column_start":5,"column_end":75}},{"value":"/ every receiver has been dropped. It is possible to reopen the channel","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920287,"byte_end":14920360,"line_start":608,"line_end":608,"column_start":5,"column_end":78}},{"value":"/ using the [`subscribe`] method. However, when `send` fails, the value","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920365,"byte_end":14920438,"line_start":609,"line_end":609,"column_start":5,"column_end":78}},{"value":"/ isn't made available for future receivers (but returned with the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920443,"byte_end":14920511,"line_start":610,"line_end":610,"column_start":5,"column_end":73}},{"value":"/ [`SendError`]).","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920516,"byte_end":14920535,"line_start":611,"line_end":611,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920540,"byte_end":14920543,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ To always make a new value available for future receivers, even if no","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920548,"byte_end":14920621,"line_start":613,"line_end":613,"column_start":5,"column_end":78}},{"value":"/ receiver currently exists, one of the other send methods","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920626,"byte_end":14920686,"line_start":614,"line_end":614,"column_start":5,"column_end":65}},{"value":"/ ([`send_if_modified`], [`send_modify`], or [`send_replace`]) can be","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920691,"byte_end":14920762,"line_start":615,"line_end":615,"column_start":5,"column_end":76}},{"value":"/ used instead.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920767,"byte_end":14920784,"line_start":616,"line_end":616,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920789,"byte_end":14920792,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ [`subscribe`]: Sender::subscribe","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920797,"byte_end":14920833,"line_start":618,"line_end":618,"column_start":5,"column_end":41}},{"value":"/ [`SendError`]: error::SendError","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920838,"byte_end":14920873,"line_start":619,"line_end":619,"column_start":5,"column_end":40}},{"value":"/ [`send_if_modified`]: Sender::send_if_modified","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920878,"byte_end":14920928,"line_start":620,"line_end":620,"column_start":5,"column_end":55}},{"value":"/ [`send_modify`]: Sender::send_modify","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920933,"byte_end":14920973,"line_start":621,"line_end":621,"column_start":5,"column_end":45}},{"value":"/ [`send_replace`]: Sender::send_replace","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920978,"byte_end":14921020,"line_start":622,"line_end":622,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922539,"byte_end":14922550,"line_start":663,"line_end":663,"column_start":12,"column_end":23},"name":"send_modify","qualname":"<Sender<T>>::send_modify","value":"fn send_modify<F, '_>(&'_ Self, F) where F: for<'_> FnOnce(&'_ mut T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modifies the watched value **unconditionally** in-place,\n notifying all receivers.","sig":null,"attributes":[{"value":"/ Modifies the watched value **unconditionally** in-place,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14921347,"byte_end":14921407,"line_start":633,"line_end":633,"column_start":5,"column_end":65}},{"value":"/ notifying all receivers.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14921412,"byte_end":14921440,"line_start":634,"line_end":634,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14921445,"byte_end":14921448,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ This can useful for modifying the watched value, without","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14921453,"byte_end":14921513,"line_start":636,"line_end":636,"column_start":5,"column_end":65}},{"value":"/ having to allocate a new instance. Additionally, this","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14921518,"byte_end":14921575,"line_start":637,"line_end":637,"column_start":5,"column_end":62}},{"value":"/ method permits sending values even when there are no receivers.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14921580,"byte_end":14921647,"line_start":638,"line_end":638,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14921652,"byte_end":14921655,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ Prefer to use the more versatile function [`Self::send_if_modified()`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14921660,"byte_end":14921734,"line_start":640,"line_end":640,"column_start":5,"column_end":79}},{"value":"/ if the value is only modified conditionally during the mutable borrow","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14921739,"byte_end":14921812,"line_start":641,"line_end":641,"column_start":5,"column_end":78}},{"value":"/ to prevent unneeded change notifications for unmodified values.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14921817,"byte_end":14921884,"line_start":642,"line_end":642,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14921889,"byte_end":14921892,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14921897,"byte_end":14921909,"line_start":644,"line_end":644,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14921914,"byte_end":14921917,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ This function panics when the invocation of the `modify` closure panics.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14921922,"byte_end":14921998,"line_start":646,"line_end":646,"column_start":5,"column_end":81}},{"value":"/ No receivers are notified when panicking. All changes of the watched","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922003,"byte_end":14922075,"line_start":647,"line_end":647,"column_start":5,"column_end":77}},{"value":"/ value applied by the closure before panicking will be visible in","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922080,"byte_end":14922148,"line_start":648,"line_end":648,"column_start":5,"column_end":73}},{"value":"/ subsequent calls to `borrow`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922153,"byte_end":14922186,"line_start":649,"line_end":649,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922191,"byte_end":14922194,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922199,"byte_end":14922213,"line_start":651,"line_end":651,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922218,"byte_end":14922221,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922226,"byte_end":14922233,"line_start":653,"line_end":653,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922238,"byte_end":14922265,"line_start":654,"line_end":654,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922270,"byte_end":14922273,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ struct State {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922278,"byte_end":14922296,"line_start":656,"line_end":656,"column_start":5,"column_end":23}},{"value":"/     counter: usize,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922301,"byte_end":14922324,"line_start":657,"line_end":657,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922329,"byte_end":14922334,"line_start":658,"line_end":658,"column_start":5,"column_end":10}},{"value":"/ let (state_tx, state_rx) = watch::channel(State { counter: 0 });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922339,"byte_end":14922407,"line_start":659,"line_end":659,"column_start":5,"column_end":73}},{"value":"/ state_tx.send_modify(|state| state.counter += 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922412,"byte_end":14922465,"line_start":660,"line_end":660,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(state_rx.borrow().counter, 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922470,"byte_end":14922515,"line_start":661,"line_end":661,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922520,"byte_end":14922527,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14925028,"byte_end":14925044,"line_start":730,"line_end":730,"column_start":12,"column_end":28},"name":"send_if_modified","qualname":"<Sender<T>>::send_if_modified","value":"fn send_if_modified<F, '_>(&'_ Self, F) -> bool where\nF: for<'_> FnOnce(&'_ mut T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Modifies the watched value **conditionally** in-place,\n notifying all receivers only if modified.","sig":null,"attributes":[{"value":"/ Modifies the watched value **conditionally** in-place,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922722,"byte_end":14922780,"line_start":673,"line_end":673,"column_start":5,"column_end":63}},{"value":"/ notifying all receivers only if modified.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922785,"byte_end":14922830,"line_start":674,"line_end":674,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922835,"byte_end":14922838,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This can useful for modifying the watched value, without","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922843,"byte_end":14922903,"line_start":676,"line_end":676,"column_start":5,"column_end":65}},{"value":"/ having to allocate a new instance. Additionally, this","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922908,"byte_end":14922965,"line_start":677,"line_end":677,"column_start":5,"column_end":62}},{"value":"/ method permits sending values even when there are no receivers.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14922970,"byte_end":14923037,"line_start":678,"line_end":678,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923042,"byte_end":14923045,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ The `modify` closure must return `true` if the value has actually","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923050,"byte_end":14923119,"line_start":680,"line_end":680,"column_start":5,"column_end":74}},{"value":"/ been modified during the mutable borrow. It should only return `false`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923124,"byte_end":14923198,"line_start":681,"line_end":681,"column_start":5,"column_end":79}},{"value":"/ if the value is guaranteed to be unmodified despite the mutable","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923203,"byte_end":14923270,"line_start":682,"line_end":682,"column_start":5,"column_end":72}},{"value":"/ borrow.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923275,"byte_end":14923286,"line_start":683,"line_end":683,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923291,"byte_end":14923294,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ Receivers are only notified if the closure returned `true`. If the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923299,"byte_end":14923369,"line_start":685,"line_end":685,"column_start":5,"column_end":75}},{"value":"/ closure has modified the value but returned `false` this results","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923374,"byte_end":14923442,"line_start":686,"line_end":686,"column_start":5,"column_end":73}},{"value":"/ in a *silent modification*, i.e. the modified value will be visible","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923447,"byte_end":14923518,"line_start":687,"line_end":687,"column_start":5,"column_end":76}},{"value":"/ in subsequent calls to `borrow`, but receivers will not receive","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923523,"byte_end":14923590,"line_start":688,"line_end":688,"column_start":5,"column_end":72}},{"value":"/ a change notification.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923595,"byte_end":14923621,"line_start":689,"line_end":689,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923626,"byte_end":14923629,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ Returns the result of the closure, i.e. `true` if the value has","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923634,"byte_end":14923701,"line_start":691,"line_end":691,"column_start":5,"column_end":72}},{"value":"/ been modified and `false` otherwise.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923706,"byte_end":14923746,"line_start":692,"line_end":692,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923751,"byte_end":14923754,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923759,"byte_end":14923771,"line_start":694,"line_end":694,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923776,"byte_end":14923779,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This function panics when the invocation of the `modify` closure panics.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923784,"byte_end":14923860,"line_start":696,"line_end":696,"column_start":5,"column_end":81}},{"value":"/ No receivers are notified when panicking. All changes of the watched","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923865,"byte_end":14923937,"line_start":697,"line_end":697,"column_start":5,"column_end":77}},{"value":"/ value applied by the closure before panicking will be visible in","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14923942,"byte_end":14924010,"line_start":698,"line_end":698,"column_start":5,"column_end":73}},{"value":"/ subsequent calls to `borrow`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924015,"byte_end":14924048,"line_start":699,"line_end":699,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924053,"byte_end":14924056,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924061,"byte_end":14924075,"line_start":701,"line_end":701,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924080,"byte_end":14924083,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924088,"byte_end":14924095,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924100,"byte_end":14924127,"line_start":704,"line_end":704,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924132,"byte_end":14924135,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ struct State {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924140,"byte_end":14924158,"line_start":706,"line_end":706,"column_start":5,"column_end":23}},{"value":"/     counter: usize,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924163,"byte_end":14924186,"line_start":707,"line_end":707,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924191,"byte_end":14924196,"line_start":708,"line_end":708,"column_start":5,"column_end":10}},{"value":"/ let (state_tx, mut state_rx) = watch::channel(State { counter: 1 });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924201,"byte_end":14924273,"line_start":709,"line_end":709,"column_start":5,"column_end":77}},{"value":"/ let inc_counter_if_odd = |state: &mut State| {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924278,"byte_end":14924328,"line_start":710,"line_end":710,"column_start":5,"column_end":55}},{"value":"/     if state.counter % 2 == 1 {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924333,"byte_end":14924368,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/         state.counter += 1;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924373,"byte_end":14924404,"line_start":712,"line_end":712,"column_start":5,"column_end":36}},{"value":"/         return true;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924409,"byte_end":14924433,"line_start":713,"line_end":713,"column_start":5,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924438,"byte_end":14924447,"line_start":714,"line_end":714,"column_start":5,"column_end":14}},{"value":"/     false","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924452,"byte_end":14924465,"line_start":715,"line_end":715,"column_start":5,"column_end":18}},{"value":"/ };","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924470,"byte_end":14924476,"line_start":716,"line_end":716,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924481,"byte_end":14924484,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(state_rx.borrow().counter, 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924489,"byte_end":14924534,"line_start":718,"line_end":718,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924539,"byte_end":14924542,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ assert!(!state_rx.has_changed().unwrap());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924547,"byte_end":14924593,"line_start":720,"line_end":720,"column_start":5,"column_end":51}},{"value":"/ assert!(state_tx.send_if_modified(inc_counter_if_odd));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924598,"byte_end":14924657,"line_start":721,"line_end":721,"column_start":5,"column_end":64}},{"value":"/ assert!(state_rx.has_changed().unwrap());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924662,"byte_end":14924707,"line_start":722,"line_end":722,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(state_rx.borrow_and_update().counter, 2);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924712,"byte_end":14924768,"line_start":723,"line_end":723,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924773,"byte_end":14924776,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ assert!(!state_rx.has_changed().unwrap());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924781,"byte_end":14924827,"line_start":725,"line_end":725,"column_start":5,"column_end":51}},{"value":"/ assert!(!state_tx.send_if_modified(inc_counter_if_odd));","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924832,"byte_end":14924892,"line_start":726,"line_end":726,"column_start":5,"column_end":65}},{"value":"/ assert!(!state_rx.has_changed().unwrap());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924897,"byte_end":14924943,"line_start":727,"line_end":727,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(state_rx.borrow_and_update().counter, 2);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14924948,"byte_end":14925004,"line_start":728,"line_end":728,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14925009,"byte_end":14925016,"line_start":729,"line_end":729,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3355},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14926985,"byte_end":14926997,"line_start":788,"line_end":788,"column_start":12,"column_end":24},"name":"send_replace","qualname":"<Sender<T>>::send_replace","value":"fn send_replace<'_>(&'_ Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers and returning\n the previous value in the channel.","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers and returning","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14926444,"byte_end":14926520,"line_start":772,"line_end":772,"column_start":5,"column_end":81}},{"value":"/ the previous value in the channel.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14926525,"byte_end":14926563,"line_start":773,"line_end":773,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14926568,"byte_end":14926571,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ This can be useful for reusing the buffers inside a watched value.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14926576,"byte_end":14926646,"line_start":775,"line_end":775,"column_start":5,"column_end":75}},{"value":"/ Additionally, this method permits sending values even when there are no","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14926651,"byte_end":14926726,"line_start":776,"line_end":776,"column_start":5,"column_end":80}},{"value":"/ receivers.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14926731,"byte_end":14926745,"line_start":777,"line_end":777,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14926750,"byte_end":14926753,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14926758,"byte_end":14926772,"line_start":779,"line_end":779,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14926777,"byte_end":14926780,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14926785,"byte_end":14926792,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14926797,"byte_end":14926824,"line_start":782,"line_end":782,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14926829,"byte_end":14926832,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ let (tx, _rx) = watch::channel(1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14926837,"byte_end":14926875,"line_start":784,"line_end":784,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(tx.send_replace(2), 1);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14926880,"byte_end":14926918,"line_start":785,"line_end":785,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(tx.send_replace(3), 2);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14926923,"byte_end":14926961,"line_start":786,"line_end":786,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14926966,"byte_end":14926973,"line_start":787,"line_end":787,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3357},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927625,"byte_end":14927631,"line_start":809,"line_end":809,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Sender<T>>::borrow","value":"fn borrow<'_>(&'_ Self) -> Ref","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927163,"byte_end":14927218,"line_start":795,"line_end":795,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927223,"byte_end":14927226,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927231,"byte_end":14927307,"line_start":797,"line_end":797,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927312,"byte_end":14927388,"line_start":798,"line_end":798,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927393,"byte_end":14927424,"line_start":799,"line_end":799,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927429,"byte_end":14927432,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927437,"byte_end":14927451,"line_start":801,"line_end":801,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927456,"byte_end":14927459,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927464,"byte_end":14927471,"line_start":803,"line_end":803,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927476,"byte_end":14927503,"line_start":804,"line_end":804,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927508,"byte_end":14927511,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ let (tx, _) = watch::channel(\"hello\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927516,"byte_end":14927558,"line_start":806,"line_end":806,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*tx.borrow(), \"hello\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927563,"byte_end":14927601,"line_start":807,"line_end":807,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927606,"byte_end":14927613,"line_start":808,"line_end":808,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3358},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928170,"byte_end":14928179,"line_start":830,"line_end":830,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"fn is_closed<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when all receivers\n have dropped.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when all receivers","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927854,"byte_end":14927928,"line_start":818,"line_end":818,"column_start":5,"column_end":79}},{"value":"/ have dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927933,"byte_end":14927950,"line_start":819,"line_end":819,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927955,"byte_end":14927958,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927963,"byte_end":14927977,"line_start":821,"line_end":821,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927982,"byte_end":14927985,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14927990,"byte_end":14927997,"line_start":823,"line_end":823,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::watch::channel(());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928002,"byte_end":14928053,"line_start":824,"line_end":824,"column_start":5,"column_end":56}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928058,"byte_end":14928087,"line_start":825,"line_end":825,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928092,"byte_end":14928095,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928100,"byte_end":14928113,"line_start":827,"line_end":827,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928118,"byte_end":14928146,"line_start":828,"line_end":828,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928151,"byte_end":14928158,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3359},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929100,"byte_end":14929106,"line_start":863,"line_end":863,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928243,"byte_end":14928289,"line_start":834,"line_end":834,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928294,"byte_end":14928297,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928302,"byte_end":14928376,"line_start":836,"line_end":836,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928381,"byte_end":14928436,"line_start":837,"line_end":837,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928441,"byte_end":14928444,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928449,"byte_end":14928468,"line_start":839,"line_end":839,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928473,"byte_end":14928476,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe. Once the channel is closed, it stays closed","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928481,"byte_end":14928556,"line_start":841,"line_end":841,"column_start":5,"column_end":80}},{"value":"/ forever and all future calls to `closed` will return immediately.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928561,"byte_end":14928630,"line_start":842,"line_end":842,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928635,"byte_end":14928638,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928643,"byte_end":14928657,"line_start":844,"line_end":844,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928662,"byte_end":14928665,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928670,"byte_end":14928677,"line_start":846,"line_end":846,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928682,"byte_end":14928709,"line_start":847,"line_end":847,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928714,"byte_end":14928717,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928722,"byte_end":14928740,"line_start":849,"line_end":849,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928745,"byte_end":14928766,"line_start":850,"line_end":850,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = watch::channel(\"hello\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928771,"byte_end":14928818,"line_start":851,"line_end":851,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928823,"byte_end":14928826,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928831,"byte_end":14928864,"line_start":853,"line_end":853,"column_start":5,"column_end":38}},{"value":"/         // use `rx`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928869,"byte_end":14928892,"line_start":854,"line_end":854,"column_start":5,"column_end":28}},{"value":"/         drop(rx);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928897,"byte_end":14928918,"line_start":855,"line_end":855,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928923,"byte_end":14928934,"line_start":856,"line_end":856,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928939,"byte_end":14928942,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/     // Waits for `rx` to drop","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928947,"byte_end":14928980,"line_start":858,"line_end":858,"column_start":5,"column_end":38}},{"value":"/     tx.closed().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14928985,"byte_end":14929011,"line_start":859,"line_end":859,"column_start":5,"column_end":31}},{"value":"/     println!(\"the `rx` handles dropped\")","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929016,"byte_end":14929060,"line_start":860,"line_end":860,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929065,"byte_end":14929070,"line_start":861,"line_end":861,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929075,"byte_end":14929082,"line_start":862,"line_end":862,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931141,"byte_end":14931150,"line_start":932,"line_end":932,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"fn subscribe<'_>(&'_ Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] connected to this `Sender`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] connected to this `Sender`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929477,"byte_end":14929535,"line_start":877,"line_end":877,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929540,"byte_end":14929543,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ All messages sent before this call to `subscribe` are initially marked","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929548,"byte_end":14929622,"line_start":879,"line_end":879,"column_start":5,"column_end":79}},{"value":"/ as seen by the new `Receiver`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929627,"byte_end":14929661,"line_start":880,"line_end":880,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929666,"byte_end":14929669,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ This method can be called even if there are no other receivers. In this","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929674,"byte_end":14929749,"line_start":882,"line_end":882,"column_start":5,"column_end":80}},{"value":"/ case, the channel is reopened.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929754,"byte_end":14929788,"line_start":883,"line_end":883,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929793,"byte_end":14929796,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929801,"byte_end":14929815,"line_start":885,"line_end":885,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929820,"byte_end":14929823,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ The new channel will receive messages sent on this `Sender`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929828,"byte_end":14929892,"line_start":887,"line_end":887,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929897,"byte_end":14929900,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929905,"byte_end":14929912,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929917,"byte_end":14929944,"line_start":890,"line_end":890,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929949,"byte_end":14929952,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929957,"byte_end":14929975,"line_start":892,"line_end":892,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14929980,"byte_end":14930001,"line_start":893,"line_end":893,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = watch::channel(0u64);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930006,"byte_end":14930051,"line_start":894,"line_end":894,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930056,"byte_end":14930059,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/     tx.send(5).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930064,"byte_end":14930092,"line_start":896,"line_end":896,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930097,"byte_end":14930100,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/     let rx = tx.subscribe();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930105,"byte_end":14930137,"line_start":898,"line_end":898,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(5, *rx.borrow());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930142,"byte_end":14930178,"line_start":899,"line_end":899,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930183,"byte_end":14930186,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930191,"byte_end":14930220,"line_start":901,"line_end":901,"column_start":5,"column_end":34}},{"value":"/     assert_eq!(10, *rx.borrow());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930225,"byte_end":14930262,"line_start":902,"line_end":902,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930267,"byte_end":14930272,"line_start":903,"line_end":903,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930277,"byte_end":14930284,"line_start":904,"line_end":904,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930289,"byte_end":14930292,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ The most recent message is considered seen by the channel, so this test","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930297,"byte_end":14930372,"line_start":906,"line_end":906,"column_start":5,"column_end":80}},{"value":"/ is guaranteed to pass.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930377,"byte_end":14930403,"line_start":907,"line_end":907,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930408,"byte_end":14930411,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930416,"byte_end":14930423,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930428,"byte_end":14930455,"line_start":910,"line_end":910,"column_start":5,"column_end":32}},{"value":"/ use tokio::time::Duration;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930460,"byte_end":14930490,"line_start":911,"line_end":911,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930495,"byte_end":14930498,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930503,"byte_end":14930521,"line_start":913,"line_end":913,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930526,"byte_end":14930547,"line_start":914,"line_end":914,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = watch::channel(0u64);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930552,"byte_end":14930597,"line_start":915,"line_end":915,"column_start":5,"column_end":50}},{"value":"/     tx.send(5).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930602,"byte_end":14930630,"line_start":916,"line_end":916,"column_start":5,"column_end":33}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930635,"byte_end":14930671,"line_start":917,"line_end":917,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930676,"byte_end":14930679,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930684,"byte_end":14930717,"line_start":919,"line_end":919,"column_start":5,"column_end":38}},{"value":"/         // by spawning and sleeping, the message is sent after `main`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930722,"byte_end":14930795,"line_start":920,"line_end":920,"column_start":5,"column_end":78}},{"value":"/         // hits the call to `changed`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930800,"byte_end":14930842,"line_start":921,"line_end":921,"column_start":5,"column_end":47}},{"value":"/         # if false {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930847,"byte_end":14930871,"line_start":922,"line_end":922,"column_start":5,"column_end":29}},{"value":"/         tokio::time::sleep(Duration::from_millis(10)).await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930876,"byte_end":14930940,"line_start":923,"line_end":923,"column_start":5,"column_end":69}},{"value":"/         # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930945,"byte_end":14930960,"line_start":924,"line_end":924,"column_start":5,"column_end":20}},{"value":"/         tx.send(100).unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14930965,"byte_end":14930999,"line_start":925,"line_end":925,"column_start":5,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931004,"byte_end":14931015,"line_start":926,"line_end":926,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931020,"byte_end":14931023,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/     rx.changed().await.unwrap();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931028,"byte_end":14931064,"line_start":928,"line_end":928,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(100, *rx.borrow());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931069,"byte_end":14931107,"line_start":929,"line_end":929,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931112,"byte_end":14931117,"line_start":930,"line_end":930,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931122,"byte_end":14931129,"line_start":931,"line_end":931,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3363},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931921,"byte_end":14931935,"line_start":959,"line_end":959,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"fn receiver_count<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of receivers that currently exist.","sig":null,"attributes":[{"value":"/ Returns the number of receivers that currently exist.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931481,"byte_end":14931538,"line_start":941,"line_end":941,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931543,"byte_end":14931546,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931551,"byte_end":14931565,"line_start":943,"line_end":943,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931570,"byte_end":14931573,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931578,"byte_end":14931585,"line_start":945,"line_end":945,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931590,"byte_end":14931617,"line_start":946,"line_end":946,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931622,"byte_end":14931625,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931630,"byte_end":14931648,"line_start":948,"line_end":948,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931653,"byte_end":14931674,"line_start":949,"line_end":949,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx1) = watch::channel(\"hello\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931679,"byte_end":14931727,"line_start":950,"line_end":950,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931732,"byte_end":14931735,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931740,"byte_end":14931783,"line_start":952,"line_end":952,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931788,"byte_end":14931791,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = rx1.clone();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931796,"byte_end":14931831,"line_start":954,"line_end":954,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931836,"byte_end":14931839,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931844,"byte_end":14931887,"line_start":956,"line_end":956,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931892,"byte_end":14931897,"line_start":957,"line_end":957,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14931902,"byte_end":14931909,"line_start":958,"line_end":958,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14932046,"byte_end":14932050,"line_start":965,"line_end":965,"column_start":8,"column_end":12},"name":"drop","qualname":"<Sender<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3370},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14932251,"byte_end":14932256,"line_start":976,"line_end":976,"column_start":8,"column_end":13},"name":"deref","qualname":"<Ref as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ T","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":889},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","parent":null,"children":[],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"/ Asynchronous green-threads.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":135763,"byte_end":135794,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":135795,"byte_end":135798,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":135799,"byte_end":135821,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":135822,"byte_end":135825,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":135826,"byte_end":135907,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":135908,"byte_end":135988,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":135989,"byte_end":136069,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":136070,"byte_end":136144,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":136145,"byte_end":136220,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":136221,"byte_end":136243,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":136244,"byte_end":136247,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":136248,"byte_end":136283,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":136284,"byte_end":136287,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":136288,"byte_end":136362,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":136363,"byte_end":136442,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":136443,"byte_end":136515,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":136516,"byte_end":136591,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":136592,"byte_end":136645,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":136646,"byte_end":136649,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":136650,"byte_end":136727,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":136728,"byte_end":136801,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":136802,"byte_end":136881,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":136882,"byte_end":136960,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":136961,"byte_end":137033,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":137034,"byte_end":137109,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":137110,"byte_end":137184,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":137185,"byte_end":137260,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":137261,"byte_end":137291,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":137292,"byte_end":137295,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":137296,"byte_end":137374,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":137375,"byte_end":137450,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":137451,"byte_end":137528,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":137529,"byte_end":137608,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":137609,"byte_end":137687,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":137688,"byte_end":137763,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":137764,"byte_end":137839,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":137840,"byte_end":137901,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":137902,"byte_end":137905,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":137906,"byte_end":137930,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":137931,"byte_end":137995,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":137996,"byte_end":138056,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138057,"byte_end":138146,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138147,"byte_end":138235,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138236,"byte_end":138239,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138240,"byte_end":138265,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138266,"byte_end":138269,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138270,"byte_end":138337,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138338,"byte_end":138341,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138342,"byte_end":138358,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138359,"byte_end":138362,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138363,"byte_end":138442,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138443,"byte_end":138522,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138523,"byte_end":138602,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138603,"byte_end":138670,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138671,"byte_end":138674,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138675,"byte_end":138682,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138683,"byte_end":138703,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138704,"byte_end":138707,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138708,"byte_end":138730,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138731,"byte_end":138754,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138755,"byte_end":138791,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138792,"byte_end":138799,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138800,"byte_end":138807,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138808,"byte_end":138815,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138816,"byte_end":138819,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138820,"byte_end":138899,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138900,"byte_end":138978,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":138979,"byte_end":139013,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139014,"byte_end":139017,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139018,"byte_end":139025,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139026,"byte_end":139046,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139047,"byte_end":139050,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139051,"byte_end":139131,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139132,"byte_end":139166,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139167,"byte_end":139181,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139182,"byte_end":139204,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139205,"byte_end":139212,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139213,"byte_end":139216,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139217,"byte_end":139227,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139228,"byte_end":139231,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139232,"byte_end":139276,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139277,"byte_end":139306,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139307,"byte_end":139346,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139347,"byte_end":139359,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139360,"byte_end":139367,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139368,"byte_end":139375,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139376,"byte_end":139379,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139380,"byte_end":139460,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]. For","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139461,"byte_end":139536,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/ example:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139537,"byte_end":139549,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139550,"byte_end":139553,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139554,"byte_end":139561,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139562,"byte_end":139582,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139583,"byte_end":139586,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139587,"byte_end":139625,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139626,"byte_end":139660,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139661,"byte_end":139702,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139703,"byte_end":139710,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139711,"byte_end":139714,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139715,"byte_end":139773,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139774,"byte_end":139807,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139808,"byte_end":139815,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139816,"byte_end":139823,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139824,"byte_end":139827,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt\"","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139828,"byte_end":139896,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ feature flag is enabled.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139897,"byte_end":139925,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139926,"byte_end":139929,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139930,"byte_end":139971,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":139972,"byte_end":140005,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140006,"byte_end":140052,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140053,"byte_end":140096,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140097,"byte_end":140139,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140140,"byte_end":140181,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140182,"byte_end":140185,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140186,"byte_end":140215,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140216,"byte_end":140219,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140220,"byte_end":140300,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140301,"byte_end":140380,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140381,"byte_end":140460,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140461,"byte_end":140501,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140502,"byte_end":140505,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140506,"byte_end":140580,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140581,"byte_end":140661,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140662,"byte_end":140665,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Be aware that if you call a non-async method from async code, that non-async","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140666,"byte_end":140746,"line_start":125,"line_end":125,"column_start":1,"column_end":81}},{"value":"/ method is still inside the asynchronous context, so you should also avoid","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140747,"byte_end":140824,"line_start":126,"line_end":126,"column_start":1,"column_end":78}},{"value":"/ blocking operations there. This includes destructors of objects destroyed in","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140825,"byte_end":140905,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ async code.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140906,"byte_end":140921,"line_start":128,"line_end":128,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140922,"byte_end":140925,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140926,"byte_end":140949,"line_start":130,"line_end":130,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140950,"byte_end":140953,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":140954,"byte_end":141034,"line_start":132,"line_end":132,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141035,"byte_end":141101,"line_start":133,"line_end":133,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141102,"byte_end":141169,"line_start":134,"line_end":134,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141170,"byte_end":141244,"line_start":135,"line_end":135,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141245,"byte_end":141257,"line_start":136,"line_end":136,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141258,"byte_end":141261,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141262,"byte_end":141269,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141270,"byte_end":141290,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141291,"byte_end":141294,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141295,"byte_end":141318,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141319,"byte_end":141348,"line_start":142,"line_end":142,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141349,"byte_end":141411,"line_start":143,"line_end":143,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141412,"byte_end":141419,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141420,"byte_end":141427,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141428,"byte_end":141435,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141436,"byte_end":141439,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141440,"byte_end":141514,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141515,"byte_end":141582,"line_start":149,"line_end":149,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141583,"byte_end":141586,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141587,"byte_end":141598,"line_start":151,"line_end":151,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141599,"byte_end":141621,"line_start":152,"line_end":152,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141622,"byte_end":141686,"line_start":153,"line_end":153,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141687,"byte_end":141727,"line_start":154,"line_end":154,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141728,"byte_end":141790,"line_start":155,"line_end":155,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141791,"byte_end":141819,"line_start":156,"line_end":156,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141820,"byte_end":141827,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141828,"byte_end":141831,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141832,"byte_end":141861,"line_start":159,"line_end":159,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141862,"byte_end":141907,"line_start":160,"line_end":160,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141908,"byte_end":141920,"line_start":161,"line_end":161,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141921,"byte_end":141928,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141929,"byte_end":141936,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141937,"byte_end":141940,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141941,"byte_end":141964,"line_start":165,"line_end":165,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141965,"byte_end":141968,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ When using the [multi-threaded runtime][rt-multi-thread], the [`task::block_in_place`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":141969,"byte_end":142059,"line_start":167,"line_end":167,"column_start":1,"column_end":91}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142060,"byte_end":142134,"line_start":168,"line_end":168,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142135,"byte_end":142211,"line_start":169,"line_end":169,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142212,"byte_end":142286,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142287,"byte_end":142366,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142367,"byte_end":142449,"line_start":172,"line_end":172,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142450,"byte_end":142471,"line_start":173,"line_end":173,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142472,"byte_end":142475,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142476,"byte_end":142492,"line_start":175,"line_end":175,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142493,"byte_end":142496,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142497,"byte_end":142504,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142505,"byte_end":142525,"line_start":178,"line_end":178,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142526,"byte_end":142529,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142530,"byte_end":142553,"line_start":180,"line_end":180,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142554,"byte_end":142596,"line_start":181,"line_end":181,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142597,"byte_end":142659,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142660,"byte_end":142688,"line_start":183,"line_end":183,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142689,"byte_end":142696,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142697,"byte_end":142700,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142701,"byte_end":142746,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142747,"byte_end":142754,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142755,"byte_end":142762,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142763,"byte_end":142766,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142767,"byte_end":142785,"line_start":190,"line_end":190,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142786,"byte_end":142789,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142790,"byte_end":142864,"line_start":192,"line_end":192,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142865,"byte_end":142943,"line_start":193,"line_end":193,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":142944,"byte_end":143020,"line_start":194,"line_end":194,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143021,"byte_end":143078,"line_start":195,"line_end":195,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143079,"byte_end":143157,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143158,"byte_end":143186,"line_start":197,"line_end":197,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143187,"byte_end":143190,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143191,"byte_end":143202,"line_start":199,"line_end":199,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143203,"byte_end":143223,"line_start":200,"line_end":200,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143224,"byte_end":143227,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143228,"byte_end":143266,"line_start":202,"line_end":202,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143267,"byte_end":143278,"line_start":203,"line_end":203,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143279,"byte_end":143306,"line_start":204,"line_end":204,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143307,"byte_end":143325,"line_start":205,"line_end":205,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143326,"byte_end":143368,"line_start":206,"line_end":206,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143369,"byte_end":143380,"line_start":207,"line_end":207,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143381,"byte_end":143384,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143385,"byte_end":143452,"line_start":209,"line_end":209,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143453,"byte_end":143485,"line_start":210,"line_end":210,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143486,"byte_end":143522,"line_start":211,"line_end":211,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143523,"byte_end":143528,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143529,"byte_end":143542,"line_start":213,"line_end":213,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143543,"byte_end":143550,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143551,"byte_end":143558,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143559,"byte_end":143562,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ### Cooperative scheduling","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143563,"byte_end":143593,"line_start":217,"line_end":217,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143594,"byte_end":143597,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ A single call to [`poll`] on a top-level task may potentially do a lot of","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143598,"byte_end":143675,"line_start":219,"line_end":219,"column_start":1,"column_end":78}},{"value":"/ work before it returns `Poll::Pending`. If a task runs for a long period of","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143676,"byte_end":143755,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ time without yielding back to the executor, it can starve other tasks","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143756,"byte_end":143829,"line_start":221,"line_end":221,"column_start":1,"column_end":74}},{"value":"/ waiting on that executor to execute them, or drive underlying resources.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143830,"byte_end":143906,"line_start":222,"line_end":222,"column_start":1,"column_end":77}},{"value":"/ Since Rust does not have a runtime, it is difficult to forcibly preempt a","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143907,"byte_end":143984,"line_start":223,"line_end":223,"column_start":1,"column_end":78}},{"value":"/ long-running task. Instead, this module provides an opt-in mechanism for","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":143985,"byte_end":144061,"line_start":224,"line_end":224,"column_start":1,"column_end":77}},{"value":"/ futures to collaborate with the executor to avoid starvation.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144062,"byte_end":144127,"line_start":225,"line_end":225,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144128,"byte_end":144131,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ Consider a future like this one:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144132,"byte_end":144168,"line_start":227,"line_end":227,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144169,"byte_end":144172,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144173,"byte_end":144180,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/ # use tokio_stream::{Stream, StreamExt};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144181,"byte_end":144225,"line_start":230,"line_end":230,"column_start":1,"column_end":45}},{"value":"/ async fn drop_all<I: Stream + Unpin>(mut input: I) {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144226,"byte_end":144282,"line_start":231,"line_end":231,"column_start":1,"column_end":57}},{"value":"/     while let Some(_) = input.next().await {}","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144283,"byte_end":144332,"line_start":232,"line_end":232,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144333,"byte_end":144338,"line_start":233,"line_end":233,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144339,"byte_end":144346,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144347,"byte_end":144350,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ It may look harmless, but consider what happens under heavy load if the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144351,"byte_end":144426,"line_start":236,"line_end":236,"column_start":1,"column_end":76}},{"value":"/ input stream is _always_ ready. If we spawn `drop_all`, the task will never","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144427,"byte_end":144506,"line_start":237,"line_end":237,"column_start":1,"column_end":80}},{"value":"/ yield, and will starve other tasks and resources on the same executor.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144507,"byte_end":144581,"line_start":238,"line_end":238,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144582,"byte_end":144585,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ To account for this, Tokio has explicit yield points in a number of library","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144586,"byte_end":144665,"line_start":240,"line_end":240,"column_start":1,"column_end":80}},{"value":"/ functions, which force tasks to return to the executor periodically.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144666,"byte_end":144738,"line_start":241,"line_end":241,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144739,"byte_end":144742,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144743,"byte_end":144746,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ #### unconstrained","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144747,"byte_end":144769,"line_start":244,"line_end":244,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144770,"byte_end":144773,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ If necessary, [`task::unconstrained`] lets you opt a future out of of Tokio's cooperative","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144774,"byte_end":144867,"line_start":246,"line_end":246,"column_start":1,"column_end":94}},{"value":"/ scheduling. When a future is wrapped with `unconstrained`, it will never be forced to yield to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144868,"byte_end":144966,"line_start":247,"line_end":247,"column_start":1,"column_end":99}},{"value":"/ Tokio. For example:","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144967,"byte_end":144990,"line_start":248,"line_end":248,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144991,"byte_end":144994,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":144995,"byte_end":145002,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145003,"byte_end":145023,"line_start":251,"line_end":251,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145024,"byte_end":145047,"line_start":252,"line_end":252,"column_start":1,"column_end":24}},{"value":"/ use tokio::{task, sync::mpsc};","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145048,"byte_end":145082,"line_start":253,"line_end":253,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145083,"byte_end":145086,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ let fut = async {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145087,"byte_end":145108,"line_start":255,"line_end":255,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145109,"byte_end":145162,"line_start":256,"line_end":256,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145163,"byte_end":145166,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/     for i in 0..1000 {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145167,"byte_end":145193,"line_start":258,"line_end":258,"column_start":1,"column_end":27}},{"value":"/         let _ = tx.send(());","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145194,"byte_end":145226,"line_start":259,"line_end":259,"column_start":1,"column_end":33}},{"value":"/         // This will always be ready. If coop was in effect, this code would be forced to yield","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145227,"byte_end":145326,"line_start":260,"line_end":260,"column_start":1,"column_end":100}},{"value":"/         // periodically. However, if left unconstrained, then this code will never yield.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145327,"byte_end":145420,"line_start":261,"line_end":261,"column_start":1,"column_end":94}},{"value":"/         rx.recv().await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145421,"byte_end":145449,"line_start":262,"line_end":262,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145450,"byte_end":145459,"line_start":263,"line_end":263,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145460,"byte_end":145466,"line_start":264,"line_end":264,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145467,"byte_end":145470,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ task::unconstrained(fut).await;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145471,"byte_end":145506,"line_start":266,"line_end":266,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145507,"byte_end":145514,"line_start":267,"line_end":267,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145515,"byte_end":145522,"line_start":268,"line_end":268,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145523,"byte_end":145526,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145527,"byte_end":145584,"line_start":270,"line_end":270,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145585,"byte_end":145642,"line_start":271,"line_end":271,"column_start":1,"column_end":58}},{"value":"/ [rt-multi-thread]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145643,"byte_end":145706,"line_start":272,"line_end":272,"column_start":1,"column_end":64}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145707,"byte_end":145756,"line_start":273,"line_end":273,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145757,"byte_end":145806,"line_start":274,"line_end":274,"column_start":1,"column_end":50}},{"value":"/ [`task::unconstrained`]: crate::task::unconstrained()","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145807,"byte_end":145864,"line_start":275,"line_end":275,"column_start":1,"column_end":58}},{"value":"/ [`poll`]: method@std::future::Future::poll","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/task/mod.rs","byte_start":145865,"byte_end":145911,"line_start":276,"line_end":276,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":951},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":152072,"byte_end":152078,"line_start":47,"line_end":47,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":950},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":151981,"byte_end":152010,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":152015,"byte_end":152018,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":152023,"byte_end":152062,"line_start":46,"line_end":46,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":952},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":152109,"byte_end":152115,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":950},"children":[],"decl_id":null,"docs":" Node type.\n","sig":null,"attributes":[{"value":"/ Node type.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":152085,"byte_end":152099,"line_start":49,"line_end":49,"column_start":5,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":998},"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20836,"byte_end":20842,"line_start":573,"line_end":573,"column_start":9,"column_end":15},"name":"stream","qualname":"::stream","value":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0\n release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]\n crate.","sig":null,"attributes":[{"value":"/ Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":19340,"byte_end":19421,"line_start":536,"line_end":536,"column_start":1,"column_end":82}},{"value":"/ release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":19422,"byte_end":19511,"line_start":537,"line_end":537,"column_start":1,"column_end":90}},{"value":"/ crate.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":19512,"byte_end":19522,"line_start":538,"line_end":538,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":19523,"byte_end":19526,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ # Why was `Stream` not included in Tokio 1.0?","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":19527,"byte_end":19576,"line_start":540,"line_end":540,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":19577,"byte_end":19580,"line_start":541,"line_end":541,"column_start":1,"column_end":4}},{"value":"/ Originally, we had planned to ship Tokio 1.0 with a stable `Stream` type","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":19581,"byte_end":19657,"line_start":542,"line_end":542,"column_start":1,"column_end":77}},{"value":"/ but unfortunately the [RFC] had not been merged in time for `Stream` to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":19658,"byte_end":19733,"line_start":543,"line_end":543,"column_start":1,"column_end":76}},{"value":"/ reach `std` on a stable compiler in time for the 1.0 release of Tokio. For","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":19734,"byte_end":19812,"line_start":544,"line_end":544,"column_start":1,"column_end":79}},{"value":"/ this reason, the team has decided to move all `Stream` based utilities to","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":19813,"byte_end":19890,"line_start":545,"line_end":545,"column_start":1,"column_end":78}},{"value":"/ the [`tokio-stream`] crate. While this is not ideal, once `Stream` has made","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":19891,"byte_end":19970,"line_start":546,"line_end":546,"column_start":1,"column_end":80}},{"value":"/ it into the standard library and the MSRV period has passed, we will implement","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":19971,"byte_end":20053,"line_start":547,"line_end":547,"column_start":1,"column_end":83}},{"value":"/ stream for our different types.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20054,"byte_end":20089,"line_start":548,"line_end":548,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20090,"byte_end":20093,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ While this may seem unfortunate, not all is lost as you can get much of the","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20094,"byte_end":20173,"line_start":550,"line_end":550,"column_start":1,"column_end":80}},{"value":"/ `Stream` support with `async/await` and `while let` loops. It is also possible","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20174,"byte_end":20256,"line_start":551,"line_end":551,"column_start":1,"column_end":83}},{"value":"/ to create a `impl Stream` from `async fn` using the [`async-stream`] crate.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20257,"byte_end":20336,"line_start":552,"line_end":552,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20337,"byte_end":20340,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ [`tokio-stream`]: https://docs.rs/tokio-stream","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20341,"byte_end":20391,"line_start":554,"line_end":554,"column_start":1,"column_end":51}},{"value":"/ [`async-stream`]: https://docs.rs/async-stream","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20392,"byte_end":20442,"line_start":555,"line_end":555,"column_start":1,"column_end":51}},{"value":"/ [RFC]: https://github.com/rust-lang/rfcs/pull/2996","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20443,"byte_end":20497,"line_start":556,"line_end":556,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20498,"byte_end":20501,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20502,"byte_end":20515,"line_start":558,"line_end":558,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20516,"byte_end":20519,"line_start":559,"line_end":559,"column_start":1,"column_end":4}},{"value":"/ Convert a [`sync::mpsc::Receiver`] to an `impl Stream`.","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20520,"byte_end":20579,"line_start":560,"line_end":560,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20580,"byte_end":20583,"line_start":561,"line_end":561,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20584,"byte_end":20602,"line_start":562,"line_end":562,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20603,"byte_end":20629,"line_start":563,"line_end":563,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20630,"byte_end":20633,"line_start":564,"line_end":564,"column_start":1,"column_end":4}},{"value":"/ let (tx, mut rx) = mpsc::channel::<usize>(16);","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20634,"byte_end":20684,"line_start":565,"line_end":565,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20685,"byte_end":20688,"line_start":566,"line_end":566,"column_start":1,"column_end":4}},{"value":"/ let stream = async_stream::stream! {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20689,"byte_end":20729,"line_start":567,"line_end":567,"column_start":1,"column_end":41}},{"value":"/     while let Some(item) = rx.recv().await {","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20730,"byte_end":20778,"line_start":568,"line_end":568,"column_start":1,"column_end":49}},{"value":"/         yield item;","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20779,"byte_end":20802,"line_start":569,"line_end":569,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20803,"byte_end":20812,"line_start":570,"line_end":570,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20813,"byte_end":20819,"line_start":571,"line_end":571,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":20820,"byte_end":20827,"line_start":572,"line_end":572,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/future/poll_fn.rs","byte_start":41781,"byte_end":41787,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/future/poll_fn.rs","byte_start":42001,"byte_end":42007,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/future/poll_fn.rs","byte_start":42149,"byte_end":42155,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":55252,"byte_end":55255,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":55415,"byte_end":55418,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":56047,"byte_end":56053,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":59120,"byte_end":59123,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":59266,"byte_end":59269,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":59938,"byte_end":59944,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":62938,"byte_end":62941,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1017},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":63084,"byte_end":63087,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":63478,"byte_end":63484,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":73242,"byte_end":73245,"line_start":217,"line_end":217,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":73393,"byte_end":73396,"line_start":225,"line_end":225,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":74273,"byte_end":74276,"line_start":259,"line_end":259,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":75074,"byte_end":75080,"line_start":290,"line_end":290,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":75883,"byte_end":75889,"line_start":320,"line_end":320,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":76695,"byte_end":76701,"line_start":350,"line_end":350,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":77502,"byte_end":77508,"line_start":380,"line_end":380,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":79382,"byte_end":79389,"line_start":29,"line_end":29,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":87952,"byte_end":87959,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":91687,"byte_end":91697,"line_start":50,"line_end":50,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":91737,"byte_end":91747,"line_start":52,"line_end":52,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":92056,"byte_end":92068,"line_start":64,"line_end":64,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":92108,"byte_end":92120,"line_start":66,"line_end":66,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":92417,"byte_end":92429,"line_start":77,"line_end":77,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":92469,"byte_end":92481,"line_start":79,"line_end":79,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_ptr.rs","byte_start":103826,"byte_end":103835,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_ptr.rs","byte_start":104009,"byte_end":104018,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_ptr.rs","byte_start":104165,"byte_end":104174,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_ptr.rs","byte_start":104287,"byte_end":104296,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u16.rs","byte_start":104640,"byte_end":104649,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u16.rs","byte_start":104674,"byte_end":104683,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u16.rs","byte_start":104693,"byte_end":104702,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u16.rs","byte_start":105194,"byte_end":105203,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u16.rs","byte_start":105488,"byte_end":105497,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u32.rs","byte_start":105838,"byte_end":105847,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u32.rs","byte_start":105872,"byte_end":105881,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u32.rs","byte_start":105891,"byte_end":105900,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u32.rs","byte_start":106085,"byte_end":106094,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u32.rs","byte_start":106379,"byte_end":106388,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u8.rs","byte_start":109060,"byte_end":109068,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u8.rs","byte_start":109093,"byte_end":109101,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u8.rs","byte_start":109111,"byte_end":109119,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u8.rs","byte_start":109300,"byte_end":109308,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u8.rs","byte_start":109592,"byte_end":109600,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_usize.rs","byte_start":109940,"byte_end":109951,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_usize.rs","byte_start":109976,"byte_end":109987,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_usize.rs","byte_start":109997,"byte_end":110008,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_usize.rs","byte_start":110697,"byte_end":110708,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_usize.rs","byte_start":110998,"byte_end":111009,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_usize.rs","byte_start":111173,"byte_end":111184,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/mutex.rs","byte_start":111517,"byte_end":111522,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/unsafe_cell.rs","byte_start":112200,"byte_end":112210,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/thread.rs","byte_start":117407,"byte_end":117417,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/thread.rs","byte_start":117682,"byte_end":117692,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/thread.rs","byte_start":118368,"byte_end":118373,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/thread.rs","byte_start":123139,"byte_end":123149,"line_start":207,"line_end":207,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/thread.rs","byte_start":123258,"byte_end":123270,"line_start":215,"line_end":215,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/thread.rs","byte_start":123625,"byte_end":123641,"line_start":233,"line_end":233,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":805},{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/thread.rs","byte_start":124906,"byte_end":124922,"line_start":276,"line_end":276,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":825},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/thread.rs","byte_start":125517,"byte_end":125529,"line_start":299,"line_end":299,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/thread.rs","byte_start":125709,"byte_end":125714,"line_start":308,"line_end":308,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/mod.rs","byte_start":116454,"byte_end":116457,"line_start":107,"line_end":107,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/mod.rs","byte_start":116546,"byte_end":116549,"line_start":113,"line_end":113,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/coop.rs","byte_start":128195,"byte_end":128201,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/coop.rs","byte_start":129789,"byte_end":129799,"line_start":89,"line_end":89,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/coop.rs","byte_start":130757,"byte_end":130773,"line_start":137,"line_end":137,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/coop.rs","byte_start":130905,"byte_end":130921,"line_start":143,"line_end":143,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/coop.rs","byte_start":132661,"byte_end":132667,"line_start":184,"line_end":184,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491832,"byte_end":14491839,"line_start":57,"line_end":57,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14497145,"byte_end":14497162,"line_start":198,"line_end":198,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504593,"byte_end":14504602,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504778,"byte_end":14504787,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505442,"byte_end":14505451,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505756,"byte_end":14505765,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506695,"byte_end":14506707,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14507085,"byte_end":14507097,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14509207,"byte_end":14509211,"line_start":382,"line_end":382,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14509256,"byte_end":14509260,"line_start":383,"line_end":383,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512131,"byte_end":14512137,"line_start":478,"line_end":478,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512174,"byte_end":14512180,"line_start":479,"line_end":479,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512218,"byte_end":14512226,"line_start":481,"line_end":481,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512263,"byte_end":14512271,"line_start":482,"line_end":482,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512287,"byte_end":14512293,"line_start":484,"line_end":484,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14517732,"byte_end":14517736,"line_start":669,"line_end":669,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14518128,"byte_end":14518134,"line_start":684,"line_end":684,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14518314,"byte_end":14518320,"line_start":693,"line_end":693,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1280}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14518470,"byte_end":14518478,"line_start":701,"line_end":701,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14524762,"byte_end":14524770,"line_start":866,"line_end":866,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14530099,"byte_end":14530107,"line_start":1017,"line_end":1017,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14530733,"byte_end":14530737,"line_start":1040,"line_end":1040,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14531516,"byte_end":14531520,"line_start":1066,"line_end":1066,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1305},{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14532181,"byte_end":14532185,"line_start":1086,"line_end":1086,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14532933,"byte_end":14532939,"line_start":1112,"line_end":1112,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14533338,"byte_end":14533344,"line_start":1129,"line_end":1129,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14533488,"byte_end":14533496,"line_start":1135,"line_end":1135,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14533631,"byte_end":14533640,"line_start":1141,"line_end":1141,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14533813,"byte_end":14533822,"line_start":1150,"line_end":1150,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/block.rs","byte_start":14541600,"byte_end":14541605,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1411},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/block.rs","byte_start":14551644,"byte_end":14551650,"line_start":362,"line_end":362,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/block.rs","byte_start":14552132,"byte_end":14552138,"line_start":379,"line_end":379,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1433},{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14557288,"byte_end":14557296,"line_start":159,"line_end":159,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14565874,"byte_end":14565882,"line_start":396,"line_end":396,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566078,"byte_end":14566086,"line_start":404,"line_end":404,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566102,"byte_end":14566108,"line_start":406,"line_end":406,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1513},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1522},{"krate":0,"index":1525},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589921,"byte_end":14589927,"line_start":1081,"line_end":1081,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14590059,"byte_end":14590065,"line_start":1089,"line_end":1089,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14590259,"byte_end":14590269,"line_start":1097,"line_end":1097,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14590390,"byte_end":14590400,"line_start":1105,"line_end":1105,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14590763,"byte_end":14590773,"line_start":1114,"line_end":1114,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14590937,"byte_end":14590943,"line_start":1122,"line_end":1122,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14592193,"byte_end":14592199,"line_start":1165,"line_end":1165,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14592666,"byte_end":14592672,"line_start":1182,"line_end":1182,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14592888,"byte_end":14592899,"line_start":1192,"line_end":1192,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1566},{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14595682,"byte_end":14595693,"line_start":1279,"line_end":1279,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14596356,"byte_end":14596367,"line_start":1302,"line_end":1302,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14597174,"byte_end":14597176,"line_start":23,"line_end":23,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1672}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14597470,"byte_end":14597472,"line_start":34,"line_end":34,"column_start":51,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14598421,"byte_end":14598425,"line_start":72,"line_end":72,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14599058,"byte_end":14599066,"line_start":96,"line_end":96,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14599332,"byte_end":14599336,"line_start":105,"line_end":105,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14599385,"byte_end":14599389,"line_start":106,"line_end":106,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14599896,"byte_end":14599898,"line_start":128,"line_end":128,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14601206,"byte_end":14601208,"line_start":177,"line_end":177,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1728},{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14601758,"byte_end":14601760,"line_start":195,"line_end":195,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14602099,"byte_end":14602101,"line_start":207,"line_end":207,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14602424,"byte_end":14602426,"line_start":223,"line_end":223,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1746},{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14606819,"byte_end":14606821,"line_start":341,"line_end":341,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1759}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14607233,"byte_end":14607237,"line_start":359,"line_end":359,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1767}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14607422,"byte_end":14607426,"line_start":369,"line_end":369,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14608358,"byte_end":14608369,"line_start":406,"line_end":406,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/list.rs","byte_start":14610411,"byte_end":14610413,"line_start":66,"line_end":66,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1851}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/list.rs","byte_start":14616127,"byte_end":14616129,"line_start":223,"line_end":223,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/list.rs","byte_start":14616406,"byte_end":14616408,"line_start":232,"line_end":232,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/list.rs","byte_start":14620731,"byte_end":14620733,"line_start":363,"line_end":363,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1864}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14621407,"byte_end":14621422,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14621563,"byte_end":14621578,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1897}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14622251,"byte_end":14622268,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14623267,"byte_end":14623284,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14629395,"byte_end":14629410,"line_start":252,"line_end":252,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1936},{"krate":0,"index":1939},{"krate":0,"index":1940}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14633784,"byte_end":14633793,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1960}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14633953,"byte_end":14633962,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14634463,"byte_end":14634475,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14634508,"byte_end":14634520,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14634860,"byte_end":14634872,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14635423,"byte_end":14635435,"line_start":67,"line_end":67,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1972}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14635720,"byte_end":14635732,"line_start":76,"line_end":76,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14635982,"byte_end":14635991,"line_start":87,"line_end":87,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1975}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14636142,"byte_end":14636151,"line_start":94,"line_end":94,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14644489,"byte_end":14644494,"line_start":188,"line_end":188,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14644548,"byte_end":14644553,"line_start":189,"line_end":189,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14644607,"byte_end":14644617,"line_start":190,"line_end":190,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14644682,"byte_end":14644697,"line_start":191,"line_end":191,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14644762,"byte_end":14644778,"line_start":192,"line_end":192,"column_start":29,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14644845,"byte_end":14644861,"line_start":193,"line_end":193,"column_start":29,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14645542,"byte_end":14645554,"line_start":212,"line_end":212,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2040}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14645691,"byte_end":14645703,"line_start":218,"line_end":218,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14646511,"byte_end":14646516,"line_start":244,"line_end":244,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2048},{"krate":0,"index":2049},{"krate":0,"index":2052},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658153,"byte_end":14658158,"line_start":625,"line_end":625,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658242,"byte_end":14658247,"line_start":631,"line_end":631,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2065}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658379,"byte_end":14658384,"line_start":640,"line_end":640,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2068}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658775,"byte_end":14658785,"line_start":656,"line_end":656,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2072},{"krate":0,"index":2075},{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662512,"byte_end":14662522,"line_start":779,"line_end":779,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662869,"byte_end":14662879,"line_start":792,"line_end":792,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2084},{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663026,"byte_end":14663036,"line_start":799,"line_end":799,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2088}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663193,"byte_end":14663203,"line_start":805,"line_end":805,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2091}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663369,"byte_end":14663379,"line_start":811,"line_end":811,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2094}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663548,"byte_end":14663563,"line_start":819,"line_end":819,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2097}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664466,"byte_end":14664481,"line_start":848,"line_end":848,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664823,"byte_end":14664838,"line_start":861,"line_end":861,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2103},{"krate":0,"index":2104}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664981,"byte_end":14664996,"line_start":868,"line_end":868,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14665149,"byte_end":14665164,"line_start":874,"line_end":874,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14665326,"byte_end":14665341,"line_start":880,"line_end":880,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2113}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14665511,"byte_end":14665527,"line_start":888,"line_end":888,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2117},{"krate":0,"index":2120}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14667365,"byte_end":14667381,"line_start":940,"line_end":940,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2126}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14667481,"byte_end":14667497,"line_start":946,"line_end":946,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2130},{"krate":0,"index":2131}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14667640,"byte_end":14667656,"line_start":953,"line_end":953,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2135}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14667809,"byte_end":14667825,"line_start":959,"line_end":959,"column_start":49,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2139}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14667995,"byte_end":14668011,"line_start":965,"line_end":965,"column_start":53,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2143}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14676369,"byte_end":14676377,"line_start":255,"line_end":255,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14676410,"byte_end":14676418,"line_start":256,"line_end":256,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14677369,"byte_end":14677375,"line_start":298,"line_end":298,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14686214,"byte_end":14686220,"line_start":563,"line_end":563,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2227}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688130,"byte_end":14688138,"line_start":618,"line_end":618,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14699382,"byte_end":14699390,"line_start":892,"line_end":892,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2235},{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14699558,"byte_end":14699566,"line_start":900,"line_end":900,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2238}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14701438,"byte_end":14701444,"line_start":947,"line_end":947,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14711475,"byte_end":14711484,"line_start":349,"line_end":349,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14711646,"byte_end":14711655,"line_start":355,"line_end":355,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14711724,"byte_end":14711736,"line_start":359,"line_end":359,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14712035,"byte_end":14712047,"line_start":368,"line_end":368,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14712912,"byte_end":14712916,"line_start":400,"line_end":400,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2321},{"krate":0,"index":2323},{"krate":0,"index":2327},{"krate":0,"index":2329}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14717036,"byte_end":14717042,"line_start":547,"line_end":547,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2335},{"krate":0,"index":2337},{"krate":0,"index":2344},{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14726343,"byte_end":14726349,"line_start":835,"line_end":835,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2348}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14726799,"byte_end":14726807,"line_start":851,"line_end":851,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2353}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14733472,"byte_end":14733480,"line_start":1062,"line_end":1062,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2356}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14733938,"byte_end":14733946,"line_start":1078,"line_end":1078,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":2360}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14735017,"byte_end":14735022,"line_start":1107,"line_end":1107,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2366}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14738910,"byte_end":14738915,"line_start":1218,"line_end":1218,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14738952,"byte_end":14738957,"line_start":1219,"line_end":1219,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14739058,"byte_end":14739063,"line_start":1225,"line_end":1225,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2376}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14739440,"byte_end":14739445,"line_start":1243,"line_end":1243,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14740497,"byte_end":14740502,"line_start":1277,"line_end":1277,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14743459,"byte_end":14743464,"line_start":1370,"line_end":1370,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2402}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14747994,"byte_end":14748003,"line_start":123,"line_end":123,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2490}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14761376,"byte_end":14761385,"line_start":476,"line_end":476,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2494}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14761584,"byte_end":14761590,"line_start":484,"line_end":484,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2496},{"krate":0,"index":2497}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14763039,"byte_end":14763046,"line_start":526,"line_end":526,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2499},{"krate":0,"index":2500}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14764592,"byte_end":14764599,"line_start":570,"line_end":570,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2503},{"krate":0,"index":2504}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14766683,"byte_end":14766690,"line_start":635,"line_end":635,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14767940,"byte_end":14767947,"line_start":665,"line_end":665,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14767994,"byte_end":14768006,"line_start":669,"line_end":669,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2511}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14768099,"byte_end":14768111,"line_start":675,"line_end":675,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2513}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14768255,"byte_end":14768267,"line_start":681,"line_end":681,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14768314,"byte_end":14768329,"line_start":685,"line_end":685,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2516},{"krate":0,"index":2517}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14768847,"byte_end":14768862,"line_start":700,"line_end":700,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2519}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14769148,"byte_end":14769163,"line_start":709,"line_end":709,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14769256,"byte_end":14769262,"line_start":714,"line_end":714,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14773541,"byte_end":14773550,"line_start":125,"line_end":125,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2555},{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2563},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789896,"byte_end":14789911,"line_start":616,"line_end":616,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2572}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14790156,"byte_end":14790176,"line_start":625,"line_end":625,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2574}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14790426,"byte_end":14790441,"line_start":634,"line_end":634,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2576}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14790549,"byte_end":14790569,"line_start":640,"line_end":640,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2578}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828079,"byte_end":14828099,"line_start":26,"line_end":26,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2646},{"krate":0,"index":2649}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14831576,"byte_end":14831596,"line_start":130,"line_end":130,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2655},{"krate":0,"index":2656}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14831737,"byte_end":14831757,"line_start":138,"line_end":138,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2660}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14831943,"byte_end":14831963,"line_start":147,"line_end":147,"column_start":45,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2664}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14832145,"byte_end":14832165,"line_start":156,"line_end":156,"column_start":37,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2668}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14833566,"byte_end":14833587,"line_start":28,"line_end":28,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2706},{"krate":0,"index":2709},{"krate":0,"index":2712},{"krate":0,"index":2714}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14840470,"byte_end":14840491,"line_start":234,"line_end":234,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2717},{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14840621,"byte_end":14840642,"line_start":242,"line_end":242,"column_start":35,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2721}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14840763,"byte_end":14840784,"line_start":248,"line_end":248,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2724}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14840956,"byte_end":14840977,"line_start":257,"line_end":257,"column_start":34,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2727}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14841145,"byte_end":14841166,"line_start":266,"line_end":266,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2730}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14842651,"byte_end":14842678,"line_start":27,"line_end":27,"column_start":28,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2764},{"krate":0,"index":2767}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14846630,"byte_end":14846657,"line_start":146,"line_end":146,"column_start":43,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2773},{"krate":0,"index":2774}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14846801,"byte_end":14846828,"line_start":154,"line_end":154,"column_start":46,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2778}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14846963,"byte_end":14846990,"line_start":160,"line_end":160,"column_start":43,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14847176,"byte_end":14847203,"line_start":169,"line_end":169,"column_start":45,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":2786}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14847385,"byte_end":14847412,"line_start":178,"line_end":178,"column_start":37,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2790}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848557,"byte_end":14848572,"line_start":24,"line_end":24,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2816},{"krate":0,"index":2819}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14852391,"byte_end":14852406,"line_start":139,"line_end":139,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2824},{"krate":0,"index":2825}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14852541,"byte_end":14852556,"line_start":147,"line_end":147,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2829}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14852736,"byte_end":14852751,"line_start":156,"line_end":156,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2833}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14852927,"byte_end":14852942,"line_start":165,"line_end":165,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2837}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854168,"byte_end":14854184,"line_start":27,"line_end":27,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2870},{"krate":0,"index":2873},{"krate":0,"index":2876},{"krate":0,"index":2878}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14861390,"byte_end":14861406,"line_start":238,"line_end":238,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2881},{"krate":0,"index":2882}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14861540,"byte_end":14861556,"line_start":246,"line_end":246,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2885}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14861685,"byte_end":14861701,"line_start":252,"line_end":252,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2889}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14861881,"byte_end":14861897,"line_start":261,"line_end":261,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2893}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14862073,"byte_end":14862089,"line_start":270,"line_end":270,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2897}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14863331,"byte_end":14863353,"line_start":25,"line_end":25,"column_start":21,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2924},{"krate":0,"index":2927}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14867598,"byte_end":14867620,"line_start":152,"line_end":152,"column_start":32,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2932},{"krate":0,"index":2933}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14867754,"byte_end":14867776,"line_start":160,"line_end":160,"column_start":35,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2936}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14867905,"byte_end":14867927,"line_start":166,"line_end":166,"column_start":36,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2940}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14868107,"byte_end":14868129,"line_start":175,"line_end":175,"column_start":38,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2944}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14868305,"byte_end":14868327,"line_start":184,"line_end":184,"column_start":30,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2948}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14796177,"byte_end":14796183,"line_start":151,"line_end":151,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14796237,"byte_end":14796243,"line_start":152,"line_end":152,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14796477,"byte_end":14796492,"line_start":156,"line_end":156,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14796550,"byte_end":14796565,"line_start":157,"line_end":157,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14796772,"byte_end":14796792,"line_start":160,"line_end":160,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14796887,"byte_end":14796907,"line_start":166,"line_end":166,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14797006,"byte_end":14797022,"line_start":172,"line_end":172,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14797087,"byte_end":14797108,"line_start":173,"line_end":173,"column_start":25,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14797169,"byte_end":14797191,"line_start":174,"line_end":174,"column_start":25,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14797259,"byte_end":14797286,"line_start":175,"line_end":175,"column_start":28,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14797633,"byte_end":14797649,"line_start":185,"line_end":185,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14797714,"byte_end":14797735,"line_start":186,"line_end":186,"column_start":25,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14797796,"byte_end":14797818,"line_start":187,"line_end":187,"column_start":25,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14797886,"byte_end":14797913,"line_start":188,"line_end":188,"column_start":28,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14798005,"byte_end":14798011,"line_start":195,"line_end":195,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3015},{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3027}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14827047,"byte_end":14827053,"line_start":1067,"line_end":1067,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3030}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14827145,"byte_end":14827151,"line_start":1073,"line_end":1073,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3033}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/task/atomic_waker.rs","byte_start":14870079,"byte_end":14870090,"line_start":32,"line_end":32,"column_start":24,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/task/atomic_waker.rs","byte_start":14870114,"byte_end":14870125,"line_start":33,"line_end":33,"column_start":21,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/task/atomic_waker.rs","byte_start":14875064,"byte_end":14875075,"line_start":140,"line_end":140,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":3118},{"krate":0,"index":3119}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/task/atomic_waker.rs","byte_start":14883824,"byte_end":14883835,"line_start":344,"line_end":344,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3122}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/task/atomic_waker.rs","byte_start":14883921,"byte_end":14883932,"line_start":350,"line_end":350,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3124}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/task/atomic_waker.rs","byte_start":14884065,"byte_end":14884076,"line_start":356,"line_end":356,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/task/atomic_waker.rs","byte_start":14884101,"byte_end":14884112,"line_start":357,"line_end":357,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/task/atomic_waker.rs","byte_start":14884208,"byte_end":14884213,"line_start":364,"line_end":364,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3131},{"krate":0,"index":3132}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886698,"byte_end":14886706,"line_start":76,"line_end":76,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3188}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886814,"byte_end":14886822,"line_start":82,"line_end":82,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3191}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14887027,"byte_end":14887035,"line_start":90,"line_end":90,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3194}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14887168,"byte_end":14887176,"line_start":96,"line_end":96,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3197}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14887292,"byte_end":14887300,"line_start":102,"line_end":102,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14887325,"byte_end":14887333,"line_start":104,"line_end":104,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3202}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14887585,"byte_end":14887593,"line_start":115,"line_end":115,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3206}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14887877,"byte_end":14887885,"line_start":127,"line_end":127,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3209},{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":3212},{"krate":0,"index":3213},{"krate":0,"index":3215},{"krate":0,"index":3217},{"krate":0,"index":3219},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3222},{"krate":0,"index":3227},{"krate":0,"index":3233},{"krate":0,"index":3235}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14898575,"byte_end":14898583,"line_start":409,"line_end":409,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14898800,"byte_end":14898808,"line_start":414,"line_end":414,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14899251,"byte_end":14899259,"line_start":430,"line_end":430,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3242}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14899566,"byte_end":14899574,"line_start":439,"line_end":439,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14899590,"byte_end":14899598,"line_start":441,"line_end":441,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3247},{"krate":0,"index":3248}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904269,"byte_end":14904272,"line_start":120,"line_end":120,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3288}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14906741,"byte_end":14906750,"line_start":200,"line_end":200,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3295}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14906930,"byte_end":14906939,"line_start":206,"line_end":206,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14907139,"byte_end":14907148,"line_start":214,"line_end":214,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3299}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14907310,"byte_end":14907319,"line_start":220,"line_end":220,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14908121,"byte_end":14908128,"line_start":246,"line_end":246,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3317}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14908285,"byte_end":14908298,"line_start":253,"line_end":253,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3319},{"krate":0,"index":3320}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14908596,"byte_end":14908607,"line_start":265,"line_end":265,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3322},{"krate":0,"index":3323},{"krate":0,"index":3324},{"krate":0,"index":3325}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14910558,"byte_end":14910566,"line_start":338,"line_end":338,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14919550,"byte_end":14919558,"line_start":584,"line_end":584,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3342}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14919742,"byte_end":14919750,"line_start":593,"line_end":593,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3345}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920120,"byte_end":14920126,"line_start":604,"line_end":604,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3352},{"krate":0,"index":3355},{"krate":0,"index":3357},{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3362},{"krate":0,"index":3363}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14932027,"byte_end":14932033,"line_start":964,"line_end":964,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3366}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14932209,"byte_end":14932212,"line_start":973,"line_end":973,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3369},{"krate":0,"index":3370}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/wake_list.rs","byte_start":149317,"byte_end":149325,"line_start":12,"line_end":12,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/wake_list.rs","byte_start":150345,"byte_end":150353,"line_start":48,"line_end":48,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":151408,"byte_end":151418,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":151488,"byte_end":151498,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":154402,"byte_end":154410,"line_start":108,"line_end":108,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":154447,"byte_end":154455,"line_start":109,"line_end":109,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":154506,"byte_end":154516,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":154751,"byte_end":154761,"line_start":124,"line_end":124,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":157767,"byte_end":157777,"line_start":218,"line_end":218,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":158154,"byte_end":158164,"line_start":234,"line_end":234,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":158351,"byte_end":158361,"line_start":241,"line_end":241,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":159743,"byte_end":159751,"line_start":295,"line_end":295,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":161356,"byte_end":161364,"line_start":344,"line_end":344,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":18592,"byte_end":18598,"line_start":470,"line_end":470,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/macros/mod.rs","byte_start":23292,"byte_end":23299,"line_start":43,"line_end":43,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":63}},{"kind":"Mod","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":18651,"byte_end":18653,"line_start":478,"line_end":478,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":110}},{"kind":"Mod","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":18663,"byte_end":18666,"line_start":479,"line_end":479,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":358}},{"kind":"Mod","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":19203,"byte_end":19207,"line_start":519,"line_end":519,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1107}},{"kind":"Mod","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488806,"byte_end":14488815,"line_start":439,"line_end":439,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":1136}},{"kind":"Mod","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14488830,"byte_end":14488834,"line_start":441,"line_end":441,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1337}},{"kind":"Mod","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/mod.rs","byte_start":14539024,"byte_end":14539029,"line_start":102,"line_end":102,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1951}},{"kind":"Mod","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14489010,"byte_end":14489017,"line_start":449,"line_end":449,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":2251}},{"kind":"Mod","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mod.rs","byte_start":14489756,"byte_end":14489761,"line_start":472,"line_end":472,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":3256}},{"kind":"Mod","span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/lib.rs","byte_start":19252,"byte_end":19256,"line_start":525,"line_end":525,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":889}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/future/poll_fn.rs","byte_start":41781,"byte_end":41787,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/future/poll_fn.rs","byte_start":42001,"byte_end":42007,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/future/poll_fn.rs","byte_start":42149,"byte_end":42155,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":13761}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":52793,"byte_end":52802,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":173},"to":{"krate":0,"index":131}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":55252,"byte_end":55255,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":432},"to":{"krate":0,"index":131}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":55415,"byte_end":55418,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":2,"index":47602},"to":{"krate":0,"index":131}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_buf_read.rs","byte_start":56047,"byte_end":56053,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":5}},"from":{"krate":1,"index":10878},"to":{"krate":0,"index":131}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":59120,"byte_end":59123,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":432},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":59266,"byte_end":59269,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":2,"index":47602},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_read.rs","byte_start":59938,"byte_end":59944,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"kind":{"Impl":{"id":8}},"from":{"krate":1,"index":10878},"to":{"krate":0,"index":173}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":62938,"byte_end":62941,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":432},"to":{"krate":0,"index":212}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":63084,"byte_end":63087,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":2,"index":47602},"to":{"krate":0,"index":212}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_seek.rs","byte_start":63478,"byte_end":63484,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":1,"index":10878},"to":{"krate":0,"index":212}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":73242,"byte_end":73245,"line_start":217,"line_end":217,"column_start":53,"column_end":56},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":432},"to":{"krate":0,"index":252}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":73393,"byte_end":73396,"line_start":225,"line_end":225,"column_start":24,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":47602},"to":{"krate":0,"index":252}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":74273,"byte_end":74276,"line_start":259,"line_end":259,"column_start":21,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":7780},"to":{"krate":0,"index":252}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":75074,"byte_end":75080,"line_start":290,"line_end":290,"column_start":25,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":1,"index":10878},"to":{"krate":0,"index":252}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":75883,"byte_end":75889,"line_start":320,"line_end":320,"column_start":25,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":10878},"to":{"krate":0,"index":252}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":76695,"byte_end":76701,"line_start":350,"line_end":350,"column_start":25,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":10878},"to":{"krate":0,"index":252}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/async_write.rs","byte_start":77502,"byte_end":77508,"line_start":380,"line_end":380,"column_start":25,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":1,"index":10878},"to":{"krate":0,"index":252}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":79382,"byte_end":79389,"line_start":29,"line_end":29,"column_start":10,"column_end":17},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/io/read_buf.rs","byte_start":87952,"byte_end":87959,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":312},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":91017,"byte_end":91034,"line_start":19,"line_end":19,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":441},"to":{"krate":0,"index":385}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":91687,"byte_end":91697,"line_start":50,"line_end":50,"column_start":24,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":1,"index":11152},"to":{"krate":0,"index":385}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":91737,"byte_end":91747,"line_start":52,"line_end":52,"column_start":36,"column_end":46},"kind":{"Impl":{"id":22}},"from":{"krate":1,"index":11152},"to":{"krate":0,"index":441}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":92056,"byte_end":92068,"line_start":64,"line_end":64,"column_start":24,"column_end":36},"kind":{"Impl":{"id":23}},"from":{"krate":1,"index":11176},"to":{"krate":0,"index":385}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":92108,"byte_end":92120,"line_start":66,"line_end":66,"column_start":36,"column_end":48},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":11176},"to":{"krate":0,"index":441}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":92417,"byte_end":92429,"line_start":77,"line_end":77,"column_start":24,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":11189},"to":{"krate":0,"index":385}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/net/addr.rs","byte_start":92469,"byte_end":92481,"line_start":79,"line_end":79,"column_start":36,"column_end":48},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":11189},"to":{"krate":0,"index":441}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_ptr.rs","byte_start":103826,"byte_end":103835,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_ptr.rs","byte_start":104009,"byte_end":104018,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":463},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_ptr.rs","byte_start":104165,"byte_end":104174,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":463},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_ptr.rs","byte_start":104287,"byte_end":104296,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":463},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u16.rs","byte_start":104640,"byte_end":104649,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":489},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u16.rs","byte_start":104674,"byte_end":104683,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":489},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u16.rs","byte_start":104693,"byte_end":104702,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u16.rs","byte_start":105194,"byte_end":105203,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":489},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u16.rs","byte_start":105488,"byte_end":105497,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":489},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u32.rs","byte_start":105838,"byte_end":105847,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":511},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u32.rs","byte_start":105872,"byte_end":105881,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":511},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u32.rs","byte_start":105891,"byte_end":105900,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u32.rs","byte_start":106085,"byte_end":106094,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":511},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u32.rs","byte_start":106379,"byte_end":106388,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":511},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u8.rs","byte_start":109060,"byte_end":109068,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":533},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u8.rs","byte_start":109093,"byte_end":109101,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":533},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u8.rs","byte_start":109111,"byte_end":109119,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u8.rs","byte_start":109300,"byte_end":109308,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":533},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_u8.rs","byte_start":109592,"byte_end":109600,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":533},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_usize.rs","byte_start":109940,"byte_end":109951,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":554},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_usize.rs","byte_start":109976,"byte_end":109987,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":554},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_usize.rs","byte_start":109997,"byte_end":110008,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_usize.rs","byte_start":110697,"byte_end":110708,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":554},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_usize.rs","byte_start":110998,"byte_end":111009,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":554},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/atomic_usize.rs","byte_start":111173,"byte_end":111184,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":554},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/mutex.rs","byte_start":111517,"byte_end":111522,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/loom/std/unsafe_cell.rs","byte_start":112200,"byte_end":112210,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/thread.rs","byte_start":117407,"byte_end":117417,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/thread.rs","byte_start":117682,"byte_end":117692,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1048},"to":{"krate":0,"index":848}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/thread.rs","byte_start":118368,"byte_end":118373,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/thread.rs","byte_start":123139,"byte_end":123149,"line_start":207,"line_end":207,"column_start":18,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1048},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/thread.rs","byte_start":123258,"byte_end":123270,"line_start":215,"line_end":215,"column_start":17,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1052},"to":{"krate":0,"index":855}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/thread.rs","byte_start":123625,"byte_end":123641,"line_start":233,"line_end":233,"column_start":6,"column_end":22},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/thread.rs","byte_start":124906,"byte_end":124922,"line_start":276,"line_end":276,"column_start":15,"column_end":31},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1069},"to":{"krate":0,"index":848}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/thread.rs","byte_start":125517,"byte_end":125529,"line_start":299,"line_end":299,"column_start":6,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/thread.rs","byte_start":125709,"byte_end":125714,"line_start":308,"line_end":308,"column_start":6,"column_end":11},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/mod.rs","byte_start":115973,"byte_end":115977,"line_start":93,"line_end":93,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3275},"to":{"krate":0,"index":855}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/mod.rs","byte_start":115980,"byte_end":115984,"line_start":93,"line_end":93,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":3263},"to":{"krate":0,"index":855}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/mod.rs","byte_start":116454,"byte_end":116457,"line_start":107,"line_end":107,"column_start":17,"column_end":20},"kind":{"Impl":{"id":63}},"from":{"krate":5,"index":432},"to":{"krate":0,"index":855}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/park/mod.rs","byte_start":116546,"byte_end":116549,"line_start":113,"line_end":113,"column_start":17,"column_end":20},"kind":{"Impl":{"id":64}},"from":{"krate":5,"index":6652},"to":{"krate":0,"index":855}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/coop.rs","byte_start":128195,"byte_end":128201,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/coop.rs","byte_start":129789,"byte_end":129799,"line_start":89,"line_end":89,"column_start":23,"column_end":33},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":879},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/coop.rs","byte_start":130757,"byte_end":130773,"line_start":137,"line_end":137,"column_start":10,"column_end":26},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/coop.rs","byte_start":130905,"byte_end":130921,"line_start":143,"line_end":143,"column_start":19,"column_end":35},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1094},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/coop.rs","byte_start":132661,"byte_end":132667,"line_start":184,"line_end":184,"column_start":10,"column_end":16},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1079},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14491832,"byte_end":14491839,"line_start":57,"line_end":57,"column_start":6,"column_end":13},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/barrier.rs","byte_start":14497145,"byte_end":14497162,"line_start":198,"line_end":198,"column_start":6,"column_end":23},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504593,"byte_end":14504602,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3390},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14504778,"byte_end":14504787,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3390},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505442,"byte_end":14505451,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3397},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14505756,"byte_end":14505765,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3397},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14506695,"byte_end":14506707,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3411},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14507085,"byte_end":14507097,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3411},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14509207,"byte_end":14509211,"line_start":382,"line_end":382,"column_start":35,"column_end":39},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1242},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14509256,"byte_end":14509260,"line_start":383,"line_end":383,"column_start":35,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1242},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512131,"byte_end":14512137,"line_start":478,"line_end":478,"column_start":31,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512174,"byte_end":14512180,"line_start":479,"line_end":479,"column_start":31,"column_end":37},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512218,"byte_end":14512226,"line_start":481,"line_end":481,"column_start":31,"column_end":39},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512263,"byte_end":14512271,"line_start":482,"line_end":482,"column_start":31,"column_end":39},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14512287,"byte_end":14512293,"line_start":484,"line_end":484,"column_start":9,"column_end":15},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14517732,"byte_end":14517736,"line_start":669,"line_end":669,"column_start":6,"column_end":10},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14518128,"byte_end":14518134,"line_start":684,"line_end":684,"column_start":19,"column_end":25},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14518314,"byte_end":14518320,"line_start":693,"line_end":693,"column_start":18,"column_end":24},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14518470,"byte_end":14518478,"line_start":701,"line_end":701,"column_start":9,"column_end":17},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14524762,"byte_end":14524770,"line_start":866,"line_end":866,"column_start":16,"column_end":24},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14530099,"byte_end":14530107,"line_start":1017,"line_end":1017,"column_start":18,"column_end":26},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14530733,"byte_end":14530737,"line_start":1040,"line_end":1040,"column_start":13,"column_end":17},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14531516,"byte_end":14531520,"line_start":1066,"line_end":1066,"column_start":24,"column_end":28},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1242},"to":{"krate":2,"index":13761}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14532181,"byte_end":14532185,"line_start":1086,"line_end":1086,"column_start":22,"column_end":26},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1242},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14532933,"byte_end":14532939,"line_start":1112,"line_end":1112,"column_start":35,"column_end":41},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1233},"to":{"krate":0,"index":950}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14533338,"byte_end":14533344,"line_start":1129,"line_end":1129,"column_start":24,"column_end":30},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14533488,"byte_end":14533496,"line_start":1135,"line_end":1135,"column_start":24,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14533631,"byte_end":14533640,"line_start":1141,"line_end":1141,"column_start":13,"column_end":22},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/broadcast.rs","byte_start":14533813,"byte_end":14533822,"line_start":1150,"line_end":1150,"column_start":22,"column_end":31},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1238},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/block.rs","byte_start":14541600,"byte_end":14541605,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/block.rs","byte_start":14551644,"byte_end":14551650,"line_start":362,"line_end":362,"column_start":9,"column_end":15},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/block.rs","byte_start":14552132,"byte_end":14552138,"line_start":379,"line_end":379,"column_start":31,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1389},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14557288,"byte_end":14557296,"line_start":159,"line_end":159,"column_start":9,"column_end":17},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14565874,"byte_end":14565882,"line_start":396,"line_end":396,"column_start":24,"column_end":32},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1482},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566078,"byte_end":14566086,"line_start":404,"line_end":404,"column_start":19,"column_end":27},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1482},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14566102,"byte_end":14566108,"line_start":406,"line_end":406,"column_start":9,"column_end":15},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14589921,"byte_end":14589927,"line_start":1081,"line_end":1081,"column_start":19,"column_end":25},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1469},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14590059,"byte_end":14590065,"line_start":1089,"line_end":1089,"column_start":24,"column_end":30},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1469},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14590259,"byte_end":14590269,"line_start":1097,"line_end":1097,"column_start":19,"column_end":29},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1472},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14590390,"byte_end":14590400,"line_start":1105,"line_end":1105,"column_start":9,"column_end":19},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14590763,"byte_end":14590773,"line_start":1114,"line_end":1114,"column_start":24,"column_end":34},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1472},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14590937,"byte_end":14590943,"line_start":1122,"line_end":1122,"column_start":9,"column_end":15},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14592193,"byte_end":14592199,"line_start":1165,"line_end":1165,"column_start":18,"column_end":24},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1475},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14592666,"byte_end":14592672,"line_start":1182,"line_end":1182,"column_start":24,"column_end":30},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1475},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14592888,"byte_end":14592899,"line_start":1192,"line_end":1192,"column_start":9,"column_end":20},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14595682,"byte_end":14595693,"line_start":1279,"line_end":1279,"column_start":18,"column_end":29},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1479},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/bounded.rs","byte_start":14596356,"byte_end":14596367,"line_start":1302,"line_end":1302,"column_start":24,"column_end":35},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1479},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14597174,"byte_end":14597176,"line_start":23,"line_end":23,"column_start":39,"column_end":41},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1665},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14597470,"byte_end":14597472,"line_start":34,"line_end":34,"column_start":51,"column_end":53},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1673},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14598421,"byte_end":14598425,"line_start":72,"line_end":72,"column_start":27,"column_end":31},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1686},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14599058,"byte_end":14599066,"line_start":96,"line_end":96,"column_start":24,"column_end":32},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1699},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14599332,"byte_end":14599336,"line_start":105,"line_end":105,"column_start":40,"column_end":44},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1686},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14599385,"byte_end":14599389,"line_start":106,"line_end":106,"column_start":40,"column_end":44},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1686},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14599896,"byte_end":14599898,"line_start":128,"line_end":128,"column_start":12,"column_end":14},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14601206,"byte_end":14601208,"line_start":177,"line_end":177,"column_start":23,"column_end":25},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14601758,"byte_end":14601760,"line_start":195,"line_end":195,"column_start":22,"column_end":24},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1665},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14602099,"byte_end":14602101,"line_start":207,"line_end":207,"column_start":21,"column_end":23},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1665},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14602424,"byte_end":14602426,"line_start":223,"line_end":223,"column_start":23,"column_end":25},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14606819,"byte_end":14606821,"line_start":341,"line_end":341,"column_start":32,"column_end":34},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1673},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14607233,"byte_end":14607237,"line_start":359,"line_end":359,"column_start":12,"column_end":16},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14607422,"byte_end":14607426,"line_start":369,"line_end":369,"column_start":21,"column_end":25},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1686},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/chan.rs","byte_start":14608358,"byte_end":14608369,"line_start":406,"line_end":406,"column_start":20,"column_end":31},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":554},"to":{"krate":0,"index":1681}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/list.rs","byte_start":14610411,"byte_end":14610413,"line_start":66,"line_end":66,"column_start":9,"column_end":11},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/list.rs","byte_start":14616127,"byte_end":14616129,"line_start":223,"line_end":223,"column_start":24,"column_end":26},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1823},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/list.rs","byte_start":14616406,"byte_end":14616408,"line_start":232,"line_end":232,"column_start":9,"column_end":11},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/list.rs","byte_start":14620731,"byte_end":14620733,"line_start":363,"line_end":363,"column_start":24,"column_end":26},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1827},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14621407,"byte_end":14621422,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1889},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14621563,"byte_end":14621578,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1889},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14622251,"byte_end":14622268,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1898},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14623267,"byte_end":14623284,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/unbounded.rs","byte_start":14629395,"byte_end":14629410,"line_start":252,"line_end":252,"column_start":9,"column_end":24},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14633784,"byte_end":14633793,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3431},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14633953,"byte_end":14633962,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3431},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14634463,"byte_end":14634475,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3438},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14634508,"byte_end":14634520,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3438},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14634860,"byte_end":14634872,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3438},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14635423,"byte_end":14635435,"line_start":67,"line_end":67,"column_start":23,"column_end":35},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3460},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14635720,"byte_end":14635732,"line_start":76,"line_end":76,"column_start":16,"column_end":28},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3460},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14635982,"byte_end":14635991,"line_start":87,"line_end":87,"column_start":23,"column_end":32},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3476},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mpsc/error.rs","byte_start":14636142,"byte_end":14636151,"line_start":94,"line_end":94,"column_start":16,"column_end":25},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3476},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14644489,"byte_end":14644494,"line_start":188,"line_end":188,"column_start":25,"column_end":30},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2008},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14644548,"byte_end":14644553,"line_start":189,"line_end":189,"column_start":25,"column_end":30},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2008},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14644607,"byte_end":14644617,"line_start":190,"line_end":190,"column_start":25,"column_end":35},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2012},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14644682,"byte_end":14644697,"line_start":191,"line_end":191,"column_start":25,"column_end":40},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14644762,"byte_end":14644778,"line_start":192,"line_end":192,"column_start":29,"column_end":45},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2019},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14644845,"byte_end":14644861,"line_start":193,"line_end":193,"column_start":29,"column_end":45},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2019},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14645542,"byte_end":14645554,"line_start":212,"line_end":212,"column_start":23,"column_end":35},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3483},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14645691,"byte_end":14645703,"line_start":218,"line_end":218,"column_start":16,"column_end":28},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3483},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14646511,"byte_end":14646516,"line_start":244,"line_end":244,"column_start":17,"column_end":22},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658153,"byte_end":14658158,"line_start":625,"line_end":625,"column_start":21,"column_end":26},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2008},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658242,"byte_end":14658247,"line_start":631,"line_end":631,"column_start":21,"column_end":26},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2008},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658379,"byte_end":14658384,"line_start":640,"line_end":640,"column_start":37,"column_end":42},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2008},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14658775,"byte_end":14658785,"line_start":656,"line_end":656,"column_start":21,"column_end":31},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662512,"byte_end":14662522,"line_start":779,"line_end":779,"column_start":26,"column_end":36},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2012},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14662869,"byte_end":14662879,"line_start":792,"line_end":792,"column_start":27,"column_end":37},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2012},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663026,"byte_end":14663036,"line_start":799,"line_end":799,"column_start":30,"column_end":40},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2012},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663193,"byte_end":14663203,"line_start":805,"line_end":805,"column_start":45,"column_end":55},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2012},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663369,"byte_end":14663379,"line_start":811,"line_end":811,"column_start":49,"column_end":59},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2012},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14663548,"byte_end":14663563,"line_start":819,"line_end":819,"column_start":17,"column_end":32},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664466,"byte_end":14664481,"line_start":848,"line_end":848,"column_start":26,"column_end":41},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664823,"byte_end":14664838,"line_start":861,"line_end":861,"column_start":27,"column_end":42},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14664981,"byte_end":14664996,"line_start":868,"line_end":868,"column_start":30,"column_end":45},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14665149,"byte_end":14665164,"line_start":874,"line_end":874,"column_start":45,"column_end":60},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14665326,"byte_end":14665341,"line_start":880,"line_end":880,"column_start":49,"column_end":64},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2016},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14665511,"byte_end":14665527,"line_start":888,"line_end":888,"column_start":21,"column_end":37},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14667365,"byte_end":14667381,"line_start":940,"line_end":940,"column_start":30,"column_end":46},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2019},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14667481,"byte_end":14667497,"line_start":946,"line_end":946,"column_start":31,"column_end":47},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2019},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14667640,"byte_end":14667656,"line_start":953,"line_end":953,"column_start":34,"column_end":50},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2019},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14667809,"byte_end":14667825,"line_start":959,"line_end":959,"column_start":49,"column_end":65},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2019},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/mutex.rs","byte_start":14667995,"byte_end":14668011,"line_start":965,"line_end":965,"column_start":53,"column_end":69},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2019},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14676369,"byte_end":14676377,"line_start":255,"line_end":255,"column_start":26,"column_end":34},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3512},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14676410,"byte_end":14676418,"line_start":256,"line_end":256,"column_start":26,"column_end":34},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3512},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14677369,"byte_end":14677375,"line_start":298,"line_end":298,"column_start":6,"column_end":12},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14686214,"byte_end":14686220,"line_start":563,"line_end":563,"column_start":18,"column_end":24},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3488},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14688130,"byte_end":14688138,"line_start":618,"line_end":618,"column_start":6,"column_end":14},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14699382,"byte_end":14699390,"line_start":892,"line_end":892,"column_start":17,"column_end":25},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3512},"to":{"krate":2,"index":13761}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14699558,"byte_end":14699566,"line_start":900,"line_end":900,"column_start":15,"column_end":23},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3512},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/notify.rs","byte_start":14701438,"byte_end":14701444,"line_start":947,"line_end":947,"column_start":35,"column_end":41},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3503},"to":{"krate":0,"index":950}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14711475,"byte_end":14711484,"line_start":349,"line_end":349,"column_start":27,"column_end":36},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3542},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14711646,"byte_end":14711655,"line_start":355,"line_end":355,"column_start":32,"column_end":41},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3542},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14711724,"byte_end":14711736,"line_start":359,"line_end":359,"column_start":27,"column_end":39},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3556},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14712035,"byte_end":14712047,"line_start":368,"line_end":368,"column_start":32,"column_end":44},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3556},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14712912,"byte_end":14712916,"line_start":400,"line_end":400,"column_start":6,"column_end":10},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14717036,"byte_end":14717042,"line_start":547,"line_end":547,"column_start":9,"column_end":15},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14726343,"byte_end":14726349,"line_start":835,"line_end":835,"column_start":18,"column_end":24},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3530},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14726799,"byte_end":14726807,"line_start":851,"line_end":851,"column_start":9,"column_end":17},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14733472,"byte_end":14733480,"line_start":1062,"line_end":1062,"column_start":18,"column_end":26},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3536},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14733938,"byte_end":14733946,"line_start":1078,"line_end":1078,"column_start":20,"column_end":28},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3536},"to":{"krate":2,"index":13761}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14735017,"byte_end":14735022,"line_start":1107,"line_end":1107,"column_start":9,"column_end":14},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14738910,"byte_end":14738915,"line_start":1218,"line_end":1218,"column_start":31,"column_end":36},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2311},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14738952,"byte_end":14738957,"line_start":1219,"line_end":1219,"column_start":31,"column_end":36},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2311},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14739058,"byte_end":14739063,"line_start":1225,"line_end":1225,"column_start":18,"column_end":23},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2311},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14739440,"byte_end":14739445,"line_start":1243,"line_end":1243,"column_start":36,"column_end":41},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2311},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14740497,"byte_end":14740502,"line_start":1277,"line_end":1277,"column_start":6,"column_end":11},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/oneshot.rs","byte_start":14743459,"byte_end":14743464,"line_start":1370,"line_end":1370,"column_start":21,"column_end":26},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3571},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14747994,"byte_end":14748003,"line_start":123,"line_end":123,"column_start":6,"column_end":15},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14761376,"byte_end":14761385,"line_start":476,"line_end":476,"column_start":21,"column_end":30},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2458},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14761584,"byte_end":14761590,"line_start":484,"line_end":484,"column_start":6,"column_end":12},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14763039,"byte_end":14763046,"line_start":526,"line_end":526,"column_start":17,"column_end":24},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2464},"to":{"krate":2,"index":13761}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14764592,"byte_end":14764599,"line_start":570,"line_end":570,"column_start":10,"column_end":17},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14766683,"byte_end":14766690,"line_start":635,"line_end":635,"column_start":15,"column_end":22},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2464},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14767940,"byte_end":14767947,"line_start":665,"line_end":665,"column_start":22,"column_end":29},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2464},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14767994,"byte_end":14768006,"line_start":669,"line_end":669,"column_start":6,"column_end":18},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14768099,"byte_end":14768111,"line_start":675,"line_end":675,"column_start":23,"column_end":35},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3587},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14768255,"byte_end":14768267,"line_start":681,"line_end":681,"column_start":28,"column_end":40},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3587},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14768314,"byte_end":14768329,"line_start":685,"line_end":685,"column_start":6,"column_end":21},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14768847,"byte_end":14768862,"line_start":700,"line_end":700,"column_start":23,"column_end":38},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3577},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14769148,"byte_end":14769163,"line_start":709,"line_end":709,"column_start":28,"column_end":43},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3577},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/batch_semaphore.rs","byte_start":14769256,"byte_end":14769262,"line_start":714,"line_end":714,"column_start":35,"column_end":41},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2470},"to":{"krate":0,"index":950}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14773541,"byte_end":14773550,"line_start":125,"line_end":125,"column_start":6,"column_end":15},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14789896,"byte_end":14789911,"line_start":616,"line_end":616,"column_start":10,"column_end":25},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14790156,"byte_end":14790176,"line_start":625,"line_end":625,"column_start":6,"column_end":26},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14790426,"byte_end":14790441,"line_start":634,"line_end":634,"column_start":15,"column_end":30},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3598},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/semaphore.rs","byte_start":14790549,"byte_end":14790569,"line_start":640,"line_end":640,"column_start":15,"column_end":35},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3605},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14828079,"byte_end":14828099,"line_start":26,"line_end":26,"column_start":28,"column_end":48},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14831576,"byte_end":14831596,"line_start":130,"line_end":130,"column_start":43,"column_end":63},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2637},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14831737,"byte_end":14831757,"line_start":138,"line_end":138,"column_start":43,"column_end":63},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2637},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14831943,"byte_end":14831963,"line_start":147,"line_end":147,"column_start":45,"column_end":65},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2637},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_read_guard.rs","byte_start":14832145,"byte_end":14832165,"line_start":156,"line_end":156,"column_start":37,"column_end":57},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":2637},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14833566,"byte_end":14833587,"line_start":28,"line_end":28,"column_start":17,"column_end":38},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14840470,"byte_end":14840491,"line_start":234,"line_end":234,"column_start":32,"column_end":53},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2698},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14840621,"byte_end":14840642,"line_start":242,"line_end":242,"column_start":35,"column_end":56},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2698},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14840763,"byte_end":14840784,"line_start":248,"line_end":248,"column_start":32,"column_end":53},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2698},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14840956,"byte_end":14840977,"line_start":257,"line_end":257,"column_start":34,"column_end":55},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2698},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard.rs","byte_start":14841145,"byte_end":14841166,"line_start":266,"line_end":266,"column_start":26,"column_end":47},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2698},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14842651,"byte_end":14842678,"line_start":27,"line_end":27,"column_start":28,"column_end":55},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14846630,"byte_end":14846657,"line_start":146,"line_end":146,"column_start":43,"column_end":70},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2754},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14846801,"byte_end":14846828,"line_start":154,"line_end":154,"column_start":46,"column_end":73},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2754},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14846963,"byte_end":14846990,"line_start":160,"line_end":160,"column_start":43,"column_end":70},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2754},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14847176,"byte_end":14847203,"line_start":169,"line_end":169,"column_start":45,"column_end":72},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2754},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":14847385,"byte_end":14847412,"line_start":178,"line_end":178,"column_start":37,"column_end":64},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2754},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14848557,"byte_end":14848572,"line_start":24,"line_end":24,"column_start":21,"column_end":36},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14852391,"byte_end":14852406,"line_start":139,"line_end":139,"column_start":32,"column_end":47},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2807},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14852541,"byte_end":14852556,"line_start":147,"line_end":147,"column_start":36,"column_end":51},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2807},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14852736,"byte_end":14852751,"line_start":156,"line_end":156,"column_start":38,"column_end":53},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2807},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/read_guard.rs","byte_start":14852927,"byte_end":14852942,"line_start":165,"line_end":165,"column_start":30,"column_end":45},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2807},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14854168,"byte_end":14854184,"line_start":27,"line_end":27,"column_start":21,"column_end":37},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14861390,"byte_end":14861406,"line_start":238,"line_end":238,"column_start":32,"column_end":48},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2860},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14861540,"byte_end":14861556,"line_start":246,"line_end":246,"column_start":35,"column_end":51},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2860},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14861685,"byte_end":14861701,"line_start":252,"line_end":252,"column_start":36,"column_end":52},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2860},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14861881,"byte_end":14861897,"line_start":261,"line_end":261,"column_start":38,"column_end":54},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2860},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard.rs","byte_start":14862073,"byte_end":14862089,"line_start":270,"line_end":270,"column_start":30,"column_end":46},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2860},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14863331,"byte_end":14863353,"line_start":25,"line_end":25,"column_start":21,"column_end":43},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":2914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14867598,"byte_end":14867620,"line_start":152,"line_end":152,"column_start":32,"column_end":54},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":2914},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14867754,"byte_end":14867776,"line_start":160,"line_end":160,"column_start":35,"column_end":57},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2914},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14867905,"byte_end":14867927,"line_start":166,"line_end":166,"column_start":36,"column_end":58},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2914},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14868107,"byte_end":14868129,"line_start":175,"line_end":175,"column_start":38,"column_end":60},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2914},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock/write_guard_mapped.rs","byte_start":14868305,"byte_end":14868327,"line_start":184,"line_end":184,"column_start":30,"column_end":52},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2914},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14796177,"byte_end":14796183,"line_start":151,"line_end":151,"column_start":25,"column_end":31},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3610},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14796237,"byte_end":14796243,"line_start":152,"line_end":152,"column_start":25,"column_end":31},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3610},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14796477,"byte_end":14796492,"line_start":156,"line_end":156,"column_start":25,"column_end":40},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":2807},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14796550,"byte_end":14796565,"line_start":157,"line_end":157,"column_start":25,"column_end":40},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2807},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14796772,"byte_end":14796792,"line_start":160,"line_end":160,"column_start":28,"column_end":48},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2637},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14796887,"byte_end":14796907,"line_start":166,"line_end":166,"column_start":28,"column_end":48},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2637},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14797006,"byte_end":14797022,"line_start":172,"line_end":172,"column_start":25,"column_end":41},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2860},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14797087,"byte_end":14797108,"line_start":173,"line_end":173,"column_start":25,"column_end":46},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":2698},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14797169,"byte_end":14797191,"line_start":174,"line_end":174,"column_start":25,"column_end":47},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2914},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14797259,"byte_end":14797286,"line_start":175,"line_end":175,"column_start":28,"column_end":55},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2754},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14797633,"byte_end":14797649,"line_start":185,"line_end":185,"column_start":25,"column_end":41},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2860},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14797714,"byte_end":14797735,"line_start":186,"line_end":186,"column_start":25,"column_end":46},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2698},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14797796,"byte_end":14797818,"line_start":187,"line_end":187,"column_start":25,"column_end":47},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2914},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14797886,"byte_end":14797913,"line_start":188,"line_end":188,"column_start":28,"column_end":55},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2754},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14798005,"byte_end":14798011,"line_start":195,"line_end":195,"column_start":17,"column_end":23},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14827047,"byte_end":14827053,"line_start":1067,"line_end":1067,"column_start":21,"column_end":27},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3610},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/rwlock.rs","byte_start":14827145,"byte_end":14827151,"line_start":1073,"line_end":1073,"column_start":29,"column_end":35},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3610},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/task/atomic_waker.rs","byte_start":14870079,"byte_end":14870090,"line_start":32,"line_end":32,"column_start":24,"column_end":35},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":9254}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/task/atomic_waker.rs","byte_start":14870114,"byte_end":14870125,"line_start":33,"line_end":33,"column_start":21,"column_end":32},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":9253}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/task/atomic_waker.rs","byte_start":14875064,"byte_end":14875075,"line_start":140,"line_end":140,"column_start":6,"column_end":17},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/task/atomic_waker.rs","byte_start":14883824,"byte_end":14883835,"line_start":344,"line_end":344,"column_start":18,"column_end":29},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/task/atomic_waker.rs","byte_start":14883921,"byte_end":14883932,"line_start":350,"line_end":350,"column_start":21,"column_end":32},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/task/atomic_waker.rs","byte_start":14884065,"byte_end":14884076,"line_start":356,"line_end":356,"column_start":22,"column_end":33},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/task/atomic_waker.rs","byte_start":14884101,"byte_end":14884112,"line_start":357,"line_end":357,"column_start":22,"column_end":33},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3095},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/task/atomic_waker.rs","byte_start":14884208,"byte_end":14884213,"line_start":364,"line_end":364,"column_start":19,"column_end":24},"kind":{"Impl":{"id":285}},"from":{"krate":2,"index":14073},"to":{"krate":0,"index":3127}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886698,"byte_end":14886706,"line_start":76,"line_end":76,"column_start":21,"column_end":29},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14886814,"byte_end":14886822,"line_start":82,"line_end":82,"column_start":36,"column_end":44},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14887027,"byte_end":14887035,"line_start":90,"line_end":90,"column_start":26,"column_end":34},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14887168,"byte_end":14887176,"line_start":96,"line_end":96,"column_start":34,"column_end":42},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14887292,"byte_end":14887300,"line_start":102,"line_end":102,"column_start":20,"column_end":28},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14887325,"byte_end":14887333,"line_start":104,"line_end":104,"column_start":18,"column_end":26},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14887585,"byte_end":14887593,"line_start":115,"line_end":115,"column_start":21,"column_end":29},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14887877,"byte_end":14887885,"line_start":127,"line_end":127,"column_start":9,"column_end":17},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":3181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14898575,"byte_end":14898583,"line_start":409,"line_end":409,"column_start":38,"column_end":46},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14898800,"byte_end":14898808,"line_start":414,"line_end":414,"column_start":31,"column_end":39},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14899251,"byte_end":14899259,"line_start":430,"line_end":430,"column_start":26,"column_end":34},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3618},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14899566,"byte_end":14899574,"line_start":439,"line_end":439,"column_start":31,"column_end":39},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3618},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/once_cell.rs","byte_start":14899590,"byte_end":14899598,"line_start":441,"line_end":441,"column_start":9,"column_end":17},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":3618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14904269,"byte_end":14904272,"line_start":120,"line_end":120,"column_start":13,"column_end":16},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14906741,"byte_end":14906750,"line_start":200,"line_end":200,"column_start":42,"column_end":51},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":3667},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14906930,"byte_end":14906939,"line_start":206,"line_end":206,"column_start":47,"column_end":56},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":3667},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14907139,"byte_end":14907148,"line_start":214,"line_end":214,"column_start":27,"column_end":36},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":3674},"to":{"krate":2,"index":10293}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14907310,"byte_end":14907319,"line_start":220,"line_end":220,"column_start":32,"column_end":41},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":3674},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14908121,"byte_end":14908128,"line_start":246,"line_end":246,"column_start":10,"column_end":17},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":3681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14908285,"byte_end":14908298,"line_start":253,"line_end":253,"column_start":10,"column_end":23},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":3696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14908596,"byte_end":14908607,"line_start":265,"line_end":265,"column_start":10,"column_end":21},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":3704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14910558,"byte_end":14910566,"line_start":338,"line_end":338,"column_start":9,"column_end":17},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":3635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14919550,"byte_end":14919558,"line_start":584,"line_end":584,"column_start":19,"column_end":27},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":3635},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14919742,"byte_end":14919750,"line_start":593,"line_end":593,"column_start":18,"column_end":26},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":3635},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14920120,"byte_end":14920126,"line_start":604,"line_end":604,"column_start":9,"column_end":15},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":3642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14932027,"byte_end":14932033,"line_start":964,"line_end":964,"column_start":18,"column_end":24},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":3642},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/sync/watch.rs","byte_start":14932209,"byte_end":14932212,"line_start":973,"line_end":973,"column_start":24,"column_end":27},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":3648},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/wake_list.rs","byte_start":149317,"byte_end":149325,"line_start":12,"line_end":12,"column_start":6,"column_end":14},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/wake_list.rs","byte_start":150345,"byte_end":150353,"line_start":48,"line_end":48,"column_start":15,"column_end":23},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":902},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":151408,"byte_end":151418,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":940},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":151488,"byte_end":151498,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":940},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":154402,"byte_end":154410,"line_start":108,"line_end":108,"column_start":31,"column_end":39},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":956},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":154447,"byte_end":154455,"line_start":109,"line_end":109,"column_start":31,"column_end":39},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":956},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":154506,"byte_end":154516,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":154751,"byte_end":154761,"line_start":124,"line_end":124,"column_start":15,"column_end":25},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":157767,"byte_end":157777,"line_start":218,"line_end":218,"column_start":30,"column_end":40},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":940},"to":{"krate":2,"index":10286}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":158154,"byte_end":158164,"line_start":234,"line_end":234,"column_start":15,"column_end":25},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":158351,"byte_end":158361,"line_start":241,"line_end":241,"column_start":27,"column_end":37},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":940},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":159743,"byte_end":159751,"line_start":295,"line_end":295,"column_start":9,"column_end":17},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/c/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.21.2/src/util/linked_list.rs","byte_start":161356,"byte_end":161364,"line_start":344,"line_end":344,"column_start":24,"column_end":32},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":956},"to":{"krate":2,"index":10286}}]}